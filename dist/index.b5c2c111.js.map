{"mappings":"kpBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,iSCQlD,SAASC,EAAOC,GACnB,IAAIC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAIH,EAAE,GACV,OAAOI,KAAKC,KAAKJ,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GAUlC,SAASG,EAAKC,EAAKP,GAItB,OAHAO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACJO,EA2BJ,SAASC,EAAID,EAAKP,EAAGS,GAIxB,OAHAF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GACXF,EAWJ,SAASG,EAASH,EAAKP,EAAGS,GAI7B,OAHAF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GACXF,EAyCJ,SAASI,EAAMJ,EAAKP,EAAGS,GAI1B,OAHAF,EAAI,GAAKP,EAAE,GAAKS,EAChBF,EAAI,GAAKP,EAAE,GAAKS,EAChBF,EAAI,GAAKP,EAAE,GAAKS,EACTF,EAqCJ,SAASK,EAAcZ,GAC1B,IAAIC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAIH,EAAE,GACV,OAAOC,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,EAsCxB,SAASU,EAAUN,EAAKP,GAC3B,IAAIC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAIH,EAAE,GACNc,EAAMb,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,EAQ9B,OAPIW,EAAM,IAENA,EAAM,EAAIV,KAAKC,KAAKS,IAExBP,EAAI,GAAKP,EAAE,GAAKc,EAChBP,EAAI,GAAKP,EAAE,GAAKc,EAChBP,EAAI,GAAKP,EAAE,GAAKc,EACTP,EAUJ,SAASQ,EAAIf,EAAGS,GACnB,OAAOT,EAAE,GAAKS,EAAE,GAAKT,EAAE,GAAKS,EAAE,GAAKT,EAAE,GAAKS,EAAE,GAWzC,SAASO,EAAMT,EAAKP,EAAGS,GAC1B,IAAIQ,EAAKjB,EAAE,GACPkB,EAAKlB,EAAE,GACPmB,EAAKnB,EAAE,GACPoB,EAAKX,EAAE,GACPY,EAAKZ,EAAE,GACPa,EAAKb,EAAE,GAKX,OAHAF,EAAI,GAAKW,EAAKI,EAAKH,EAAKE,EACxBd,EAAI,GAAKY,EAAKC,EAAKH,EAAKK,EACxBf,EAAI,GAAKU,EAAKI,EAAKH,EAAKE,EACjBb,EA6HJ,MAAMgB,EAAQ,WACjB,MAAMC,EAAQ,CAAC,EAAG,EAAG,GACfC,EAAQ,CAAC,EAAG,EAAG,GAErB,OAAO,SAAUzB,EAAGS,GAChBH,EAAKkB,EAAOxB,GACZM,EAAKmB,EAAOhB,GAEZI,EAAUW,EAAOA,GACjBX,EAAUY,EAAOA,GAEjB,IAAIC,EAASX,EAAIS,EAAOC,GAExB,OAAIC,EAAS,EACF,EACAA,GAAS,EACTtB,KAAKuB,GAELvB,KAAKwB,KAAKF,IAlBR,GC5Wd,MAAMG,UAAaC,MACtBC,YAAY9B,EAAI,EAAGC,EAAID,EAAGE,EAAIF,GAE1B,OADA+B,MAAM/B,EAAGC,EAAGC,GACL8B,KAGPhC,QACA,OAAOgC,KAAK,GAGZ/B,QACA,OAAO+B,KAAK,GAGZ9B,QACA,OAAO8B,KAAK,GAGZhC,MAAEiC,GACFD,KAAK,GAAKC,EAGVhC,MAAEgC,GACFD,KAAK,GAAKC,EAGV/B,MAAE+B,GACFD,KAAK,GAAKC,EAGdC,IAAIlC,EAAGC,EAAID,EAAGE,EAAIF,GACd,OAAIA,EAAEV,OAAe0C,KAAKG,KAAKnC,IDKhC,SAAaM,EAAKN,EAAGC,EAAGC,GAC3BI,EAAI,GAAKN,EACTM,EAAI,GAAKL,EACTK,EAAI,GAAKJ,ECPLkC,CAAaJ,KAAMhC,EAAGC,EAAGC,GAClB8B,MAGXG,KAAKF,GAED,OADA5B,EAAc2B,KAAMC,GACbD,KAGXK,IAAIC,EAAIC,GAGJ,OAFIA,EAAIhC,EAAayB,KAAMM,EAAIC,GAC1BhC,EAAayB,KAAMA,KAAMM,GACvBN,KAGXQ,IAAIF,EAAIC,GAGJ,OAFIA,EAAI9B,EAAkBuB,KAAMM,EAAIC,GAC/B9B,EAAkBuB,KAAMA,KAAMM,GAC5BN,KAGXS,SAASR,GD4BN,IAAkB3B,EAAKP,EAAGS,ECzBzB,OAFIyB,EAAE3C,QD2BgBS,EC3BgBiC,KD2BbxB,EC3BmByB,GD2B3B3B,EC3Be0B,MD4BhC,GAAKjC,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,IC7BTE,EAAesB,KAAMA,KAAMC,GACzBD,KAGXU,OAAOT,GDqCJ,IAAgB3B,EAAKP,EAAGS,EClCvB,OAFIyB,EAAE3C,QDoCcS,ECpCgBiC,KDoCbxB,ECpCmByB,GDoC3B3B,ECpCe0B,MDqC9B,GAAKjC,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,ICtCTE,EAAesB,KAAMA,KAAM,EAAIC,GAC7BD,KAGXW,QAAQV,EAAID,MDmHT,IAAiB1B,EAAKP,ECjHrB,ODiHqBA,EClHEkC,GDkHP3B,EClHC0B,MDmHjB,GAAK,EAAMjC,EAAE,GACjBO,EAAI,GAAK,EAAMP,EAAE,GACjBO,EAAI,GAAK,EAAMP,EAAE,GCpHNiC,KAIXnB,MACI,OAAOf,EAAgBkC,MAG3BY,SAASX,GACL,OAAIA,EDiDL,SAAkBlC,EAAGS,GACxB,IAAIR,EAAIQ,EAAE,GAAKT,EAAE,GACbE,EAAIO,EAAE,GAAKT,EAAE,GACbG,EAAIM,EAAE,GAAKT,EAAE,GACjB,OAAOI,KAAKC,KAAKJ,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,GCrDnB2C,CAAkBb,KAAMC,GAC1BnC,EAAgBkC,MAGhCc,aACI,OAAOnC,EAAuBqB,MAGlCe,gBAAgBd,GACZ,OAAIA,EDsDL,SAAyBlC,EAAGS,GAC/B,IAAIR,EAAIQ,EAAE,GAAKT,EAAE,GACbE,EAAIO,EAAE,GAAKT,EAAE,GACbG,EAAIM,EAAE,GAAKT,EAAE,GACjB,OAAOC,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,EC1DT8C,CAAyBhB,KAAMC,GACjCtB,EAAuBqB,MAGvCiB,OAAOhB,EAAID,MD6ER,IAAgB1B,EAAKP,EC3EpB,OD2EoBA,EC5EEkC,GD4EP3B,EC5EC0B,MD6EhB,IAAMjC,EAAE,GACZO,EAAI,IAAMP,EAAE,GACZO,EAAI,IAAMP,EAAE,GC9EDiC,KAGXkB,MAAMZ,EAAIC,GAGN,OAFIA,EAAIxB,EAAeiB,KAAMM,EAAIC,GAC5BxB,EAAeiB,KAAMA,KAAMM,GACzBN,KAGXmB,MAAMlB,GAEF,OADAvB,EAAesB,KAAMA,KAAMC,GACpBD,KAGXoB,YAEI,OADAxC,EAAmBoB,KAAMA,MAClBA,KAGXqB,IAAIpB,GACA,OAAOnB,EAAakB,KAAMC,GAG9BqB,OAAOrB,GACH,ODuRuBzB,ECvRWyB,GDuRdlC,ECvRQiC,MDwRvB,KAAOxB,EAAE,IAAMT,EAAE,KAAOS,EAAE,IAAMT,EAAE,KAAOS,EAAE,GADjD,IAAqBT,EAAGS,ECpR3B+C,aAAaC,GAET,OD0LD,SAAuBlD,EAAKP,EAAG0D,GAClC,IAAIzD,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAIH,EAAE,GACVO,EAAI,GAAKN,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,GAAKvD,EAAIuD,EAAE,GACrCnD,EAAI,GAAKN,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,GAAKvD,EAAIuD,EAAE,GACrCnD,EAAI,GAAKN,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,GAAKvD,EAAIuD,EAAE,GCjMjCC,CAAuB1B,KAAMA,KAAMwB,GAC5BxB,KAGX2B,aAAaC,GAET,ODiJD,SAAuBtD,EAAKP,EAAG0D,GAClC,IAAIzD,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAIH,EAAE,GACN8D,EAAIJ,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,IAAMvD,EAAIuD,EAAE,IAC5CI,EAAIA,GAAK,EACTvD,EAAI,IAAMmD,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,GAAKvD,EAAIuD,EAAE,KAAOI,EACpDvD,EAAI,IAAMmD,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,GAAKvD,EAAIuD,EAAE,KAAOI,EACpDvD,EAAI,IAAMmD,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,IAAMvD,EAAIuD,EAAE,KAAOI,EC1JjDC,CAAuB9B,KAAMA,KAAM4B,GAC5B5B,KAGX+B,mBAAmBH,GAEf,OD4JD,SAAyBtD,EAAKP,EAAG0D,GACpC,IAAIzD,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAIH,EAAE,GACN8D,EAAIJ,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,IAAMvD,EAAIuD,EAAE,IAC5CI,EAAIA,GAAK,EACTvD,EAAI,IAAMmD,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,GAAKvD,GAAK2D,EAC5CvD,EAAI,IAAMmD,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,GAAKvD,GAAK2D,EAC5CvD,EAAI,IAAMmD,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,IAAMvD,GAAK2D,ECrKzCG,CAAyBhC,KAAMA,KAAM4B,GAC9B5B,KAGXiC,gBAAgBC,GAEZ,OD6LD,SAAuB5D,EAAKP,EAAGmE,GAGlC,IAAIlE,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAIH,EAAE,GACNoE,EAAKD,EAAE,GACPE,EAAKF,EAAE,GACPG,EAAKH,EAAE,GAGPI,EAAMF,EAAKlE,EAAImE,EAAKpE,EACpBsE,EAAMF,EAAKrE,EAAImE,EAAKjE,EACpBsE,EAAML,EAAKlE,EAAImE,EAAKpE,EAEpByE,EAAOL,EAAKI,EAAMH,EAAKE,EACvBG,EAAOL,EAAKC,EAAMH,EAAKK,EACvBG,EAAOR,EAAKI,EAAMH,EAAKE,EAEvBM,EAAU,EAVLV,EAAE,GAWXI,GAAOM,EACPL,GAAOK,EACPJ,GAAOI,EAEPH,GAAQ,EACRC,GAAQ,EACRC,GAAQ,EAERrE,EAAI,GAAKN,EAAIsE,EAAMG,EACnBnE,EAAI,GAAKL,EAAIsE,EAAMG,EACnBpE,EAAI,GAAKJ,EAAIsE,EAAMG,EC5NfE,CAAuB7C,KAAMA,KAAMkC,GAC5BlC,KAGX8C,MAAM7C,GACF,OAAOX,EAAeU,KAAMC,GAGhC8C,KAAK9C,EAAG+C,GAEJ,OD2GD,SAAc1E,EAAKP,EAAGS,EAAGwE,GAC5B,IAAIhE,EAAKjB,EAAE,GACPkB,EAAKlB,EAAE,GACPmB,EAAKnB,EAAE,GACXO,EAAI,GAAKU,EAAKgE,GAAKxE,EAAE,GAAKQ,GAC1BV,EAAI,GAAKW,EAAK+D,GAAKxE,EAAE,GAAKS,GAC1BX,EAAI,GAAKY,EAAK8D,GAAKxE,EAAE,GAAKU,GClHtB+D,CAAcjD,KAAMA,KAAMC,EAAG+C,GACtBhD,KAGXkD,QACI,OAAO,IAAItD,EAAKI,KAAK,GAAIA,KAAK,GAAIA,KAAK,IAG3CmD,UAAUpF,EAAGqF,EAAI,GAIb,OAHApD,KAAK,GAAKjC,EAAEqF,GACZpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,GAAKjC,EAAEqF,EAAI,GACTpD,KAGXqD,QAAQtF,EAAI,GAAIqF,EAAI,GAIhB,OAHArF,EAAEqF,GAAKpD,KAAK,GACZjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GACTjC,EAGXuF,mBAAmB1B,GACf,MAAM5D,EAAIgC,KAAK,GACT/B,EAAI+B,KAAK,GACT9B,EAAI8B,KAAK,GAMf,OAJAA,KAAK,GAAK4B,EAAK,GAAK5D,EAAI4D,EAAK,GAAK3D,EAAI2D,EAAK,GAAK1D,EAChD8B,KAAK,GAAK4B,EAAK,GAAK5D,EAAI4D,EAAK,GAAK3D,EAAI2D,EAAK,GAAK1D,EAChD8B,KAAK,GAAK4B,EAAK,GAAK5D,EAAI4D,EAAK,GAAK3D,EAAI2D,EAAK,IAAM1D,EAE1C8B,KAAKoB,aCpKpB,MAAMmC,EAAW,IAAI3D,EACrB,IAAI4D,EAAK,EAEF,MAAMC,EACT3D,aAAY4D,OACRA,EAASC,SAASC,cAAc,UAASC,MACzCA,EAAQ,IAAGC,OACXA,EAAS,IAAGC,IACZA,EAAM,EAACC,MACPA,GAAQ,EAAKC,MACbA,GAAQ,EAAIC,QACZA,GAAU,EAAKC,UACfA,GAAY,EAAKC,mBACjBA,GAAqB,EAAKC,sBAC1BA,GAAwB,EAAKC,gBAC7BA,EAAkB,UAASC,UAC3BA,GAAY,EAAIC,MAChBA,EAAQ,GACR,IACA,MAAMC,EAAa,C,MAAET,E,MAAOC,E,QAAOC,E,UAASC,E,mBAAWC,E,sBAAoBC,E,gBAAuBC,GAClGtE,KAAK+D,IAAMA,EACX/D,KAAKgE,MAAQA,EACbhE,KAAK0E,OAAQ,EACb1E,KAAKiE,MAAQA,EACbjE,KAAKkE,QAAUA,EACflE,KAAKoE,mBAAqBA,EAC1BpE,KAAKuE,UAAYA,EACjBvE,KAAKzC,GAAKiG,IAGI,IAAVgB,IAAaxE,KAAK2E,GAAKjB,EAAOkB,WAAW,SAAUH,IACvDzE,KAAK6E,WAAa7E,KAAK2E,GAClB3E,KAAK2E,KAAI3E,KAAK2E,GAAKjB,EAAOkB,WAAW,QAASH,IAC9CzE,KAAK2E,IAAIG,QAAQC,MAAM,kCAG5B/E,KAAK2E,GAAGK,SAAWhF,KAGnBA,KAAKiF,QAAQpB,EAAOC,GAGpB9D,KAAKkF,MAAQ,GACblF,KAAKkF,MAAMC,UAAY,CAAEC,IAAKpF,KAAK2E,GAAGU,IAAKC,IAAKtF,KAAK2E,GAAGY,MACxDvF,KAAKkF,MAAMM,cAAgB,CAAEC,QAASzF,KAAK2E,GAAGe,UAC9C1F,KAAKkF,MAAMS,SAAW,KACtB3F,KAAKkF,MAAMU,UAAY5F,KAAK2E,GAAGkB,IAC/B7F,KAAKkF,MAAMY,WAAY,EACvB9F,KAAKkF,MAAMa,UAAY/F,KAAK2E,GAAGqB,KAC/BhG,KAAKkF,MAAMe,kBAAmB,EAC9BjG,KAAKkF,MAAMgB,OAAQ,EACnBlG,KAAKkF,MAAMiB,gBAAkB,EAC7BnG,KAAKkF,MAAMkB,YAAc,KACzBpG,KAAKkF,MAAMmB,SAAW,CAAErI,EAAG,EAAGC,EAAG,EAAG4F,MAAO,KAAMC,OAAQ,MACzD9D,KAAKkF,MAAMoB,aAAe,GAC1BtG,KAAKkF,MAAMqB,kBAAoB,EAC/BvG,KAAKkF,MAAMsB,YAAc,KACzBxG,KAAKkF,MAAMuB,iBAAmB,IAAIC,IAClC1G,KAAKkF,MAAMyB,eAAiB,KAG5B3G,KAAK4G,WAAa,GAGd5G,KAAK6E,UACL7E,KAAK6G,aAAa,0BAClB7G,KAAK6G,aAAa,8BAElB7G,KAAK6G,aAAa,qBAClB7G,KAAK6G,aAAa,4BAClB7G,KAAK6G,aAAa,0BAClB7G,KAAK6G,aAAa,iCAClB7G,KAAK6G,aAAa,0BAClB7G,KAAK6G,aAAa,4BAClB7G,KAAK6G,aAAa,YAClB7G,KAAK6G,aAAa,uBAClB7G,KAAK6G,aAAa,uBAEtB7G,KAAK6G,aAAa,iCAClB7G,KAAK6G,aAAa,gCAClB7G,KAAK6G,aAAa,iCAClB7G,KAAK6G,aAAa,iCAClB7G,KAAK6G,aAAa,kCAClB7G,KAAK6G,aAAa,yCAGlB7G,KAAK8G,oBAAsB9G,KAAK6G,aAAa,yBAA0B,sBAAuB,4BAC9F7G,KAAK+G,oBAAsB/G,KAAK6G,aAAa,yBAA0B,sBAAuB,4BAC9F7G,KAAKgH,sBAAwBhH,KAAK6G,aAAa,yBAA0B,wBAAyB,8BAClG7G,KAAKiH,kBAAoBjH,KAAK6G,aAAa,0BAA2B,oBAAqB,wBAC3F7G,KAAKkH,gBAAkBlH,KAAK6G,aAAa,0BAA2B,kBAAmB,sBACvF7G,KAAKmH,kBAAoBnH,KAAK6G,aAAa,0BAA2B,oBAAqB,wBAC3F7G,KAAKoH,YAAcpH,KAAK6G,aAAa,qBAAsB,cAAe,oBAG1E7G,KAAKqH,WAAa,GAClBrH,KAAKqH,WAAWC,gBAAkBtH,KAAK2E,GAAG4C,aAAavH,KAAK2E,GAAG6C,kCAC/DxH,KAAKqH,WAAWI,cAAgBzH,KAAK6G,aAAa,kCAC5C7G,KAAK2E,GAAG4C,aAAavH,KAAK6G,aAAa,kCAAkCa,gCACzE,EAGVzC,QAAQpB,EAAOC,GACX9D,KAAK6D,MAAQA,EACb7D,KAAK8D,OAASA,EAEd9D,KAAK2E,GAAGjB,OAAOG,MAAQA,EAAQ7D,KAAK+D,IACpC/D,KAAK2E,GAAGjB,OAAOI,OAASA,EAAS9D,KAAK+D,IAEtC3G,OAAOuK,OAAO3H,KAAK2E,GAAGjB,OAAOkE,MAAO,CAChC/D,MAAOA,EAAQ,KACfC,OAAQA,EAAS,OAIzB+D,YAAYhE,EAAOC,EAAQ9F,EAAI,EAAGC,EAAI,GAC9B+B,KAAKkF,MAAMmB,SAASxC,QAAUA,GAAS7D,KAAKkF,MAAMmB,SAASvC,SAAWA,IAC1E9D,KAAKkF,MAAMmB,SAASxC,MAAQA,EAC5B7D,KAAKkF,MAAMmB,SAASvC,OAASA,EAC7B9D,KAAKkF,MAAMmB,SAASrI,EAAIA,EACxBgC,KAAKkF,MAAMmB,SAASpI,EAAIA,EACxB+B,KAAK2E,GAAG0B,SAASrI,EAAGC,EAAG4F,EAAOC,IAGlCgE,WAAWjE,EAAOC,EAAQ9F,EAAI,EAAGC,EAAI,GACjC+B,KAAK2E,GAAGoD,QAAQ/J,EAAGC,EAAG4F,EAAOC,GAGjCkE,OAAOzK,IACoB,IAAnByC,KAAKkF,MAAM3H,KACfyC,KAAK2E,GAAGqD,OAAOzK,GACfyC,KAAKkF,MAAM3H,IAAM,GAGrB0K,QAAQ1K,IACmB,IAAnByC,KAAKkF,MAAM3H,KACfyC,KAAK2E,GAAGsD,QAAQ1K,GAChByC,KAAKkF,MAAM3H,IAAM,GAGrB2K,aAAa9C,EAAKE,EAAK6C,EAAUC,GAEzBpI,KAAKkF,MAAMC,UAAUC,MAAQA,GAC7BpF,KAAKkF,MAAMC,UAAUG,MAAQA,GAC7BtF,KAAKkF,MAAMC,UAAUgD,WAAaA,GAClCnI,KAAKkF,MAAMC,UAAUiD,WAAaA,IAGtCpI,KAAKkF,MAAMC,UAAUC,IAAMA,EAC3BpF,KAAKkF,MAAMC,UAAUG,IAAMA,EAC3BtF,KAAKkF,MAAMC,UAAUgD,SAAWA,EAChCnI,KAAKkF,MAAMC,UAAUiD,SAAWA,OACfC,IAAbF,EAAwBnI,KAAK2E,GAAG2D,kBAAkBlD,EAAKE,EAAK6C,EAAUC,GACrEpI,KAAK2E,GAAGQ,UAAUC,EAAKE,IAGhCiD,iBAAiB9C,EAAS+C,GACtB/C,EAAUA,GAAWzF,KAAK2E,GAAGe,SACzB1F,KAAKkF,MAAMM,cAAcC,UAAYA,GAAWzF,KAAKkF,MAAMM,cAAcgD,YAAcA,IAC3FxI,KAAKkF,MAAMM,cAAcC,QAAUA,EACnCzF,KAAKkF,MAAMM,cAAcgD,UAAYA,OACnBH,IAAdG,EAAyBxI,KAAK2E,GAAG8D,sBAAsBhD,EAAS+C,GAC/DxI,KAAK2E,GAAGa,cAAcC,IAG/BiD,YAAYC,GACJ3I,KAAKkF,MAAMS,WAAagD,IAC5B3I,KAAKkF,MAAMS,SAAWgD,EACtB3I,KAAK2E,GAAGgB,SAASgD,IAGrBC,aAAaD,GACL3I,KAAKkF,MAAMU,YAAc+C,IAC7B3I,KAAKkF,MAAMU,UAAY+C,EACvB3I,KAAK2E,GAAGiB,UAAU+C,IAGtBE,aAAaF,GACL3I,KAAKkF,MAAMY,YAAc6C,IAC7B3I,KAAKkF,MAAMY,UAAY6C,EACvB3I,KAAK2E,GAAGmB,UAAU6C,IAGtBG,aAAaH,GACL3I,KAAKkF,MAAMa,YAAc4C,IAC7B3I,KAAKkF,MAAMa,UAAY4C,EACvB3I,KAAK2E,GAAGoB,UAAU4C,IAGtBI,cAAcJ,GACN3I,KAAKkF,MAAMqB,oBAAsBoC,IACrC3I,KAAKkF,MAAMqB,kBAAoBoC,EAC/B3I,KAAK2E,GAAGoE,cAAc/I,KAAK2E,GAAGqE,SAAWL,IAG7CM,iBAAgBC,OAAEA,EAASlJ,KAAK2E,GAAGwE,YAAWC,OAAEA,EAAS,MAAS,IAC1DpJ,KAAKkF,MAAMkB,cAAgBgD,IAC/BpJ,KAAKkF,MAAMkB,YAAcgD,EACzBpJ,KAAK2E,GAAGsE,gBAAgBC,EAAQE,IAGpCvC,aAAawC,EAAWC,EAAYC,GAEhC,OAAID,GAActJ,KAAK2E,GAAG2E,GAAoBtJ,KAAK2E,GAAG2E,GAAYE,KAAKxJ,KAAK2E,KAGvE3E,KAAK4G,WAAWyC,KACjBrJ,KAAK4G,WAAWyC,GAAarJ,KAAK2E,GAAGkC,aAAawC,IAIjDC,EAGAtJ,KAAK4G,WAAWyC,GAGdrJ,KAAK4G,WAAWyC,GAAWE,GAASC,KAAKxJ,KAAK4G,WAAWyC,IAHxB,KAHhBrJ,KAAK4G,WAAWyC,IAS5CI,WAAW1L,EAAGS,GACV,OAAIT,EAAE2L,cAAgBlL,EAAEkL,YACb3L,EAAE2L,YAAclL,EAAEkL,YAClB3L,EAAE4L,QAAQpM,KAAOiB,EAAEmL,QAAQpM,GAC3BQ,EAAE4L,QAAQpM,GAAKiB,EAAEmL,QAAQpM,GACzBQ,EAAE6L,SAAWpL,EAAEoL,OACf7L,EAAE6L,OAASpL,EAAEoL,OAEbpL,EAAEjB,GAAKQ,EAAER,GAIxBsM,gBAAgB9L,EAAGS,GACf,OAAIT,EAAE2L,cAAgBlL,EAAEkL,YACb3L,EAAE2L,YAAclL,EAAEkL,YAEzB3L,EAAE6L,SAAWpL,EAAEoL,OACRpL,EAAEoL,OAAS7L,EAAE6L,OAEbpL,EAAEjB,GAAKQ,EAAER,GAIxBuM,OAAO/L,EAAGS,GACN,OAAIT,EAAE2L,cAAgBlL,EAAEkL,YACb3L,EAAE2L,YAAclL,EAAEkL,YAClB3L,EAAE4L,QAAQpM,KAAOiB,EAAEmL,QAAQpM,GAC3BQ,EAAE4L,QAAQpM,GAAKiB,EAAEmL,QAAQpM,GAEzBiB,EAAEjB,GAAKQ,EAAER,GAIxBwM,eAAcC,MAAEA,EAAKC,OAAEA,EAAMC,YAAEA,EAAWC,KAAEA,IACxC,IAAIC,EAAa,GAgBjB,GAdIH,GAAUC,GAAaD,EAAOI,gBAGlCL,EAAMM,UAAUC,IACZ,IAAKA,EAAKC,QAAS,OAAO,EACrBD,EAAKE,OAENP,GAAeK,EAAKG,eAAiBT,IAChCA,EAAOU,sBAAsBJ,IAGtCH,EAAWQ,KAAKL,OAGhBJ,EAAM,CACN,MAAMU,EAAS,GACTC,EAAc,GACdC,EAAK,GAEXX,EAAWY,SAAST,IAEXA,EAAKZ,QAAQmB,YAEPP,EAAKZ,QAAQsB,UACpBH,EAAYF,KAAKL,GAEjBQ,EAAGH,KAAKL,GAJRM,EAAOD,KAAKL,GAOhBA,EAAKX,OAAS,EAGW,IAArBW,EAAKb,aAAsBa,EAAKZ,QAAQsB,WAAchB,IAG1DM,EAAKW,YAAYC,eAAe5H,GAChCA,EAAS5B,aAAasI,EAAOmB,sBAC7Bb,EAAKX,OAASrG,EAASrF,MAG3B2M,EAAOV,KAAKnK,KAAKyJ,YACjBqB,EAAYX,KAAKnK,KAAK6J,iBACtBkB,EAAGZ,KAAKnK,KAAK8J,QAEbM,EAAaS,EAAOQ,OAAOP,EAAaC,GAG5C,OAAOX,EAGXkB,QAAOtB,MAAEA,EAAKC,OAAEA,EAAMf,OAAEA,EAAS,KAAIqC,OAAEA,GAAS,EAAIpB,KAAEA,GAAO,EAAID,YAAEA,GAAc,EAAIsB,MAAEA,IACpE,OAAXtC,GAEAlJ,KAAKiJ,kBACLjJ,KAAK6H,YAAY7H,KAAK6D,MAAQ7D,KAAK+D,IAAK/D,KAAK8D,OAAS9D,KAAK+D,OAG3D/D,KAAKiJ,gBAAgBC,GACrBlJ,KAAK6H,YAAYqB,EAAOrF,MAAOqF,EAAOpF,UAGtC0H,GAAUxL,KAAKuE,YAAuB,IAAViH,MAExBxL,KAAKiE,OAAWiF,IAAUA,EAAOjF,QACjCjE,KAAKgI,OAAOhI,KAAK2E,GAAG8G,YACpBzL,KAAK6I,cAAa,IAEtB7I,KAAK2E,GAAG6G,OACHxL,KAAK0E,MAAQ1E,KAAK2E,GAAG+G,iBAAmB,IACpC1L,KAAKiE,MAAQjE,KAAK2E,GAAGgH,iBAAmB,IACxC3L,KAAKkE,QAAUlE,KAAK2E,GAAGiH,mBAAqB,KAKrDL,GAAQvB,EAAM6B,oBAGd5B,GAAQA,EAAO4B,oBAGA7L,KAAK+J,cAAc,C,MAAEC,E,OAAOC,E,YAAQC,E,KAAaC,IAEzDa,SAAST,IAChBA,EAAKE,KAAK,C,OAAER,QCrTjB,SAAS6B,EAASxN,EAAKP,EAAGS,GAC7B,IAAIQ,EAAKjB,EAAE,GACPkB,EAAKlB,EAAE,GACPmB,EAAKnB,EAAE,GACPgO,EAAKhO,EAAE,GACPoB,EAAKX,EAAE,GACPY,EAAKZ,EAAE,GACPa,EAAKb,EAAE,GACPwN,EAAKxN,EAAE,GAMX,OAJAF,EAAI,GAAKU,EAAKgN,EAAKD,EAAK5M,EAAKF,EAAKI,EAAKH,EAAKE,EAC5Cd,EAAI,GAAKW,EAAK+M,EAAKD,EAAK3M,EAAKF,EAAKC,EAAKH,EAAKK,EAC5Cf,EAAI,GAAKY,EAAK8M,EAAKD,EAAK1M,EAAKL,EAAKI,EAAKH,EAAKE,EAC5Cb,EAAI,GAAKyN,EAAKC,EAAKhN,EAAKG,EAAKF,EAAKG,EAAKF,EAAKG,EACrCf,EAqRJ,MAAM2N,ECrUN,SAAc3N,EAAKP,GAKtB,OAJAO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACJO,GD6UE4N,EChUN,SAAa5N,EAAKN,EAAGC,EAAGC,EAAG2D,GAK9B,OAJAvD,EAAI,GAAKN,EACTM,EAAI,GAAKL,EACTK,EAAI,GAAKJ,EACTI,EAAI,GAAKuD,EACFvD,GD2VE6N,EC5QN,SAAapO,EAAGS,GACnB,OAAOT,EAAE,GAAKS,EAAE,GAAKT,EAAE,GAAKS,EAAE,GAAKT,EAAE,GAAKS,EAAE,GAAKT,EAAE,GAAKS,EAAE,IDySjD4N,ECjUN,SAAmB9N,EAAKP,GAC3B,IAAIC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACNG,EAAIH,EAAE,GACN8D,EAAI9D,EAAE,GACNc,EAAMb,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,EAAI2D,EAAIA,EAQtC,OAPIhD,EAAM,IACNA,EAAM,EAAIV,KAAKC,KAAKS,IAExBP,EAAI,GAAKN,EAAIa,EACbP,EAAI,GAAKL,EAAIY,EACbP,EAAI,GAAKJ,EAAIW,EACbP,EAAI,GAAKuD,EAAIhD,EACNP,GCnGJ,MAAM+N,UAAaxM,MACtBC,YAAY9B,EAAI,EAAGC,EAAI,EAAGC,EAAI,EAAG2D,EAAI,GAGjC,OAFA9B,MAAM/B,EAAGC,EAAGC,EAAG2D,GACf7B,KAAKsM,SAAW,OACTtM,KAGPhC,QACA,OAAOgC,KAAK,GAGZ/B,QACA,OAAO+B,KAAK,GAGZ9B,QACA,OAAO8B,KAAK,GAGZ6B,QACA,OAAO7B,KAAK,GAGZhC,MAAEiC,GACFD,KAAK,GAAKC,EACVD,KAAKsM,WAGLrO,MAAEgC,GACFD,KAAK,GAAKC,EACVD,KAAKsM,WAGLpO,MAAE+B,GACFD,KAAK,GAAKC,EACVD,KAAKsM,WAGLzK,MAAE5B,GACFD,KAAK,GAAKC,EACVD,KAAKsM,WAGTC,WFrCG,IAAkBjO,EEwCjB,OFxCiBA,EEsCC0B,MFrClB,GAAK,EACT1B,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EEmCL0B,KAAKsM,WACEtM,KAGXE,IAAIlC,EAAGC,EAAGC,EAAG2D,GACT,OAAI7D,EAAEV,OAAe0C,KAAKG,KAAKnC,IAC/BkO,EAAalM,KAAMhC,EAAGC,EAAGC,EAAG2D,GAC5B7B,KAAKsM,WACEtM,MAGXwM,QAAQzO,GAGJ,OFOD,SAAiBO,EAAKP,EAAG0O,GAC5BA,GAAO,GAEP,IAAIzN,EAAKjB,EAAE,GACPkB,EAAKlB,EAAE,GACPmB,EAAKnB,EAAE,GACPgO,EAAKhO,EAAE,GACPoB,EAAKhB,KAAKuO,IAAID,GACdT,EAAK7N,KAAKwO,IAAIF,GAElBnO,EAAI,GAAKU,EAAKgN,EAAKD,EAAK5M,EACxBb,EAAI,GAAKW,EAAK+M,EAAK9M,EAAKC,EACxBb,EAAI,GAAKY,EAAK8M,EAAK/M,EAAKE,EACxBb,EAAI,GAAKyN,EAAKC,EAAKhN,EAAKG,EEtBpByN,CAAiB5M,KAAMA,KAAMjC,GAC7BiC,KAAKsM,WACEtM,KAGX6M,QAAQ9O,GAGJ,OF0BD,SAAiBO,EAAKP,EAAG0O,GAC5BA,GAAO,GAEP,IAAIzN,EAAKjB,EAAE,GACPkB,EAAKlB,EAAE,GACPmB,EAAKnB,EAAE,GACPgO,EAAKhO,EAAE,GACPqB,EAAKjB,KAAKuO,IAAID,GACdT,EAAK7N,KAAKwO,IAAIF,GAElBnO,EAAI,GAAKU,EAAKgN,EAAK9M,EAAKE,EACxBd,EAAI,GAAKW,EAAK+M,EAAKD,EAAK3M,EACxBd,EAAI,GAAKY,EAAK8M,EAAKhN,EAAKI,EACxBd,EAAI,GAAKyN,EAAKC,EAAK/M,EAAKG,EEzCpB0N,CAAiB9M,KAAMA,KAAMjC,GAC7BiC,KAAKsM,WACEtM,KAGX+M,QAAQhP,GAGJ,OF6CD,SAAiBO,EAAKP,EAAG0O,GAC5BA,GAAO,GAEP,IAAIzN,EAAKjB,EAAE,GACPkB,EAAKlB,EAAE,GACPmB,EAAKnB,EAAE,GACPgO,EAAKhO,EAAE,GACPsB,EAAKlB,KAAKuO,IAAID,GACdT,EAAK7N,KAAKwO,IAAIF,GAElBnO,EAAI,GAAKU,EAAKgN,EAAK/M,EAAKI,EACxBf,EAAI,GAAKW,EAAK+M,EAAKhN,EAAKK,EACxBf,EAAI,GAAKY,EAAK8M,EAAKD,EAAK1M,EACxBf,EAAI,GAAKyN,EAAKC,EAAK9M,EAAKG,EE5DpB2N,CAAiBhN,KAAMA,KAAMjC,GAC7BiC,KAAKsM,WACEtM,KAGXW,QAAQuB,EAAIlC,MAGR,OFsHD,SAAgB1B,EAAKP,GACxB,IAAIkP,EAAKlP,EAAE,GACPmP,EAAKnP,EAAE,GACPoP,EAAKpP,EAAE,GACPqP,EAAKrP,EAAE,GACPsP,EAAMJ,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EACzCE,EAASD,EAAM,EAAMA,EAAM,EAI/B/O,EAAI,IAAM2O,EAAKK,EACfhP,EAAI,IAAM4O,EAAKI,EACfhP,EAAI,IAAM6O,EAAKG,EACfhP,EAAI,GAAK8O,EAAKE,EErIVC,CAAgBvN,KAAMkC,GACtBlC,KAAKsM,WACEtM,KAGXwN,UAAUtL,EAAIlC,MF4IX,IAAmB1B,EAAKP,EEzIvB,OFyIuBA,EE3IEmE,GF2IP5D,EE3IC0B,MF4InB,IAAMjC,EAAE,GACZO,EAAI,IAAMP,EAAE,GACZO,EAAI,IAAMP,EAAE,GACZO,EAAI,GAAKP,EAAE,GE9IPiC,KAAKsM,WACEtM,KAGXG,KAAK+B,GAGD,OAFA+J,EAAcjM,KAAMkC,GACpBlC,KAAKsM,WACEtM,KAGXoB,UAAUc,EAAIlC,MAGV,OAFAoM,EAAmBpM,KAAMkC,GACzBlC,KAAKsM,WACEtM,KAGXS,SAASgN,EAAIC,GAOT,OANIA,EACA5B,EAAkB9L,KAAMyN,EAAIC,GAE5B5B,EAAkB9L,KAAMA,KAAMyN,GAElCzN,KAAKsM,WACEtM,KAGXqB,IAAIpB,GACA,OAAOkM,EAAanM,KAAMC,GAG9B0N,YAAYC,GAGR,OF4HD,SAAkBtP,EAAKmD,GAG1B,IACIoM,EADAC,EAASrM,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAG7B,GAAIqM,EAAS,EAETD,EAAQ1P,KAAKC,KAAK0P,EAAS,GAC3BxP,EAAI,GAAK,GAAMuP,EACfA,EAAQ,GAAMA,EACdvP,EAAI,IAAMmD,EAAE,GAAKA,EAAE,IAAMoM,EACzBvP,EAAI,IAAMmD,EAAE,GAAKA,EAAE,IAAMoM,EACzBvP,EAAI,IAAMmD,EAAE,GAAKA,EAAE,IAAMoM,MACtB,CAEH,IAAIxQ,EAAI,EACJoE,EAAE,GAAKA,EAAE,KAAIpE,EAAI,GACjBoE,EAAE,GAAKA,EAAM,EAAJpE,EAAQA,KAAIA,EAAI,GAC7B,IAAI0Q,GAAK1Q,EAAI,GAAK,EACd2Q,GAAK3Q,EAAI,GAAK,EAElBwQ,EAAQ1P,KAAKC,KAAKqD,EAAM,EAAJpE,EAAQA,GAAKoE,EAAM,EAAJsM,EAAQA,GAAKtM,EAAM,EAAJuM,EAAQA,GAAK,GAC/D1P,EAAIjB,GAAK,GAAMwQ,EACfA,EAAQ,GAAMA,EACdvP,EAAI,IAAMmD,EAAM,EAAJsM,EAAQC,GAAKvM,EAAM,EAAJuM,EAAQD,IAAMF,EACzCvP,EAAIyP,IAAMtM,EAAM,EAAJsM,EAAQ1Q,GAAKoE,EAAM,EAAJpE,EAAQ0Q,IAAMF,EACzCvP,EAAI0P,IAAMvM,EAAM,EAAJuM,EAAQ3Q,GAAKoE,EAAM,EAAJpE,EAAQ2Q,IAAMH,GEzJzCI,CAAkBjO,KAAM4N,GACxB5N,KAAKsM,WACEtM,KAGXkO,UAAUC,GAEN,OFiKD,SAAmB7P,EAAK6P,EAAOC,EAAQ,OAC1C,IAAIC,EAAKlQ,KAAKuO,IAAe,GAAXyB,EAAM,IACpBG,EAAKnQ,KAAKwO,IAAe,GAAXwB,EAAM,IACpBI,EAAKpQ,KAAKuO,IAAe,GAAXyB,EAAM,IACpBK,EAAKrQ,KAAKwO,IAAe,GAAXwB,EAAM,IACpBM,EAAKtQ,KAAKuO,IAAe,GAAXyB,EAAM,IACpBO,EAAKvQ,KAAKwO,IAAe,GAAXwB,EAAM,IAEV,QAAVC,GACA9P,EAAI,GAAK+P,EAAKG,EAAKE,EAAKJ,EAAKC,EAAKE,EAClCnQ,EAAI,GAAKgQ,EAAKC,EAAKG,EAAKL,EAAKG,EAAKC,EAClCnQ,EAAI,GAAKgQ,EAAKE,EAAKC,EAAKJ,EAAKE,EAAKG,EAClCpQ,EAAI,GAAKgQ,EAAKE,EAAKE,EAAKL,EAAKE,EAAKE,GACjB,QAAVL,GACP9P,EAAI,GAAK+P,EAAKG,EAAKE,EAAKJ,EAAKC,EAAKE,EAClCnQ,EAAI,GAAKgQ,EAAKC,EAAKG,EAAKL,EAAKG,EAAKC,EAClCnQ,EAAI,GAAKgQ,EAAKE,EAAKC,EAAKJ,EAAKE,EAAKG,EAClCpQ,EAAI,GAAKgQ,EAAKE,EAAKE,EAAKL,EAAKE,EAAKE,GACjB,QAAVL,GACP9P,EAAI,GAAK+P,EAAKG,EAAKE,EAAKJ,EAAKC,EAAKE,EAClCnQ,EAAI,GAAKgQ,EAAKC,EAAKG,EAAKL,EAAKG,EAAKC,EAClCnQ,EAAI,GAAKgQ,EAAKE,EAAKC,EAAKJ,EAAKE,EAAKG,EAClCpQ,EAAI,GAAKgQ,EAAKE,EAAKE,EAAKL,EAAKE,EAAKE,GACjB,QAAVL,GACP9P,EAAI,GAAK+P,EAAKG,EAAKE,EAAKJ,EAAKC,EAAKE,EAClCnQ,EAAI,GAAKgQ,EAAKC,EAAKG,EAAKL,EAAKG,EAAKC,EAClCnQ,EAAI,GAAKgQ,EAAKE,EAAKC,EAAKJ,EAAKE,EAAKG,EAClCpQ,EAAI,GAAKgQ,EAAKE,EAAKE,EAAKL,EAAKE,EAAKE,GACjB,QAAVL,GACP9P,EAAI,GAAK+P,EAAKG,EAAKE,EAAKJ,EAAKC,EAAKE,EAClCnQ,EAAI,GAAKgQ,EAAKC,EAAKG,EAAKL,EAAKG,EAAKC,EAClCnQ,EAAI,GAAKgQ,EAAKE,EAAKC,EAAKJ,EAAKE,EAAKG,EAClCpQ,EAAI,GAAKgQ,EAAKE,EAAKE,EAAKL,EAAKE,EAAKE,GACjB,QAAVL,IACP9P,EAAI,GAAK+P,EAAKG,EAAKE,EAAKJ,EAAKC,EAAKE,EAClCnQ,EAAI,GAAKgQ,EAAKC,EAAKG,EAAKL,EAAKG,EAAKC,EAClCnQ,EAAI,GAAKgQ,EAAKE,EAAKC,EAAKJ,EAAKE,EAAKG,EAClCpQ,EAAI,GAAKgQ,EAAKE,EAAKE,EAAKL,EAAKE,EAAKE,GEvMlCE,CAAmB3O,KAAMmO,EAAOA,EAAMC,OAC/BpO,KAGX4O,cAAcC,EAAM9Q,GAEhB,OFtGD,SAAsBO,EAAKuQ,EAAMpC,GACpCA,GAAY,GACZ,IAAIqC,EAAI3Q,KAAKuO,IAAID,GACjBnO,EAAI,GAAKwQ,EAAID,EAAK,GAClBvQ,EAAI,GAAKwQ,EAAID,EAAK,GAClBvQ,EAAI,GAAKwQ,EAAID,EAAK,GAClBvQ,EAAI,GAAKH,KAAKwO,IAAIF,GE+FdsC,CAAsB/O,KAAM6O,EAAM9Q,GAC3BiC,KAGXgP,MAAM9M,EAAGc,GAEL,OFYD,SAAe1E,EAAKP,EAAGS,EAAGwE,GAG7B,IASIiM,EAAOC,EAAOC,EAAOC,EAAQC,EAT7BrQ,EAAKjB,EAAE,GACPkB,EAAKlB,EAAE,GACPmB,EAAKnB,EAAE,GACPgO,EAAKhO,EAAE,GACPoB,EAAKX,EAAE,GACPY,EAAKZ,EAAE,GACPa,EAAKb,EAAE,GACPwN,EAAKxN,EAAE,GAKX0Q,EAAQlQ,EAAKG,EAAKF,EAAKG,EAAKF,EAAKG,EAAK0M,EAAKC,EAEvCkD,EAAQ,IACRA,GAASA,EACT/P,GAAMA,EACNC,GAAMA,EACNC,GAAMA,EACN2M,GAAMA,GAGN,EAAMkD,EAAQ,MAEdD,EAAQ9Q,KAAKwB,KAAKuP,GAClBC,EAAQhR,KAAKuO,IAAIuC,GACjBG,EAASjR,KAAKuO,KAAK,EAAM1J,GAAKiM,GAASE,EACvCE,EAASlR,KAAKuO,IAAI1J,EAAIiM,GAASE,IAI/BC,EAAS,EAAMpM,EACfqM,EAASrM,GAGb1E,EAAI,GAAK8Q,EAASpQ,EAAKqQ,EAASlQ,EAChCb,EAAI,GAAK8Q,EAASnQ,EAAKoQ,EAASjQ,EAChCd,EAAI,GAAK8Q,EAASlQ,EAAKmQ,EAAShQ,EAChCf,EAAI,GAAK8Q,EAASrD,EAAKsD,EAASrD,EEtD5BsD,CAAetP,KAAMA,KAAMkC,EAAGc,GACvBhD,KAGXmD,UAAUpF,EAAGqF,EAAI,GAKb,OAJApD,KAAK,GAAKjC,EAAEqF,GACZpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,GAAKjC,EAAEqF,EAAI,GACTpD,KAGXqD,QAAQtF,EAAI,GAAIqF,EAAI,GAKhB,OAJArF,EAAEqF,GAAKpD,KAAK,GACZjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GACTjC,GCmGR,SAASwR,EAASjR,EAAKP,EAAGS,GAC7B,IAAIgR,EAAMzR,EAAE,GACR0R,EAAM1R,EAAE,GACR2R,EAAM3R,EAAE,GACR4R,EAAM5R,EAAE,GACR6R,EAAM7R,EAAE,GACR8R,EAAM9R,EAAE,GACR+R,EAAM/R,EAAE,GACRgS,EAAMhS,EAAE,GACRiS,EAAMjS,EAAE,GACRkS,EAAMlS,EAAE,GACRmS,EAAMnS,EAAE,IACRoS,EAAMpS,EAAE,IACRqS,EAAMrS,EAAE,IACRsS,EAAMtS,EAAE,IACRuS,EAAMvS,EAAE,IACRwS,EAAMxS,EAAE,IAGRyS,EAAKhS,EAAE,GACPiS,EAAKjS,EAAE,GACPkS,EAAKlS,EAAE,GACPmS,EAAKnS,EAAE,GAgCX,OA/BAF,EAAI,GAAKkS,EAAKhB,EAAMiB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAC/C9R,EAAI,GAAKkS,EAAKf,EAAMgB,EAAKZ,EAAMa,EAAKT,EAAMU,EAAKN,EAC/C/R,EAAI,GAAKkS,EAAKd,EAAMe,EAAKX,EAAMY,EAAKR,EAAMS,EAAKL,EAC/ChS,EAAI,GAAKkS,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAAMQ,EAAKJ,EAE/CC,EAAKhS,EAAE,GACPiS,EAAKjS,EAAE,GACPkS,EAAKlS,EAAE,GACPmS,EAAKnS,EAAE,GACPF,EAAI,GAAKkS,EAAKhB,EAAMiB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAC/C9R,EAAI,GAAKkS,EAAKf,EAAMgB,EAAKZ,EAAMa,EAAKT,EAAMU,EAAKN,EAC/C/R,EAAI,GAAKkS,EAAKd,EAAMe,EAAKX,EAAMY,EAAKR,EAAMS,EAAKL,EAC/ChS,EAAI,GAAKkS,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAAMQ,EAAKJ,EAE/CC,EAAKhS,EAAE,GACPiS,EAAKjS,EAAE,GACPkS,EAAKlS,EAAE,IACPmS,EAAKnS,EAAE,IACPF,EAAI,GAAKkS,EAAKhB,EAAMiB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAC/C9R,EAAI,GAAKkS,EAAKf,EAAMgB,EAAKZ,EAAMa,EAAKT,EAAMU,EAAKN,EAC/C/R,EAAI,IAAMkS,EAAKd,EAAMe,EAAKX,EAAMY,EAAKR,EAAMS,EAAKL,EAChDhS,EAAI,IAAMkS,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAAMQ,EAAKJ,EAEhDC,EAAKhS,EAAE,IACPiS,EAAKjS,EAAE,IACPkS,EAAKlS,EAAE,IACPmS,EAAKnS,EAAE,IACPF,EAAI,IAAMkS,EAAKhB,EAAMiB,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAChD9R,EAAI,IAAMkS,EAAKf,EAAMgB,EAAKZ,EAAMa,EAAKT,EAAMU,EAAKN,EAChD/R,EAAI,IAAMkS,EAAKd,EAAMe,EAAKX,EAAMY,EAAKR,EAAMS,EAAKL,EAChDhS,EAAI,IAAMkS,EAAKb,EAAMc,EAAKV,EAAMW,EAAKP,EAAMQ,EAAKJ,EACzCjS,EA0MJ,SAASsS,EAAWtS,EAAKuS,GAC5B,IAAIC,EAAMD,EAAI,GACVE,EAAMF,EAAI,GACVG,EAAMH,EAAI,GACVI,EAAMJ,EAAI,GACVK,EAAML,EAAI,GACVM,EAAMN,EAAI,GACVO,EAAMP,EAAI,GACVQ,EAAMR,EAAI,GACVS,EAAMT,EAAI,IAMd,OAJAvS,EAAI,GAAKH,KAAKoT,MAAMT,EAAKC,EAAKC,GAC9B1S,EAAI,GAAKH,KAAKoT,MAAMN,EAAKC,EAAKC,GAC9B7S,EAAI,GAAKH,KAAKoT,MAAMH,EAAKC,EAAKC,GAEvBhT,EA8BJ,MAAMkT,EAAc,WACvB,MAAMC,EAAO,CAAC,EAAG,EAAG,GAEpB,OAAO,SAAUnT,EAAKuS,GAClB,IAAIa,EAAUD,EACdb,EAAWc,EAASb,GAEpB,IAAIc,EAAM,EAAID,EAAQ,GAClBE,EAAM,EAAIF,EAAQ,GAClBG,EAAM,EAAIH,EAAQ,GAElBI,EAAOjB,EAAI,GAAKc,EAChBI,EAAOlB,EAAI,GAAKe,EAChBI,EAAOnB,EAAI,GAAKgB,EAChBI,EAAOpB,EAAI,GAAKc,EAChBO,EAAOrB,EAAI,GAAKe,EAChBO,EAAOtB,EAAI,GAAKgB,EAChBO,EAAOvB,EAAI,GAAKc,EAChBU,EAAOxB,EAAI,GAAKe,EAChBU,EAAOzB,EAAI,IAAMgB,EAEjBU,EAAQT,EAAOI,EAAOI,EACtBE,EAAI,EA4BR,OA1BID,EAAQ,GACRC,EAA6B,EAAzBrU,KAAKC,KAAKmU,EAAQ,GACtBjU,EAAI,GAAK,IAAOkU,EAChBlU,EAAI,IAAM6T,EAAOE,GAAQG,EACzBlU,EAAI,IAAM8T,EAAOJ,GAAQQ,EACzBlU,EAAI,IAAMyT,EAAOE,GAAQO,GAClBV,EAAOI,GAAQJ,EAAOQ,GAC7BE,EAA0C,EAAtCrU,KAAKC,KAAK,EAAM0T,EAAOI,EAAOI,GAClChU,EAAI,IAAM6T,EAAOE,GAAQG,EACzBlU,EAAI,GAAK,IAAOkU,EAChBlU,EAAI,IAAMyT,EAAOE,GAAQO,EACzBlU,EAAI,IAAM8T,EAAOJ,GAAQQ,GAClBN,EAAOI,GACdE,EAA0C,EAAtCrU,KAAKC,KAAK,EAAM8T,EAAOJ,EAAOQ,GAClChU,EAAI,IAAM8T,EAAOJ,GAAQQ,EACzBlU,EAAI,IAAMyT,EAAOE,GAAQO,EACzBlU,EAAI,GAAK,IAAOkU,EAChBlU,EAAI,IAAM6T,EAAOE,GAAQG,IAEzBA,EAA0C,EAAtCrU,KAAKC,KAAK,EAAMkU,EAAOR,EAAOI,GAClC5T,EAAI,IAAMyT,EAAOE,GAAQO,EACzBlU,EAAI,IAAM8T,EAAOJ,GAAQQ,EACzBlU,EAAI,IAAM6T,EAAOE,GAAQG,EACzBlU,EAAI,GAAK,IAAOkU,GAGblU,GAlDY,GCliBpB,MAAMmU,UAAa5S,MACtBC,YACI4S,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNC,EAAM,EACNhC,EAAM,EACNC,EAAM,EACNC,EAAM,EACN+B,EAAM,EACN9B,EAAM,EACNC,EAAM,EACNC,EAAM,EACN6B,EAAM,EACN5B,EAAM,EACNC,EAAM,EACNC,EAAM,GAGN,OADAvR,MAAM2S,EAAKC,EAAKC,EAAKC,EAAKC,EAAKhC,EAAKC,EAAKC,EAAK+B,EAAK9B,EAAKC,EAAKC,EAAK6B,EAAK5B,EAAKC,EAAKC,GAC1EtR,KAGPhC,QACA,OAAOgC,KAAK,IAGZ/B,QACA,OAAO+B,KAAK,IAGZ9B,QACA,OAAO8B,KAAK,IAGZ6B,QACA,OAAO7B,KAAK,IAGZhC,MAAEiC,GACFD,KAAK,IAAMC,EAGXhC,MAAEgC,GACFD,KAAK,IAAMC,EAGX/B,MAAE+B,GACFD,KAAK,IAAMC,EAGX4B,MAAE5B,GACFD,KAAK,IAAMC,EAGfC,IAAIwS,EAAKC,EAAKC,EAAKC,EAAKC,EAAKhC,EAAKC,EAAKC,EAAK+B,EAAK9B,EAAKC,EAAKC,EAAK6B,EAAK5B,EAAKC,EAAKC,GAC3E,OAAIoB,EAAIpV,OAAe0C,KAAKG,KAAKuS,IDvBlC,SAAapU,EAAKoU,EAAKC,EAAKC,EAAKC,EAAKC,EAAKhC,EAAKC,EAAKC,EAAK+B,EAAK9B,EAAKC,EAAKC,EAAK6B,EAAK5B,EAAKC,EAAKC,GAChGhT,EAAI,GAAKoU,EACTpU,EAAI,GAAKqU,EACTrU,EAAI,GAAKsU,EACTtU,EAAI,GAAKuU,EACTvU,EAAI,GAAKwU,EACTxU,EAAI,GAAKwS,EACTxS,EAAI,GAAKyS,EACTzS,EAAI,GAAK0S,EACT1S,EAAI,GAAKyU,EACTzU,EAAI,GAAK2S,EACT3S,EAAI,IAAM4S,EACV5S,EAAI,IAAM6S,EACV7S,EAAI,IAAM0U,EACV1U,EAAI,IAAM8S,EACV9S,EAAI,IAAM+S,EACV/S,EAAI,IAAMgT,ECQN2B,CAAajT,KAAM0S,EAAKC,EAAKC,EAAKC,EAAKC,EAAKhC,EAAKC,EAAKC,EAAK+B,EAAK9B,EAAKC,EAAKC,EAAK6B,EAAK5B,EAAKC,EAAKC,GACvFtR,MAGXkT,UAAUjT,EAAGwB,EAAIzB,MAEb,ODuPD,SAAmB1B,EAAKP,EAAGkC,GAC9B,IAGIuP,EAAKC,EAAKC,EAAKC,EACfC,EAAKC,EAAKC,EAAKC,EACfC,EAAKC,EAAKC,EAAKC,EALfnS,EAAIiC,EAAE,GACNhC,EAAIgC,EAAE,GACN/B,EAAI+B,EAAE,GAKNlC,IAAMO,GACNA,EAAI,IAAMP,EAAE,GAAKC,EAAID,EAAE,GAAKE,EAAIF,EAAE,GAAKG,EAAIH,EAAE,IAC7CO,EAAI,IAAMP,EAAE,GAAKC,EAAID,EAAE,GAAKE,EAAIF,EAAE,GAAKG,EAAIH,EAAE,IAC7CO,EAAI,IAAMP,EAAE,GAAKC,EAAID,EAAE,GAAKE,EAAIF,EAAE,IAAMG,EAAIH,EAAE,IAC9CO,EAAI,IAAMP,EAAE,GAAKC,EAAID,EAAE,GAAKE,EAAIF,EAAE,IAAMG,EAAIH,EAAE,MAE9CyR,EAAMzR,EAAE,GACR0R,EAAM1R,EAAE,GACR2R,EAAM3R,EAAE,GACR4R,EAAM5R,EAAE,GACR6R,EAAM7R,EAAE,GACR8R,EAAM9R,EAAE,GACR+R,EAAM/R,EAAE,GACRgS,EAAMhS,EAAE,GACRiS,EAAMjS,EAAE,GACRkS,EAAMlS,EAAE,GACRmS,EAAMnS,EAAE,IACRoS,EAAMpS,EAAE,IAERO,EAAI,GAAKkR,EACTlR,EAAI,GAAKmR,EACTnR,EAAI,GAAKoR,EACTpR,EAAI,GAAKqR,EACTrR,EAAI,GAAKsR,EACTtR,EAAI,GAAKuR,EACTvR,EAAI,GAAKwR,EACTxR,EAAI,GAAKyR,EACTzR,EAAI,GAAK0R,EACT1R,EAAI,GAAK2R,EACT3R,EAAI,IAAM4R,EACV5R,EAAI,IAAM6R,EAEV7R,EAAI,IAAMkR,EAAMxR,EAAI4R,EAAM3R,EAAI+R,EAAM9R,EAAIH,EAAE,IAC1CO,EAAI,IAAMmR,EAAMzR,EAAI6R,EAAM5R,EAAIgS,EAAM/R,EAAIH,EAAE,IAC1CO,EAAI,IAAMoR,EAAM1R,EAAI8R,EAAM7R,EAAIiS,EAAMhS,EAAIH,EAAE,IAC1CO,EAAI,IAAMqR,EAAM3R,EAAI+R,EAAM9R,EAAIkS,EAAMjS,EAAIH,EAAE,KCnS1CoV,CAAmBnT,KAAMyB,EAAGxB,GACrBD,KAGXoT,OAAOnT,EAAG4O,EAAMpN,EAAIzB,MAEhB,OD4UD,SAAgB1B,EAAKP,EAAG0O,EAAKoC,GAChC,IAIIC,EAAGuE,EAAGrQ,EACNwM,EAAKC,EAAKC,EAAKC,EACfC,EAAKC,EAAKC,EAAKC,EACfC,EAAKC,EAAKC,EAAKC,EACfmD,EAAKC,EAAKC,EACVC,EAAKC,EAAKC,EACVC,EAAKC,EAAKC,EAVV9V,EAAI6Q,EAAK,GACT5Q,EAAI4Q,EAAK,GACT3Q,EAAI2Q,EAAK,GACThQ,EAAMV,KAAKoT,MAAMvT,EAAGC,EAAGC,GASvBC,KAAK4V,IAAIlV,GA/ZD,OAmaZA,EAAM,EAAIA,EACVb,GAAKa,EACLZ,GAAKY,EACLX,GAAKW,EAELiQ,EAAI3Q,KAAKuO,IAAID,GACb4G,EAAIlV,KAAKwO,IAAIF,GACbzJ,EAAI,EAAIqQ,EAER7D,EAAMzR,EAAE,GACR0R,EAAM1R,EAAE,GACR2R,EAAM3R,EAAE,GACR4R,EAAM5R,EAAE,GACR6R,EAAM7R,EAAE,GACR8R,EAAM9R,EAAE,GACR+R,EAAM/R,EAAE,GACRgS,EAAMhS,EAAE,GACRiS,EAAMjS,EAAE,GACRkS,EAAMlS,EAAE,GACRmS,EAAMnS,EAAE,IACRoS,EAAMpS,EAAE,IAGRuV,EAAMtV,EAAIA,EAAIgF,EAAIqQ,EAClBE,EAAMtV,EAAID,EAAIgF,EAAI9E,EAAI4Q,EACtB0E,EAAMtV,EAAIF,EAAIgF,EAAI/E,EAAI6Q,EACtB2E,EAAMzV,EAAIC,EAAI+E,EAAI9E,EAAI4Q,EACtB4E,EAAMzV,EAAIA,EAAI+E,EAAIqQ,EAClBM,EAAMzV,EAAID,EAAI+E,EAAIhF,EAAI8Q,EACtB8E,EAAM5V,EAAIE,EAAI8E,EAAI/E,EAAI6Q,EACtB+E,EAAM5V,EAAIC,EAAI8E,EAAIhF,EAAI8Q,EACtBgF,EAAM5V,EAAIA,EAAI8E,EAAIqQ,EAGlB/U,EAAI,GAAKkR,EAAM8D,EAAM1D,EAAM2D,EAAMvD,EAAMwD,EACvClV,EAAI,GAAKmR,EAAM6D,EAAMzD,EAAM0D,EAAMtD,EAAMuD,EACvClV,EAAI,GAAKoR,EAAM4D,EAAMxD,EAAMyD,EAAMrD,EAAMsD,EACvClV,EAAI,GAAKqR,EAAM2D,EAAMvD,EAAMwD,EAAMpD,EAAMqD,EACvClV,EAAI,GAAKkR,EAAMiE,EAAM7D,EAAM8D,EAAM1D,EAAM2D,EACvCrV,EAAI,GAAKmR,EAAMgE,EAAM5D,EAAM6D,EAAMzD,EAAM0D,EACvCrV,EAAI,GAAKoR,EAAM+D,EAAM3D,EAAM4D,EAAMxD,EAAMyD,EACvCrV,EAAI,GAAKqR,EAAM8D,EAAM1D,EAAM2D,EAAMvD,EAAMwD,EACvCrV,EAAI,GAAKkR,EAAMoE,EAAMhE,EAAMiE,EAAM7D,EAAM8D,EACvCxV,EAAI,GAAKmR,EAAMmE,EAAM/D,EAAMgE,EAAM5D,EAAM6D,EACvCxV,EAAI,IAAMoR,EAAMkE,EAAM9D,EAAM+D,EAAM3D,EAAM4D,EACxCxV,EAAI,IAAMqR,EAAMiE,EAAM7D,EAAM8D,EAAM1D,EAAM2D,EAEpC/V,IAAMO,IAENA,EAAI,IAAMP,EAAE,IACZO,EAAI,IAAMP,EAAE,IACZO,EAAI,IAAMP,EAAE,IACZO,EAAI,IAAMP,EAAE,MClZZiW,CAAgBhU,KAAMyB,EAAGxB,EAAG4O,GACrB7O,KAGXmB,MAAMlB,EAAGwB,EAAIzB,MAET,ODsSD,SAAe1B,EAAKP,EAAGkC,GAC1B,IAAIjC,EAAIiC,EAAE,GACNhC,EAAIgC,EAAE,GACN/B,EAAI+B,EAAE,GAEV3B,EAAI,GAAKP,EAAE,GAAKC,EAChBM,EAAI,GAAKP,EAAE,GAAKC,EAChBM,EAAI,GAAKP,EAAE,GAAKC,EAChBM,EAAI,GAAKP,EAAE,GAAKC,EAChBM,EAAI,GAAKP,EAAE,GAAKE,EAChBK,EAAI,GAAKP,EAAE,GAAKE,EAChBK,EAAI,GAAKP,EAAE,GAAKE,EAChBK,EAAI,GAAKP,EAAE,GAAKE,EAChBK,EAAI,GAAKP,EAAE,GAAKG,EAChBI,EAAI,GAAKP,EAAE,GAAKG,EAChBI,EAAI,IAAMP,EAAE,IAAMG,EAClBI,EAAI,IAAMP,EAAE,IAAMG,EAClBI,EAAI,IAAMP,EAAE,IACZO,EAAI,IAAMP,EAAE,IACZO,EAAI,IAAMP,EAAE,IACZO,EAAI,IAAMP,EAAE,IC3TRkW,CAAejU,KAAMyB,EAAgB,iBAANxB,EAAiB,CAACA,EAAGA,EAAGA,GAAKA,GACrDD,KAGXS,SAASyT,EAAIC,GAMT,OALIA,EACA5E,EAAkBvP,KAAMkU,EAAIC,GAE5B5E,EAAkBvP,KAAMA,KAAMkU,GAE3BlU,KAGXuM,WD1BG,IAAkBjO,EC4BjB,OD5BiBA,EC2BC0B,MD1BlB,GAAK,EACT1B,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,ECYC0B,KAGXG,KAAKsB,GDnFF,IAAcnD,EAAKP,ECqFlB,ODrFkBA,ECoFE0D,GDpFPnD,ECoFC0B,MDnFd,GAAKjC,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,IAAMP,EAAE,IACZO,EAAI,IAAMP,EAAE,IACZO,EAAI,IAAMP,EAAE,IACZO,EAAI,IAAMP,EAAE,IACZO,EAAI,IAAMP,EAAE,IACZO,EAAI,IAAMP,EAAE,ICqEDiC,KAGXoU,iBAAgBC,IAAEA,EAAGC,OAAEA,EAAMC,KAAEA,EAAIC,IAAEA,GAAQ,IAEzC,OD+mBD,SAAqBlW,EAAKmW,EAAMH,EAAQC,EAAMC,GACjD,IAAIE,EAAI,EAAMvW,KAAKwW,IAAIF,EAAO,GAC1BG,EAAK,GAAKL,EAAOC,GACrBlW,EAAI,GAAKoW,EAAIJ,EACbhW,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAKoW,EACTpW,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,KAAOkW,EAAMD,GAAQK,EACzBtW,EAAI,KAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EAAIkW,EAAMD,EAAOK,EAC3BtW,EAAI,IAAM,ECloBNuW,CAAqB7U,KAAMqU,EAAKC,EAAQC,EAAMC,GACvCxU,KAGX8U,gBAAeC,KAAEA,EAAIC,MAAEA,EAAKC,OAAEA,EAAMC,IAAEA,EAAGX,KAAEA,EAAIC,IAAEA,IAE7C,OD4oBD,SAAelW,EAAKyW,EAAMC,EAAOC,EAAQC,EAAKX,EAAMC,GACvD,IAAIW,EAAK,GAAKJ,EAAOC,GACjBI,EAAK,GAAKH,EAASC,GACnBN,EAAK,GAAKL,EAAOC,GACrBlW,EAAI,IAAK,EAAK6W,EACd7W,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAK,EAAK8W,EACd9W,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EAAIsW,EACdtW,EAAI,IAAM,EACVA,EAAI,KAAOyW,EAAOC,GAASG,EAC3B7W,EAAI,KAAO4W,EAAMD,GAAUG,EAC3B9W,EAAI,KAAOkW,EAAMD,GAAQK,EACzBtW,EAAI,IAAM,EChqBN+W,CAAerV,KAAM+U,EAAMC,EAAOC,EAAQC,EAAKX,EAAMC,GAC9CxU,KAGXsV,eAAepT,GAEX,ODijBD,SAAkB5D,EAAK4D,GAC1B,IAAIlE,EAAIkE,EAAE,GACNjE,EAAIiE,EAAE,GACNhE,EAAIgE,EAAE,GACNL,EAAIK,EAAE,GACNqT,EAAKvX,EAAIA,EACTwX,EAAKvX,EAAIA,EACTwX,EAAKvX,EAAIA,EAETwX,EAAK1X,EAAIuX,EACTI,EAAK1X,EAAIsX,EACTK,EAAK3X,EAAIuX,EACTK,EAAK3X,EAAIqX,EACTO,EAAK5X,EAAIsX,EACTO,EAAK7X,EAAIuX,EACTO,EAAKnU,EAAI0T,EACTU,EAAKpU,EAAI2T,EACTU,EAAKrU,EAAI4T,EAEbnX,EAAI,GAAK,EAAIsX,EAAKG,EAClBzX,EAAI,GAAKqX,EAAKO,EACd5X,EAAI,GAAKuX,EAAKI,EACd3X,EAAI,GAAK,EAETA,EAAI,GAAKqX,EAAKO,EACd5X,EAAI,GAAK,EAAIoX,EAAKK,EAClBzX,EAAI,GAAKwX,EAAKE,EACd1X,EAAI,GAAK,EAETA,EAAI,GAAKuX,EAAKI,EACd3X,EAAI,GAAKwX,EAAKE,EACd1X,EAAI,IAAM,EAAIoX,EAAKE,EACnBtX,EAAI,IAAM,EAEVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,ECvlBN6X,CAAkBnW,KAAMkC,GACjBlC,KAGXoW,YAAYnW,GAIR,OAHAD,KAAKhC,EAAIiC,EAAE,GACXD,KAAK/B,EAAIgC,EAAE,GACXD,KAAK9B,EAAI+B,EAAE,GACJD,KAGXW,QAAQc,EAAIzB,MAER,ODkBD,SAAgB1B,EAAKP,GACxB,IAAIyR,EAAMzR,EAAE,GACR0R,EAAM1R,EAAE,GACR2R,EAAM3R,EAAE,GACR4R,EAAM5R,EAAE,GACR6R,EAAM7R,EAAE,GACR8R,EAAM9R,EAAE,GACR+R,EAAM/R,EAAE,GACRgS,EAAMhS,EAAE,GACRiS,EAAMjS,EAAE,GACRkS,EAAMlS,EAAE,GACRmS,EAAMnS,EAAE,IACRoS,EAAMpS,EAAE,IACRqS,EAAMrS,EAAE,IACRsS,EAAMtS,EAAE,IACRuS,EAAMvS,EAAE,IACRwS,EAAMxS,EAAE,IAERuV,EAAM9D,EAAMK,EAAMJ,EAAMG,EACxB2D,EAAM/D,EAAMM,EAAMJ,EAAME,EACxB4D,EAAMhE,EAAMO,EAAMJ,EAAMC,EACxByG,EAAM5G,EAAMK,EAAMJ,EAAMG,EACxByG,EAAM7G,EAAMM,EAAMJ,EAAME,EACxB0G,EAAM7G,EAAMK,EAAMJ,EAAMG,EACxB0G,EAAMxG,EAAMK,EAAMJ,EAAMG,EACxBqG,EAAMzG,EAAMM,EAAMJ,EAAME,EACxBsG,EAAM1G,EAAMO,EAAMJ,EAAMC,EACxBuG,EAAM1G,EAAMK,EAAMJ,EAAMG,EACxBoD,EAAMxD,EAAMM,EAAMJ,EAAME,EACxBqD,EAAMxD,EAAMK,EAAMJ,EAAMG,EAGxBsG,EAAMtD,EAAMI,EAAMH,EAAME,EAAMD,EAAMmD,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAEvEI,IAGLA,EAAM,EAAMA,EAEZtY,EAAI,IAAMuR,EAAM6D,EAAM5D,EAAM2D,EAAM1D,EAAM4G,GAAOC,EAC/CtY,EAAI,IAAMoR,EAAM+D,EAAMhE,EAAMiE,EAAM/D,EAAMgH,GAAOC,EAC/CtY,EAAI,IAAM+R,EAAMkG,EAAMjG,EAAMgG,EAAM/F,EAAM8F,GAAOO,EAC/CtY,EAAI,IAAM4R,EAAMoG,EAAMrG,EAAMsG,EAAMpG,EAAMkG,GAAOO,EAC/CtY,EAAI,IAAMwR,EAAM4G,EAAM9G,EAAM8D,EAAM3D,EAAM0G,GAAOG,EAC/CtY,EAAI,IAAMkR,EAAMkE,EAAMhE,EAAMgH,EAAM/G,EAAM8G,GAAOG,EAC/CtY,EAAI,IAAMgS,EAAMkD,EAAMpD,EAAMmG,EAAMhG,EAAMgD,GAAOqD,EAC/CtY,EAAI,IAAM0R,EAAMuG,EAAMrG,EAAMsD,EAAMrD,EAAMoD,GAAOqD,EAC/CtY,EAAI,IAAMsR,EAAM6D,EAAM5D,EAAM6G,EAAM3G,EAAMyG,GAAOI,EAC/CtY,EAAI,IAAMmR,EAAMiH,EAAMlH,EAAMiE,EAAM9D,EAAM6G,GAAOI,EAC/CtY,EAAI,KAAO8R,EAAMkG,EAAMjG,EAAMmD,EAAMjD,EAAM+C,GAAOsD,EAChDtY,EAAI,KAAO2R,EAAMuD,EAAMxD,EAAMsG,EAAMnG,EAAMmD,GAAOsD,EAChDtY,EAAI,KAAOuR,EAAM4G,EAAM7G,EAAM+G,EAAM7G,EAAM0G,GAAOI,EAChDtY,EAAI,KAAOkR,EAAMmH,EAAMlH,EAAMgH,EAAM/G,EAAM8G,GAAOI,EAChDtY,EAAI,KAAO+R,EAAMkD,EAAMnD,EAAMiG,EAAM/F,EAAMgD,GAAOsD,EAChDtY,EAAI,KAAO0R,EAAMqG,EAAMpG,EAAMsD,EAAMrD,EAAMoD,GAAOsD,GCzE5CC,CAAgB7W,KAAMyB,GACfzB,KAGX8W,QAAQ5U,EAAG6U,EAAK5V,GAEZ,OD6eD,SAAsC7C,EAAK4D,EAAGjC,EAAG6O,GAEpD,IAAI9Q,EAAIkE,EAAE,GACNjE,EAAIiE,EAAE,GACNhE,EAAIgE,EAAE,GACNL,EAAIK,EAAE,GACNqT,EAAKvX,EAAIA,EACTwX,EAAKvX,EAAIA,EACTwX,EAAKvX,EAAIA,EAETwX,EAAK1X,EAAIuX,EACTyB,EAAKhZ,EAAIwX,EACTyB,EAAKjZ,EAAIyX,EACTG,EAAK3X,EAAIuX,EACT0B,EAAKjZ,EAAIwX,EACTM,EAAK7X,EAAIuX,EACTO,EAAKnU,EAAI0T,EACTU,EAAKpU,EAAI2T,EACTU,EAAKrU,EAAI4T,EACTpH,EAAKS,EAAE,GACPP,EAAKO,EAAE,GACPL,EAAKK,EAAE,GAEXxQ,EAAI,IAAM,GAAKsX,EAAKG,IAAO1H,EAC3B/P,EAAI,IAAM0Y,EAAKd,GAAM7H,EACrB/P,EAAI,IAAM2Y,EAAKhB,GAAM5H,EACrB/P,EAAI,GAAK,EACTA,EAAI,IAAM0Y,EAAKd,GAAM3H,EACrBjQ,EAAI,IAAM,GAAKoX,EAAKK,IAAOxH,EAC3BjQ,EAAI,IAAM4Y,EAAKlB,GAAMzH,EACrBjQ,EAAI,GAAK,EACTA,EAAI,IAAM2Y,EAAKhB,GAAMxH,EACrBnQ,EAAI,IAAM4Y,EAAKlB,GAAMvH,EACrBnQ,EAAI,KAAO,GAAKoX,EAAKE,IAAOnH,EAC5BnQ,EAAI,IAAM,EACVA,EAAI,IAAM2B,EAAE,GACZ3B,EAAI,IAAM2B,EAAE,GACZ3B,EAAI,IAAM2B,EAAE,GACZ3B,EAAI,IAAM,ECphBN6Y,CAAsCnX,KAAMkC,EAAG6U,EAAK5V,GAC7CnB,KAGXoX,YAAYlV,GAER,OADAsP,EAAqBtP,EAAGlC,MACjBA,KAGXmL,eAAe4L,GD+VZ,IAAwBzY,EAAKuS,EC7V5B,OD6V4BA,EC9VC7Q,MD8VN1B,EC9VCyY,GD+VxB,GAAKlG,EAAI,IACbvS,EAAI,GAAKuS,EAAI,IACbvS,EAAI,GAAKuS,EAAI,IChWF7Q,KAGXqX,WAAWlW,GAEP,OADAyP,EAAoBzP,EAAOnB,MACpBA,KAGXsX,oBACI,ODwXD,SAA2BzG,GAC9B,IAAIC,EAAMD,EAAI,GACVE,EAAMF,EAAI,GACVG,EAAMH,EAAI,GACVI,EAAMJ,EAAI,GACVK,EAAML,EAAI,GACVM,EAAMN,EAAI,GACVO,EAAMP,EAAI,GACVQ,EAAMR,EAAI,GACVS,EAAMT,EAAI,IAEd,MAAM7S,EAAI8S,EAAMA,EAAMC,EAAMA,EAAMC,EAAMA,EAClC/S,EAAIgT,EAAMA,EAAMC,EAAMA,EAAMC,EAAMA,EAClCjT,EAAIkT,EAAMA,EAAMC,EAAMA,EAAMC,EAAMA,EAExC,OAAOnT,KAAKC,KAAKD,KAAKoZ,IAAIvZ,EAAGC,EAAGC,ICvYrBsZ,CAA2BxX,MAGtCyX,OAAOC,EAAKxO,EAAQyO,GAEhB,OD8nBD,SAAkBrZ,EAAKoZ,EAAKxO,EAAQyO,GACvC,IAAIC,EAAOF,EAAI,GACXG,EAAOH,EAAI,GACXI,EAAOJ,EAAI,GACXK,EAAMJ,EAAG,GACTK,EAAML,EAAG,GACTM,EAAMN,EAAG,GAETO,EAAKN,EAAO1O,EAAO,GACnBiP,EAAKN,EAAO3O,EAAO,GACnBuM,EAAKqC,EAAO5O,EAAO,GAEnBrK,EAAMqZ,EAAKA,EAAKC,EAAKA,EAAK1C,EAAKA,EACvB,IAAR5W,EAEA4W,EAAK,GAEL5W,EAAM,EAAIV,KAAKC,KAAKS,GACpBqZ,GAAMrZ,EACNsZ,GAAMtZ,EACN4W,GAAM5W,GAGV,IAAIuZ,EAAKJ,EAAMvC,EAAKwC,EAAME,EACtBE,EAAKJ,EAAMC,EAAKH,EAAMtC,EACtBF,EAAKwC,EAAMI,EAAKH,EAAME,EAE1BrZ,EAAMuZ,EAAKA,EAAKC,EAAKA,EAAK9C,EAAKA,EACnB,IAAR1W,IAEIoZ,EACAF,GAAO,KACAC,EACPC,GAAO,KAEPD,GAAO,KAEVI,EAAKJ,EAAMvC,EAAKwC,EAAME,EAAME,EAAKJ,EAAMC,EAAKH,EAAMtC,EAAMF,EAAKwC,EAAMI,EAAKH,EAAME,EAE/ErZ,EAAMuZ,EAAKA,EAAKC,EAAKA,EAAK9C,EAAKA,GAGnC1W,EAAM,EAAIV,KAAKC,KAAKS,GACpBuZ,GAAMvZ,EACNwZ,GAAMxZ,EACN0W,GAAM1W,EAENP,EAAI,GAAK8Z,EACT9Z,EAAI,GAAK+Z,EACT/Z,EAAI,GAAKiX,EACTjX,EAAI,GAAK,EACTA,EAAI,GAAK6Z,EAAK5C,EAAKE,EAAK4C,EACxB/Z,EAAI,GAAKmX,EAAK2C,EAAKF,EAAK3C,EACxBjX,EAAI,GAAK4Z,EAAKG,EAAKF,EAAKC,EACxB9Z,EAAI,GAAK,EACTA,EAAI,GAAK4Z,EACT5Z,EAAI,GAAK6Z,EACT7Z,EAAI,IAAMmX,EACVnX,EAAI,IAAM,EACVA,EAAI,IAAMsZ,EACVtZ,EAAI,IAAMuZ,EACVvZ,EAAI,IAAMwZ,EACVxZ,EAAI,IAAM,EC7rBNga,CAAkBtY,KAAM0X,EAAKxO,EAAQyO,GAC9B3X,KAGXuY,cACI,ODkDD,SAAqBxa,GACxB,IAAIyR,EAAMzR,EAAE,GACR0R,EAAM1R,EAAE,GACR2R,EAAM3R,EAAE,GACR4R,EAAM5R,EAAE,GACR6R,EAAM7R,EAAE,GACR8R,EAAM9R,EAAE,GACR+R,EAAM/R,EAAE,GACRgS,EAAMhS,EAAE,GACRiS,EAAMjS,EAAE,GACRkS,EAAMlS,EAAE,GACRmS,EAAMnS,EAAE,IACRoS,EAAMpS,EAAE,IACRqS,EAAMrS,EAAE,IACRsS,EAAMtS,EAAE,IACRuS,EAAMvS,EAAE,IACRwS,EAAMxS,EAAE,IAgBZ,OAdUyR,EAAMK,EAAMJ,EAAMG,IAWlBM,EAAMK,EAAMJ,EAAMG,IAVlBd,EAAMM,EAAMJ,EAAME,IASlBK,EAAMM,EAAMJ,EAAME,IARlBb,EAAMO,EAAMJ,EAAMC,IAOlBK,EAAMK,EAAMJ,EAAMG,IANlBZ,EAAMK,EAAMJ,EAAMG,IAKlBG,EAAMO,EAAMJ,EAAMC,IAJlBX,EAAMM,EAAMJ,EAAME,IAGlBG,EAAMM,EAAMJ,EAAME,IAFlBV,EAAMK,EAAMJ,EAAMG,IAClBE,EAAMK,EAAMJ,EAAMG,GC1EjBoI,CAAqBxY,MAGhCmD,UAAUpF,EAAGqF,EAAI,GAiBb,OAhBApD,KAAK,GAAKjC,EAAEqF,GACZpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,GAAKjC,EAAEqF,EAAI,GAChBpD,KAAK,IAAMjC,EAAEqF,EAAI,IACjBpD,KAAK,IAAMjC,EAAEqF,EAAI,IACjBpD,KAAK,IAAMjC,EAAEqF,EAAI,IACjBpD,KAAK,IAAMjC,EAAEqF,EAAI,IACjBpD,KAAK,IAAMjC,EAAEqF,EAAI,IACjBpD,KAAK,IAAMjC,EAAEqF,EAAI,IACVpD,KAGXqD,QAAQtF,EAAI,GAAIqF,EAAI,GAiBhB,OAhBArF,EAAEqF,GAAKpD,KAAK,GACZjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,IAAMpD,KAAK,IACjBjC,EAAEqF,EAAI,IAAMpD,KAAK,IACjBjC,EAAEqF,EAAI,IAAMpD,KAAK,IACjBjC,EAAEqF,EAAI,IAAMpD,KAAK,IACjBjC,EAAEqF,EAAI,IAAMpD,KAAK,IACjBjC,EAAEqF,EAAI,IAAMpD,KAAK,IACVjC,GC/Lf,MAAM0a,EAAU,IAAIhG,EAEb,MAAMiG,UAAc7Y,MACvBC,YAAY9B,EAAI,EAAGC,EAAID,EAAGE,EAAIF,EAAGoQ,EAAQ,OAIrC,OAHArO,MAAM/B,EAAGC,EAAGC,GACZ8B,KAAKoO,MAAQA,EACbpO,KAAKsM,SAAW,OACTtM,KAGPhC,QACA,OAAOgC,KAAK,GAGZ/B,QACA,OAAO+B,KAAK,GAGZ9B,QACA,OAAO8B,KAAK,GAGZhC,MAAEiC,GACFD,KAAK,GAAKC,EACVD,KAAKsM,WAGLrO,MAAEgC,GACFD,KAAK,GAAKC,EACVD,KAAKsM,WAGLpO,MAAE+B,GACFD,KAAK,GAAKC,EACVD,KAAKsM,WAGTpM,IAAIlC,EAAGC,EAAID,EAAGE,EAAIF,GACd,OAAIA,EAAEV,OAAe0C,KAAKG,KAAKnC,IAC/BgC,KAAK,GAAKhC,EACVgC,KAAK,GAAK/B,EACV+B,KAAK,GAAK9B,EACV8B,KAAKsM,WACEtM,MAGXG,KAAKF,GAKD,OAJAD,KAAK,GAAKC,EAAE,GACZD,KAAK,GAAKC,EAAE,GACZD,KAAK,GAAKC,EAAE,GACZD,KAAKsM,WACEtM,KAGX2Y,QAAQvK,GAGJ,OAFApO,KAAKoO,MAAQA,EACbpO,KAAKsM,WACEtM,KAGX4Y,mBAAmBnX,EAAG2M,EAAQpO,KAAKoO,OAE/B,OChED,SAA4B9P,EAAKmD,EAAG2M,EAAQ,OACjC,QAAVA,GACA9P,EAAI,GAAKH,KAAK0a,KAAK1a,KAAK2a,IAAI3a,KAAKoZ,IAAI9V,EAAE,IAAI,GAAK,IAC5CtD,KAAK4V,IAAItS,EAAE,IAAM,QACjBnD,EAAI,GAAKH,KAAK4a,OAAOtX,EAAE,GAAIA,EAAE,KAC7BnD,EAAI,GAAKH,KAAK4a,OAAOtX,EAAE,GAAIA,EAAE,MAE7BnD,EAAI,GAAKH,KAAK4a,MAAMtX,EAAE,GAAIA,EAAE,IAC5BnD,EAAI,GAAK,IAEI,QAAV8P,GACP9P,EAAI,GAAKH,KAAK0a,MAAM1a,KAAK2a,IAAI3a,KAAKoZ,IAAI9V,EAAE,IAAI,GAAK,IAC7CtD,KAAK4V,IAAItS,EAAE,IAAM,QACjBnD,EAAI,GAAKH,KAAK4a,MAAMtX,EAAE,GAAIA,EAAE,KAC5BnD,EAAI,GAAKH,KAAK4a,MAAMtX,EAAE,GAAIA,EAAE,MAE5BnD,EAAI,GAAKH,KAAK4a,OAAOtX,EAAE,GAAIA,EAAE,IAC7BnD,EAAI,GAAK,IAEI,QAAV8P,GACP9P,EAAI,GAAKH,KAAK0a,KAAK1a,KAAK2a,IAAI3a,KAAKoZ,IAAI9V,EAAE,IAAI,GAAK,IAC5CtD,KAAK4V,IAAItS,EAAE,IAAM,QACjBnD,EAAI,GAAKH,KAAK4a,OAAOtX,EAAE,GAAIA,EAAE,KAC7BnD,EAAI,GAAKH,KAAK4a,OAAOtX,EAAE,GAAIA,EAAE,MAE7BnD,EAAI,GAAK,EACTA,EAAI,GAAKH,KAAK4a,MAAMtX,EAAE,GAAIA,EAAE,MAEf,QAAV2M,GACP9P,EAAI,GAAKH,KAAK0a,MAAM1a,KAAK2a,IAAI3a,KAAKoZ,IAAI9V,EAAE,IAAI,GAAK,IAC7CtD,KAAK4V,IAAItS,EAAE,IAAM,QACjBnD,EAAI,GAAKH,KAAK4a,MAAMtX,EAAE,GAAIA,EAAE,KAC5BnD,EAAI,GAAKH,KAAK4a,MAAMtX,EAAE,GAAIA,EAAE,MAE5BnD,EAAI,GAAK,EACTA,EAAI,GAAKH,KAAK4a,OAAOtX,EAAE,GAAIA,EAAE,MAEhB,QAAV2M,GACP9P,EAAI,GAAKH,KAAK0a,KAAK1a,KAAK2a,IAAI3a,KAAKoZ,IAAI9V,EAAE,IAAI,GAAK,IAC5CtD,KAAK4V,IAAItS,EAAE,IAAM,QACjBnD,EAAI,GAAKH,KAAK4a,OAAOtX,EAAE,GAAIA,EAAE,IAC7BnD,EAAI,GAAKH,KAAK4a,OAAOtX,EAAE,GAAIA,EAAE,MAE7BnD,EAAI,GAAK,EACTA,EAAI,GAAKH,KAAK4a,MAAMtX,EAAE,GAAIA,EAAE,OAEf,QAAV2M,IACP9P,EAAI,GAAKH,KAAK0a,MAAM1a,KAAK2a,IAAI3a,KAAKoZ,IAAI9V,EAAE,IAAI,GAAK,IAC7CtD,KAAK4V,IAAItS,EAAE,IAAM,QACjBnD,EAAI,GAAKH,KAAK4a,MAAMtX,EAAE,GAAIA,EAAE,IAC5BnD,EAAI,GAAKH,KAAK4a,MAAMtX,EAAE,GAAIA,EAAE,MAE5BnD,EAAI,GAAKH,KAAK4a,OAAOtX,EAAE,GAAIA,EAAE,KAC7BnD,EAAI,GAAK,IDUb0a,CAA6BhZ,KAAMyB,EAAG2M,GAC/BpO,KAGXsV,eAAepT,EAAGkM,EAAQpO,KAAKoO,OAE3B,OADAqK,EAAQnD,eAAepT,GAChBlC,KAAK4Y,mBAAmBH,EAASrK,GAG5C/K,QAAQtF,EAAI,GAAIqF,EAAI,GAIhB,OAHArF,EAAEqF,GAAKpD,KAAK,GACZjC,EAAEqF,EAAI,GAAKpD,KAAK,GAChBjC,EAAEqF,EAAI,GAAKpD,KAAK,GACTjC,GExER,MAAMkb,EACTnZ,cACIE,KAAKkZ,OAAS,KACdlZ,KAAKmZ,SAAW,GAChBnZ,KAAKwK,SAAU,EAEfxK,KAAKoZ,OAAS,IAAI3G,EAClBzS,KAAKkL,YAAc,IAAIuH,EACvBzS,KAAKqZ,kBAAmB,EAExBrZ,KAAKsZ,SAAW,IAAI1Z,EACpBI,KAAKuZ,WAAa,IAAIlN,EACtBrM,KAAKmB,MAAQ,IAAIvB,EAAK,GACtBI,KAAKwZ,SAAW,IAAId,EACpB1Y,KAAK2X,GAAK,IAAI/X,EAAK,EAAG,EAAG,GAEzBI,KAAKwZ,SAASlN,SAAW,IAAMtM,KAAKuZ,WAAWrL,UAAUlO,KAAKwZ,UAC9DxZ,KAAKuZ,WAAWjN,SAAW,IAAMtM,KAAKwZ,SAASlE,eAAetV,KAAKuZ,YAGvEE,UAAUP,EAAQQ,GAAe,GACzB1Z,KAAKkZ,QAAUA,IAAWlZ,KAAKkZ,QAAQlZ,KAAKkZ,OAAOS,YAAY3Z,MAAM,GACzEA,KAAKkZ,OAASA,EACVQ,GAAgBR,GAAQA,EAAOU,SAAS5Z,MAAM,GAGtD4Z,SAASC,EAAOC,GAAc,IACpB9Z,KAAKmZ,SAASY,QAAQF,IAAQ7Z,KAAKmZ,SAASvO,KAAKiP,GACnDC,GAAaD,EAAMJ,UAAUzZ,MAAM,GAG3C2Z,YAAYE,EAAOC,GAAc,IACtB9Z,KAAKmZ,SAASY,QAAQF,IAAQ7Z,KAAKmZ,SAASa,OAAOha,KAAKmZ,SAASY,QAAQF,GAAQ,GACpFC,GAAaD,EAAMJ,UAAU,MAAM,GAG3C5N,kBAAkBoO,GACVja,KAAKqZ,kBAAkBrZ,KAAKka,gBAC5Bla,KAAKma,wBAA0BF,KACX,OAAhBja,KAAKkZ,OAAiBlZ,KAAKkL,YAAY/K,KAAKH,KAAKoZ,QAChDpZ,KAAKkL,YAAYzK,SAAST,KAAKkZ,OAAOhO,YAAalL,KAAKoZ,QAC7DpZ,KAAKma,wBAAyB,EAC9BF,GAAQ,GAGZ,IAAK,IAAI5c,EAAI,EAAG+c,EAAIpa,KAAKmZ,SAAS7b,OAAQD,EAAI+c,EAAG/c,IAC7C2C,KAAKmZ,SAAS9b,GAAGwO,kBAAkBoO,GAI3CC,eACIla,KAAKoZ,OAAOtC,QAAQ9W,KAAKuZ,WAAYvZ,KAAKsZ,SAAUtZ,KAAKmB,OACzDnB,KAAKma,wBAAyB,EAGlC7P,SAAS+P,GAEL,IAAIA,EAASra,MACb,IAAK,IAAI3C,EAAI,EAAG+c,EAAIpa,KAAKmZ,SAAS7b,OAAQD,EAAI+c,EAAG/c,IAC7C2C,KAAKmZ,SAAS9b,GAAGiN,SAAS+P,GAIlCC,YACIta,KAAKoZ,OAAOjO,eAAenL,KAAKsZ,UAChCtZ,KAAKoZ,OAAOhC,YAAYpX,KAAKuZ,YAC7BvZ,KAAKoZ,OAAO/B,WAAWrX,KAAKmB,OAC5BnB,KAAKwZ,SAASlE,eAAetV,KAAKuZ,YAGtC9B,OAAOvO,EAAQqR,GAAS,GAChBA,EAAQva,KAAKoZ,OAAO3B,OAAOzX,KAAKsZ,SAAUpQ,EAAQlJ,KAAK2X,IACtD3X,KAAKoZ,OAAO3B,OAAOvO,EAAQlJ,KAAKsZ,SAAUtZ,KAAK2X,IACpD3X,KAAKoZ,OAAOhC,YAAYpX,KAAKuZ,YAC7BvZ,KAAKwZ,SAASlE,eAAetV,KAAKuZ,aC3EzB,IAAI9G,EACH,IAAI7S,EACJ,IAAIA,ECNtB,MAAM4a,EAAQ,CACVC,MAAO,UACPC,MAAO,UACPC,IAAK,UACLC,MAAO,UACPC,KAAM,UACNC,QAAS,UACTC,KAAM,UACNC,OAAQ,UACRC,OAAQ,WAGL,SAASC,EAASC,GACF,IAAfA,EAAI7d,SAAc6d,EAAMA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IACtF,MAAMC,EAAM,4CAA4CC,KAAKF,GAE7D,OADKC,GAAKtW,QAAQwW,KAAK,gCAAgCH,mBAChD,CAACI,SAASH,EAAI,GAAI,IAAM,IAAKG,SAASH,EAAI,GAAI,IAAM,IAAKG,SAASH,EAAI,GAAI,IAAM,KAGpF,SAASI,EAAYC,GAExB,MAAO,GADPA,EAAMF,SAASE,KACE,GAAM,KAAO,KAAMA,GAAQ,EAAK,KAAO,KAAY,IAANA,GAAa,KAGxE,SAASC,EAAWhX,GAEvB,YAAc2D,IAAV3D,EAA4B,CAAC,EAAG,EAAG,GAGd,IAArBiX,UAAUre,OAAqBqe,UAG9BC,MAAMlX,GAGM,MAAbA,EAAM,GAAmBwW,EAASxW,GAGlC8V,EAAM9V,EAAMmX,eAAuBX,EAASV,EAAM9V,EAAMmX,iBAE5D/W,QAAQwW,KAAK,+BACN,CAAC,EAAG,EAAG,IATYE,EAAY9W,GCpBnC,MAAMoX,UAAcjc,MACvBC,YAAY4E,GACR,OAAI7E,MAAMkc,QAAQrX,GAAe3E,SAAS2E,GACnC3E,SAAS2b,KAAwBC,YAGxCK,QACA,OAAOhc,KAAK,GAGZic,QACA,OAAOjc,KAAK,GAGZxB,QACA,OAAOwB,KAAK,GAGZgc,MAAE/b,GACFD,KAAK,GAAKC,EAGVgc,MAAEhc,GACFD,KAAK,GAAKC,EAGVzB,MAAEyB,GACFD,KAAK,GAAKC,EAGdC,IAAIwE,GACA,OAAI7E,MAAMkc,QAAQrX,GAAe1E,KAAKG,KAAKuE,GACpC1E,KAAKG,KAAKub,KAAwBC,YAG7Cxb,KAAKF,GAID,OAHAD,KAAK,GAAKC,EAAE,GACZD,KAAK,GAAKC,EAAE,GACZD,KAAK,GAAKC,EAAE,GACLD,MC/Bf,MAAMkc,EAAW,IAAItc,EAErB,IAAIuc,EAAK,EACLC,EAAU,EAGVC,GAAiB,EAEd,MAAMC,EACTxc,YAAY6E,EAAIF,EAAa,IACpBE,EAAGjB,QAAQoB,QAAQC,MAAM,+CAC9B/E,KAAK2E,GAAKA,EACV3E,KAAKyE,WAAaA,EAClBzE,KAAKzC,GAAK4e,IAGVnc,KAAKuc,KAAO,GAEZvc,KAAKwc,UAAY,CAAEC,MAAO,EAAGC,MAAO,GACpC1c,KAAK2c,eAAiB,EAGtB3c,KAAK2E,GAAGK,SAASkC,gBAAgB,MACjClH,KAAK2E,GAAGK,SAAS4X,gBAAkB,KAGnC5c,KAAK6c,QAAU7c,KAAK2E,GAAGK,SAASE,MAGhC,IAAK,IAAI4X,KAAOrY,EACZzE,KAAK+c,aAAaD,EAAKrY,EAAWqY,IAI1CC,aAAaD,EAAKE,GA4Bd,GA3BAhd,KAAKyE,WAAWqY,GAAOE,EAGvBA,EAAKzf,GAAK6e,IACVY,EAAKC,KAAOD,EAAKC,MAAQ,EACzBD,EAAKE,KACDF,EAAKE,OACJF,EAAKG,KAAKrd,cAAgBsd,aACrBpd,KAAK2E,GAAG0Y,MACRL,EAAKG,KAAKrd,cAAgBwd,YAC1Btd,KAAK2E,GAAG4Y,eACRvd,KAAK2E,GAAG6Y,cAClBR,EAAK9T,OAAiB,UAAR4T,EAAkB9c,KAAK2E,GAAG8Y,qBAAuBzd,KAAK2E,GAAG+Y,aACvEV,EAAKW,WAAaX,EAAKW,aAAc,EACrCX,EAAKY,OAASZ,EAAKY,QAAU,EAC7BZ,EAAKa,OAASb,EAAKa,QAAU,EAC7Bb,EAAKN,MAAQM,EAAKN,QAAUM,EAAKY,OAASZ,EAAKG,KAAKW,WAAad,EAAKY,OAASZ,EAAKG,KAAK7f,OAAS0f,EAAKC,MACvGD,EAAKe,QAAUf,EAAKgB,WAAa,EACjChB,EAAKiB,aAAc,EACnBjB,EAAKkB,MAAQlB,EAAKkB,OAASle,KAAK2E,GAAGwZ,YAE9BnB,EAAK5T,QAENpJ,KAAKoe,gBAAgBpB,GAIrBA,EAAKe,QAAS,CAEd,GADA/d,KAAKqe,aAAc,EACfre,KAAK2c,gBAAkB3c,KAAK2c,iBAAmBK,EAAKN,MAAQM,EAAKe,QAEjE,OADAjZ,QAAQwW,KAAK,+DACLtb,KAAK2c,eAAiBxe,KAAK2a,IAAI9Y,KAAK2c,eAAgBK,EAAKN,MAAQM,EAAKe,SAElF/d,KAAK2c,eAAiBK,EAAKN,MAAQM,EAAKe,YACzB,UAARjB,EACP9c,KAAKwc,UAAUE,MAAQM,EAAKN,MACpB1c,KAAKyE,WAAW6Z,QACxBte,KAAKwc,UAAUE,MAAQve,KAAKoZ,IAAIvX,KAAKwc,UAAUE,MAAOM,EAAKN,QAInE0B,gBAAgBpB,GACZ,MAAMuB,GAAevB,EAAK5T,OACtBmV,IAAavB,EAAK5T,OAASpJ,KAAK2E,GAAG6Z,gBACnCxe,KAAK6c,QAAQrW,cAAgBwW,EAAK5T,SAClCpJ,KAAK2E,GAAG8Z,WAAWzB,EAAK9T,OAAQ8T,EAAK5T,QACrCpJ,KAAK6c,QAAQrW,YAAcwW,EAAK5T,QAEhCmV,EACAve,KAAK2E,GAAG+Z,WAAW1B,EAAK9T,OAAQ8T,EAAKG,KAAMH,EAAKkB,OAEhDle,KAAK2E,GAAGga,cAAc3B,EAAK9T,OAAQ,EAAG8T,EAAKG,MAE/CH,EAAKiB,aAAc,EAGvBW,SAASjW,GACL3I,KAAK+c,aAAa,QAASpU,GAG/BkW,aAAapC,EAAOC,GAChB1c,KAAKwc,UAAUC,MAAQA,EACvBzc,KAAKwc,UAAUE,MAAQA,EAG3BoC,kBAAkBnW,GACd3I,KAAK2c,eAAiBhU,EAG1BoW,UAAUpV,GACN3J,KAAKuc,KAAK5S,EAAQqV,gBAAkBhf,KAAK2E,GAAGK,SAASiC,oBACrDjH,KAAK2E,GAAGK,SAASkC,gBAAgBlH,KAAKuc,KAAK5S,EAAQqV,iBACnDhf,KAAKif,eAAetV,GAGxBsV,eAAetV,GAEXA,EAAQuV,mBAAmBlU,SAAQ,CAACmU,GAAUC,KAAEA,EAAIlC,KAAEA,MAElD,IAAKld,KAAKyE,WAAW2a,GAEjB,YADAta,QAAQwW,KAAK,oBAAoB8D,wBAIrC,MAAMpC,EAAOhd,KAAKyE,WAAW2a,GAE7Bpf,KAAK2E,GAAG8Z,WAAWzB,EAAK9T,OAAQ8T,EAAK5T,QACrCpJ,KAAK6c,QAAQrW,YAAcwW,EAAK5T,OAGhC,IAAIiW,EAAS,EACA,QAATnC,IAAgBmC,EAAS,GAChB,QAATnC,IAAgBmC,EAAS,GAChB,QAATnC,IAAgBmC,EAAS,GAE7B,MAAMpC,EAAOD,EAAKC,KAAOoC,EACnBzB,EAAoB,IAAXyB,EAAe,EAAIA,EAASA,EAASA,EAC9CxB,EAAoB,IAAXwB,EAAe,EAAIA,EAASA,EAE3C,IAAK,IAAIhiB,EAAI,EAAGA,EAAIgiB,EAAQhiB,IACxB2C,KAAK2E,GAAG2a,oBAAoBH,EAAW9hB,EAAG4f,EAAMD,EAAKE,KAAMF,EAAKW,WAAYX,EAAKY,OAASA,EAAQZ,EAAKa,OAASxgB,EAAIwgB,GACpH7d,KAAK2E,GAAG4a,wBAAwBJ,EAAW9hB,GAI3C2C,KAAK2E,GAAGK,SAAS8B,oBAAoBqY,EAAW9hB,EAAG2f,EAAKe,YAK5D/d,KAAKyE,WAAW6Z,OAAOte,KAAK2E,GAAG8Z,WAAWze,KAAK2E,GAAG8Y,qBAAsBzd,KAAKyE,WAAW6Z,MAAMlV,QAGtGqB,MAAKd,QAAEA,EAAO6V,KAAEA,EAAOxf,KAAK2E,GAAG8a,YACvBzf,KAAK2E,GAAGK,SAAS4X,kBAAoB,GAAG5c,KAAKzC,MAAMoM,EAAQqV,mBACtDhf,KAAKuc,KAAK5S,EAAQqV,iBAAiBhf,KAAK+e,UAAUpV,GACvD3J,KAAK2E,GAAGK,SAASkC,gBAAgBlH,KAAKuc,KAAK5S,EAAQqV,iBACnDhf,KAAK2E,GAAGK,SAAS4X,gBAAkB,GAAG5c,KAAKzC,MAAMoM,EAAQqV,kBAI7DrV,EAAQuV,mBAAmBlU,SAAQ,CAACmU,GAAUC,KAAEA,MAC5C,MAAMpC,EAAOhd,KAAKyE,WAAW2a,GACzBpC,EAAKiB,aAAaje,KAAKoe,gBAAgBpB,MAG3Chd,KAAKqe,YACDre,KAAKyE,WAAW6Z,MAChBte,KAAK2E,GAAGK,SAASgC,sBACbwY,EACAxf,KAAKwc,UAAUE,MACf1c,KAAKyE,WAAW6Z,MAAMpB,KACtBld,KAAKyE,WAAW6Z,MAAMT,OAAgC,EAAvB7d,KAAKwc,UAAUC,MAC9Czc,KAAK2c,gBAGT3c,KAAK2E,GAAGK,SAAS+B,oBAAoByY,EAAMxf,KAAKwc,UAAUC,MAAOzc,KAAKwc,UAAUE,MAAO1c,KAAK2c,gBAG5F3c,KAAKyE,WAAW6Z,MAChBte,KAAK2E,GAAG+a,aAAaF,EAAMxf,KAAKwc,UAAUE,MAAO1c,KAAKyE,WAAW6Z,MAAMpB,KAAMld,KAAKyE,WAAW6Z,MAAMT,OAAgC,EAAvB7d,KAAKwc,UAAUC,OAE3Hzc,KAAK2E,GAAGgb,WAAWH,EAAMxf,KAAKwc,UAAUC,MAAOzc,KAAKwc,UAAUE,OAK1EkD,cAEI,MAAM5C,EAAOhd,KAAKyE,WAAW6U,SAE7B,OAAI0D,EAAKG,KAAaH,EAClBX,OAAJ,GACAvX,QAAQwW,KAAK,mDACLe,GAAiB,GAG7BwD,mBAAmB7C,GACVA,IAAMA,EAAOhd,KAAK4f,eACvB,MAAME,EAAQ9C,EAAKG,KACbS,EAASZ,EAAKY,OAASZ,EAAKY,OAASkC,EAAMC,kBAAoB/C,EAAKC,KAErEjd,KAAKggB,SACNhgB,KAAKggB,OAAS,CACVlH,IAAK,IAAIlZ,EACT2X,IAAK,IAAI3X,EACTqgB,OAAQ,IAAIrgB,EACZuB,MAAO,IAAIvB,EACXsgB,OAAQC,MAIhB,MAAMrH,EAAM9Y,KAAKggB,OAAOlH,IAClBvB,EAAMvX,KAAKggB,OAAOzI,IAClB0I,EAASjgB,KAAKggB,OAAOC,OACrB9e,EAAQnB,KAAKggB,OAAO7e,MAE1B2X,EAAI5Y,IAAIigB,KACR5I,EAAIrX,KAAKigB,KAGT,IAAK,IAAI9iB,EAAI,EAAG+c,EAAI0F,EAAMxiB,OAAQD,EAAI+c,EAAG/c,GAAKugB,EAAQ,CAClD,MAAM5f,EAAI8hB,EAAMziB,GACVY,EAAI6hB,EAAMziB,EAAI,GACda,EAAI4hB,EAAMziB,EAAI,GAEpByb,EAAI9a,EAAIG,KAAK2a,IAAI9a,EAAG8a,EAAI9a,GACxB8a,EAAI7a,EAAIE,KAAK2a,IAAI7a,EAAG6a,EAAI7a,GACxB6a,EAAI5a,EAAIC,KAAK2a,IAAI5a,EAAG4a,EAAI5a,GAExBqZ,EAAIvZ,EAAIG,KAAKoZ,IAAIvZ,EAAGuZ,EAAIvZ,GACxBuZ,EAAItZ,EAAIE,KAAKoZ,IAAItZ,EAAGsZ,EAAItZ,GACxBsZ,EAAIrZ,EAAIC,KAAKoZ,IAAIrZ,EAAGqZ,EAAIrZ,GAG5BiD,EAAMX,IAAI+W,EAAKuB,GACfmH,EAAO5f,IAAIyY,EAAKvB,GAAK7W,OAAO,GAGhC0f,sBAAsBpD,GACbA,IAAMA,EAAOhd,KAAK4f,eACvB,MAAME,EAAQ9C,EAAKG,KACbS,EAASZ,EAAKY,OAASZ,EAAKY,OAASkC,EAAMC,kBAAoB/C,EAAKC,KAErEjd,KAAKggB,QAAQhgB,KAAK6f,mBAAmB7C,GAE1C,IAAIqD,EAAc,EAClB,IAAK,IAAIhjB,EAAI,EAAG+c,EAAI0F,EAAMxiB,OAAQD,EAAI+c,EAAG/c,GAAKugB,EAC1C1B,EAAS/Y,UAAU2c,EAAOziB,GAC1BgjB,EAAcliB,KAAKoZ,IAAI8I,EAAargB,KAAKggB,OAAOC,OAAOlf,gBAAgBmb,IAG3Elc,KAAKggB,OAAOE,OAAS/hB,KAAKC,KAAKiiB,GAGnCC,SACI,IAAK,IAAIxD,KAAO9c,KAAKuc,KACjBvc,KAAK2E,GAAGK,SAASmC,kBAAkBnH,KAAKuc,KAAKO,WACtC9c,KAAKuc,KAAKO,GAErB,IAAK,IAAIyD,KAAOvgB,KAAKyE,WACjBzE,KAAK2E,GAAG6b,aAAaxgB,KAAKyE,WAAW8b,GAAKnX,eACnCpJ,KAAKyE,WAAW8b,ICjRnC,IAAIE,EAAK,EAGT,MAAMC,EAAgB,GAEf,MAAMC,EACT7gB,YACI6E,GACAic,OACIA,EAAMC,SACNA,EAAQC,SACRA,EAAW,GAAEhW,YAEbA,GAAc,EAAKnF,SACnBA,EAAWhB,EAAGoc,KAAInb,UAClBA,EAAYjB,EAAGkB,IAAGoF,UAClBA,GAAY,EAAI+V,WAChBA,GAAa,EAAIjb,UACjBA,EAAYpB,EAAGqB,MACf,IAECrB,EAAGjB,QAAQoB,QAAQC,MAAM,6CAC9B/E,KAAK2E,GAAKA,EACV3E,KAAK8gB,SAAWA,EAChB9gB,KAAKzC,GAAKkjB,IAELG,GAAQ9b,QAAQwW,KAAK,8BACrBuF,GAAU/b,QAAQwW,KAAK,gCAG5Btb,KAAK8K,YAAcA,EACnB9K,KAAK2F,SAAWA,EAChB3F,KAAK4F,UAAYA,EACjB5F,KAAKiL,UAAYA,EACjBjL,KAAKghB,WAAaA,EAClBhhB,KAAK+F,UAAYA,EACjB/F,KAAKmF,UAAY,GACjBnF,KAAKwF,cAAgB,GAGjBxF,KAAK8K,cAAgB9K,KAAKmF,UAAUC,MAChCpF,KAAK2E,GAAGK,SAASZ,mBAAoBpE,KAAKkI,aAAalI,KAAK2E,GAAGU,IAAKrF,KAAK2E,GAAGsc,qBAC3EjhB,KAAKkI,aAAalI,KAAK2E,GAAGuc,UAAWlhB,KAAK2E,GAAGsc,sBAItD,MAAME,EAAexc,EAAGyc,aAAazc,EAAG0c,eACxC1c,EAAG2c,aAAaH,EAAcP,GAC9Bjc,EAAG4c,cAAcJ,GACyB,KAAtCxc,EAAG6c,iBAAiBL,IACpBrc,QAAQwW,KAAK,GAAG3W,EAAG6c,iBAAiBL,sBAAiCM,EAAeb,MAIxF,MAAMc,EAAiB/c,EAAGyc,aAAazc,EAAGgd,iBAY1C,GAXAhd,EAAG2c,aAAaI,EAAgBb,GAChClc,EAAG4c,cAAcG,GAC2B,KAAxC/c,EAAG6c,iBAAiBE,IACpB5c,QAAQwW,KAAK,GAAG3W,EAAG6c,iBAAiBE,wBAAqCD,EAAeZ,MAI5F7gB,KAAK2J,QAAUhF,EAAGid,gBAClBjd,EAAGkd,aAAa7hB,KAAK2J,QAASwX,GAC9Bxc,EAAGkd,aAAa7hB,KAAK2J,QAAS+X,GAC9B/c,EAAGmd,YAAY9hB,KAAK2J,UACfhF,EAAGod,oBAAoB/hB,KAAK2J,QAAShF,EAAGqd,aACzC,OAAOld,QAAQwW,KAAK3W,EAAGsd,kBAAkBjiB,KAAK2J,UAIlDhF,EAAGud,aAAaf,GAChBxc,EAAGud,aAAaR,GAGhB1hB,KAAKyG,iBAAmB,IAAIC,IAC5B,IAAIyb,EAAcxd,EAAGod,oBAAoB/hB,KAAK2J,QAAShF,EAAGyd,iBAC1D,IAAK,IAAIC,EAAS,EAAGA,EAASF,EAAaE,IAAU,CACjD,IAAIC,EAAU3d,EAAG4d,iBAAiBviB,KAAK2J,QAAS0Y,GAChDriB,KAAKyG,iBAAiBvG,IAAIoiB,EAAS3d,EAAG6d,mBAAmBxiB,KAAK2J,QAAS2Y,EAAQlD,OAG/E,MAAMqD,EAAQH,EAAQlD,KAAKsD,MAAK,UAEhCJ,EAAQK,YAAcF,EAAM,GAEP,IAAjBA,EAAMnlB,QACNglB,EAAQM,eAAgB,EACxBN,EAAQO,YAAcC,OAAOL,EAAM,IACnCH,EAAQS,eAAiBN,EAAM,IACP,IAAjBA,EAAMnlB,QAAgBse,MAAMkH,OAAOL,EAAM,OAChDH,EAAQU,UAAW,EACnBV,EAAQS,eAAiBN,EAAM,IAKvCziB,KAAKkf,mBAAqB,IAAIxY,IAC9B,MAAMuc,EAAY,GACZC,EAAave,EAAGod,oBAAoB/hB,KAAK2J,QAAShF,EAAGwe,mBAC3D,IAAK,IAAIC,EAAS,EAAGA,EAASF,EAAYE,IAAU,CAChD,MAAMC,EAAY1e,EAAG2e,gBAAgBtjB,KAAK2J,QAASyZ,GAC7CjE,EAAWxa,EAAG4e,kBAAkBvjB,KAAK2J,QAAS0Z,EAAUjE,MAC9D6D,EAAU9D,GAAYkE,EAAUjE,KAChCpf,KAAKkf,mBAAmBhf,IAAImjB,EAAWlE,GAE3Cnf,KAAKgf,eAAiBiE,EAAUO,KAAK,IAGzCtb,aAAa9C,EAAKE,EAAK6C,EAAUC,GAC7BpI,KAAKmF,UAAUC,IAAMA,EACrBpF,KAAKmF,UAAUG,IAAMA,EACrBtF,KAAKmF,UAAUgD,SAAWA,EAC1BnI,KAAKmF,UAAUiD,SAAWA,EACtBhD,IAAKpF,KAAK8K,aAAc,GAGhCvC,iBAAiB9C,EAAS+C,GACtBxI,KAAKwF,cAAcC,QAAUA,EAC7BzF,KAAKwF,cAAcgD,UAAYA,EAGnCib,aACQzjB,KAAKiL,UAAWjL,KAAK2E,GAAGK,SAASgD,OAAOhI,KAAK2E,GAAG8G,YAC/CzL,KAAK2E,GAAGK,SAASiD,QAAQjI,KAAK2E,GAAG8G,YAElCzL,KAAK2F,SAAU3F,KAAK2E,GAAGK,SAASgD,OAAOhI,KAAK2E,GAAG+e,WAC9C1jB,KAAK2E,GAAGK,SAASiD,QAAQjI,KAAK2E,GAAG+e,WAElC1jB,KAAKmF,UAAUC,IAAKpF,KAAK2E,GAAGK,SAASgD,OAAOhI,KAAK2E,GAAGgf,OACnD3jB,KAAK2E,GAAGK,SAASiD,QAAQjI,KAAK2E,GAAGgf,OAElC3jB,KAAK2F,UAAU3F,KAAK2E,GAAGK,SAAS0D,YAAY1I,KAAK2F,UACrD3F,KAAK2E,GAAGK,SAAS4D,aAAa5I,KAAK4F,WACnC5F,KAAK2E,GAAGK,SAAS6D,aAAa7I,KAAKghB,YACnChhB,KAAK2E,GAAGK,SAAS8D,aAAa9I,KAAK+F,WAC/B/F,KAAKmF,UAAUC,KACfpF,KAAK2E,GAAGK,SAASkD,aAAalI,KAAKmF,UAAUC,IAAKpF,KAAKmF,UAAUG,IAAKtF,KAAKmF,UAAUgD,SAAUnI,KAAKmF,UAAUiD,UAClHpI,KAAK2E,GAAGK,SAASuD,iBAAiBvI,KAAKwF,cAAcC,QAASzF,KAAKwF,cAAcgD,WAGrFob,KAAIC,UAAEA,GAAY,GAAU,IACxB,IAAIC,GAAc,EACI9jB,KAAK2E,GAAGK,SAASE,MAAMyB,iBAAmB3G,KAAKzC,KAIjEyC,KAAK2E,GAAGof,WAAW/jB,KAAK2J,SACxB3J,KAAK2E,GAAGK,SAASE,MAAMyB,eAAiB3G,KAAKzC,IAIjDyC,KAAKyG,iBAAiBuE,SAAQ,CAACmU,EAAU6E,KACrC,IAAI5E,EAAO4E,EAAcrB,YAGrBL,EAAUtiB,KAAK8gB,SAAS1B,GAY5B,GATI4E,EAAchB,WACdV,EAAUA,EAAQ0B,EAAcjB,gBAChC3D,GAAQ,IAAI4E,EAAcjB,kBAE1BiB,EAAcpB,gBACdN,EAAUA,EAAQ0B,EAAcnB,aAAamB,EAAcjB,gBAC3D3D,GAAQ,IAAI4E,EAAcnB,gBAAgBmB,EAAcjB,mBAGvDT,EACD,OAAO2B,EAAK,kBAAkB7E,2BAGlC,GAAIkD,QAA6Bja,IAAlBia,EAAQ3Z,MACnB,OAAOsb,EAAK,GAAG7E,0CAGnB,GAAIkD,EAAQ3Z,MAAMub,QAKd,OAJAJ,GAA4B,EAG5BxB,EAAQ3Z,MAAM4C,OAAOuY,GACdK,EAAWnkB,KAAK2E,GAAIqf,EAAc9G,KAAMiC,EAAU2E,GAI7D,GAAIxB,EAAQ3Z,MAAMrL,QAAUglB,EAAQ3Z,MAAM,GAAGub,QAAS,CAClD,MAAM5d,EAAe,GAOrB,OANAgc,EAAQ3Z,MAAMqC,SAASrC,IACnBmb,GAA4B,EAC5Bnb,EAAM4C,OAAOuY,GACbxd,EAAasE,KAAKkZ,MAGfK,EAAWnkB,KAAK2E,GAAIqf,EAAc9G,KAAMiC,EAAU7Y,GAG7D6d,EAAWnkB,KAAK2E,GAAIqf,EAAc9G,KAAMiC,EAAUmD,EAAQ3Z,UAG9D3I,KAAKyjB,aACDI,GAAW7jB,KAAK2E,GAAGK,SAAS4D,aAAa5I,KAAK4F,YAAc5F,KAAK2E,GAAGkB,IAAM7F,KAAK2E,GAAGyf,GAAKpkB,KAAK2E,GAAGkB,KAGvGya,SACItgB,KAAK2E,GAAG0f,cAAcrkB,KAAK2J,UAInC,SAASwa,EAAWxf,EAAIuY,EAAMiC,EAAUxW,GACpCA,EAAQA,EAAMrL,OA4DlB,SAAiBS,GACb,MAAMumB,EAAWvmB,EAAET,OACbinB,EAAWxmB,EAAE,GAAGT,OACtB,QAAiB+K,IAAbkc,EAAwB,OAAOxmB,EACnC,MAAMT,EAASgnB,EAAWC,EAC1B,IAAI5b,EAAQ+X,EAAcpjB,GACrBqL,IAAO+X,EAAcpjB,GAAUqL,EAAQ,IAAIyU,aAAa9f,IAC7D,IAAK,IAAID,EAAI,EAAGA,EAAIinB,EAAUjnB,IAAKsL,EAAMzI,IAAInC,EAAEV,GAAIA,EAAIknB,GACvD,OAAO5b,EApEgB6b,CAAQ7b,GAASA,EACxC,MAAM8b,EAAW9f,EAAGK,SAASE,MAAMuB,iBAAiBie,IAAIvF,GAGxD,GAAIxW,EAAMrL,OACN,QAAiB+K,IAAboc,GAA0BA,EAASnnB,SAAWqL,EAAMrL,OAEpDqH,EAAGK,SAASE,MAAMuB,iBAAiBvG,IAAIif,EAAUxW,EAAMgc,MAAM,QAC1D,CACH,GA8DZ,SAAqB5mB,EAAGS,GACpB,GAAIT,EAAET,SAAWkB,EAAElB,OAAQ,OAAO,EAClC,IAAK,IAAID,EAAI,EAAG+c,EAAIrc,EAAET,OAAQD,EAAI+c,EAAG/c,IACjC,GAAIU,EAAEV,KAAOmB,EAAEnB,GAAI,OAAO,EAE9B,OAAO,EAnEKunB,CAAYH,EAAU9b,GAAQ,OAGlC8b,EAASvkB,IAAMukB,EAASvkB,IAAIyI,GAmExC,SAAkB5K,EAAGS,GACjB,IAAK,IAAInB,EAAI,EAAG+c,EAAIrc,EAAET,OAAQD,EAAI+c,EAAG/c,IACjCU,EAAEV,GAAKmB,EAAEnB,GArEgCwnB,CAASJ,EAAU9b,GACxDhE,EAAGK,SAASE,MAAMuB,iBAAiBvG,IAAIif,EAAUsF,OAElD,CACH,GAAIA,IAAa9b,EAAO,OACxBhE,EAAGK,SAASE,MAAMuB,iBAAiBvG,IAAIif,EAAUxW,GAGrD,OAAQuU,GACJ,KAAK,KACD,OAAOvU,EAAMrL,OAASqH,EAAGmgB,WAAW3F,EAAUxW,GAAShE,EAAGogB,UAAU5F,EAAUxW,GAClF,KAAK,MACD,OAAOhE,EAAGqgB,WAAW7F,EAAUxW,GACnC,KAAK,MACD,OAAOhE,EAAGsgB,WAAW9F,EAAUxW,GACnC,KAAK,MACD,OAAOhE,EAAGugB,WAAW/F,EAAUxW,GACnC,KAAK,MACL,KAAK,KACL,KAAK,MACL,KAAK,MACD,OAAOA,EAAMrL,OAASqH,EAAGwgB,WAAWhG,EAAUxW,GAAShE,EAAGygB,UAAUjG,EAAUxW,GAClF,KAAK,MACL,KAAK,MACD,OAAOhE,EAAG0gB,WAAWlG,EAAUxW,GACnC,KAAK,MACL,KAAK,MACD,OAAOhE,EAAG2gB,WAAWnG,EAAUxW,GACnC,KAAK,MACL,KAAK,MACD,OAAOhE,EAAG4gB,WAAWpG,EAAUxW,GACnC,KAAK,MACD,OAAOhE,EAAG6gB,iBAAiBrG,GAAU,EAAOxW,GAChD,KAAK,MACD,OAAOhE,EAAG8gB,iBAAiBtG,GAAU,EAAOxW,GAChD,KAAK,MACD,OAAOhE,EAAG+gB,iBAAiBvG,GAAU,EAAOxW,IAIxD,SAAS8Y,EAAekE,GACpB,IAAIC,EAAQD,EAAOlD,MAAM,MACzB,IAAK,IAAIplB,EAAI,EAAGA,EAAIuoB,EAAMtoB,OAAQD,IAC9BuoB,EAAMvoB,GAAKA,EAAI,EAAI,KAAOuoB,EAAMvoB,GAEpC,OAAOuoB,EAAMpC,KAAK,MA4BtB,IAAIqC,EAAY,EAChB,SAAS5B,EAAK6B,GACND,EAAY,MAChB/gB,QAAQwW,KAAKwK,GACbD,IACIA,EAAY,KAAK/gB,QAAQwW,KAAK,oDC7E/B,SAASyK,EAASznB,EAAKP,EAAGS,GAC7B,IAAIgR,EAAMzR,EAAE,GACR0R,EAAM1R,EAAE,GACR2R,EAAM3R,EAAE,GACR6R,EAAM7R,EAAE,GACR8R,EAAM9R,EAAE,GACR+R,EAAM/R,EAAE,GACRiS,EAAMjS,EAAE,GACRkS,EAAMlS,EAAE,GACRmS,EAAMnS,EAAE,GAERuV,EAAM9U,EAAE,GACR+U,EAAM/U,EAAE,GACRgV,EAAMhV,EAAE,GACRiV,EAAMjV,EAAE,GACRkV,EAAMlV,EAAE,GACRmV,EAAMnV,EAAE,GACRoV,EAAMpV,EAAE,GACRqV,EAAMrV,EAAE,GACRsV,EAAMtV,EAAE,GAaZ,OAXAF,EAAI,GAAKgV,EAAM9D,EAAM+D,EAAM3D,EAAM4D,EAAMxD,EACvC1R,EAAI,GAAKgV,EAAM7D,EAAM8D,EAAM1D,EAAM2D,EAAMvD,EACvC3R,EAAI,GAAKgV,EAAM5D,EAAM6D,EAAMzD,EAAM0D,EAAMtD,EAEvC5R,EAAI,GAAKmV,EAAMjE,EAAMkE,EAAM9D,EAAM+D,EAAM3D,EACvC1R,EAAI,GAAKmV,EAAMhE,EAAMiE,EAAM7D,EAAM8D,EAAM1D,EACvC3R,EAAI,GAAKmV,EAAM/D,EAAMgE,EAAM5D,EAAM6D,EAAMzD,EAEvC5R,EAAI,GAAKsV,EAAMpE,EAAMqE,EAAMjE,EAAMkE,EAAM9D,EACvC1R,EAAI,GAAKsV,EAAMnE,EAAMoE,EAAMhE,EAAMiE,EAAM7D,EACvC3R,EAAI,GAAKsV,EAAMlE,EAAMmE,EAAM/D,EAAMgE,EAAM5D,EAChC5R,EChQJ,MAAM0nB,UAAanmB,MACtBC,YAAY4S,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGE,EAAM,EAAGhC,EAAM,EAAGC,EAAM,EAAGgC,EAAM,EAAG9B,EAAM,EAAGC,EAAM,GAEtF,OADAnR,MAAM2S,EAAKC,EAAKC,EAAKE,EAAKhC,EAAKC,EAAKgC,EAAK9B,EAAKC,GACvClR,KAGXE,IAAIwS,EAAKC,EAAKC,EAAKE,EAAKhC,EAAKC,EAAKgC,EAAK9B,EAAKC,GACxC,OAAIwB,EAAIpV,OAAe0C,KAAKG,KAAKuS,IDiFlC,SAAapU,EAAKoU,EAAKC,EAAKC,EAAKE,EAAKhC,EAAKC,EAAKgC,EAAK9B,EAAKC,GAC7D5S,EAAI,GAAKoU,EACTpU,EAAI,GAAKqU,EACTrU,EAAI,GAAKsU,EACTtU,EAAI,GAAKwU,EACTxU,EAAI,GAAKwS,EACTxS,EAAI,GAAKyS,EACTzS,EAAI,GAAKyU,EACTzU,EAAI,GAAK2S,EACT3S,EAAI,GAAK4S,ECzFL+U,CAAajmB,KAAM0S,EAAKC,EAAKC,EAAKE,EAAKhC,EAAKC,EAAKgC,EAAK9B,EAAKC,GACpDlR,MAGXkT,UAAUjT,EAAGwB,EAAIzB,MAEb,OD6PD,SAAmB1B,EAAKP,EAAGkC,GAC9B,IAAIuP,EAAMzR,EAAE,GACR0R,EAAM1R,EAAE,GACR2R,EAAM3R,EAAE,GACR6R,EAAM7R,EAAE,GACR8R,EAAM9R,EAAE,GACR+R,EAAM/R,EAAE,GACRiS,EAAMjS,EAAE,GACRkS,EAAMlS,EAAE,GACRmS,EAAMnS,EAAE,GACRC,EAAIiC,EAAE,GACNhC,EAAIgC,EAAE,GAEV3B,EAAI,GAAKkR,EACTlR,EAAI,GAAKmR,EACTnR,EAAI,GAAKoR,EAETpR,EAAI,GAAKsR,EACTtR,EAAI,GAAKuR,EACTvR,EAAI,GAAKwR,EAETxR,EAAI,GAAKN,EAAIwR,EAAMvR,EAAI2R,EAAMI,EAC7B1R,EAAI,GAAKN,EAAIyR,EAAMxR,EAAI4R,EAAMI,EAC7B3R,EAAI,GAAKN,EAAI0R,EAAMzR,EAAI6R,EAAMI,ECrRzBgW,CAAmBlmB,KAAMyB,EAAGxB,GACrBD,KAGXoT,OAAOnT,EAAGwB,EAAIzB,MAEV,OD2RD,SAAgB1B,EAAKP,EAAG0O,GAC3B,IAAI+C,EAAMzR,EAAE,GACR0R,EAAM1R,EAAE,GACR2R,EAAM3R,EAAE,GACR6R,EAAM7R,EAAE,GACR8R,EAAM9R,EAAE,GACR+R,EAAM/R,EAAE,GACRiS,EAAMjS,EAAE,GACRkS,EAAMlS,EAAE,GACRmS,EAAMnS,EAAE,GACR+Q,EAAI3Q,KAAKuO,IAAID,GACb4G,EAAIlV,KAAKwO,IAAIF,GAEjBnO,EAAI,GAAK+U,EAAI7D,EAAMV,EAAIc,EACvBtR,EAAI,GAAK+U,EAAI5D,EAAMX,EAAIe,EACvBvR,EAAI,GAAK+U,EAAI3D,EAAMZ,EAAIgB,EAEvBxR,EAAI,GAAK+U,EAAIzD,EAAMd,EAAIU,EACvBlR,EAAI,GAAK+U,EAAIxD,EAAMf,EAAIW,EACvBnR,EAAI,GAAK+U,EAAIvD,EAAMhB,EAAIY,EAEvBpR,EAAI,GAAK0R,EACT1R,EAAI,GAAK2R,EACT3R,EAAI,GAAK4R,ECnTLiW,CAAgBnmB,KAAMyB,EAAGxB,GAClBD,KAGXmB,MAAMlB,EAAGwB,EAAIzB,MAET,ODyTD,SAAe1B,EAAKP,EAAGkC,GAC1B,IAAIjC,EAAIiC,EAAE,GACNhC,EAAIgC,EAAE,GAEV3B,EAAI,GAAKN,EAAID,EAAE,GACfO,EAAI,GAAKN,EAAID,EAAE,GACfO,EAAI,GAAKN,EAAID,EAAE,GAEfO,EAAI,GAAKL,EAAIF,EAAE,GACfO,EAAI,GAAKL,EAAIF,EAAE,GACfO,EAAI,GAAKL,EAAIF,EAAE,GAEfO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GCxUPqoB,CAAepmB,KAAMyB,EAAGxB,GACjBD,KAGXS,SAASyT,EAAIC,GAMT,OALIA,EACA4R,EAAkB/lB,KAAMkU,EAAIC,GAE5B4R,EAAkB/lB,KAAMA,KAAMkU,GAE3BlU,KAGXuM,WDuEG,IAAkBjO,ECrEjB,ODqEiBA,ECtEC0B,MDuElB,GAAK,EACT1B,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EC9EE0B,KAGXG,KAAKsB,GD4BF,IAAcnD,EAAKP,EC1BlB,OD0BkBA,EC3BE0D,GD2BPnD,EC3BC0B,MD4Bd,GAAKjC,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GCnCAiC,KAGXqmB,YAAY5kB,GDvCT,IAAkBnD,EAAKP,ECyCtB,ODzCsBA,ECwCE0D,GDxCPnD,ECwCC0B,MDvClB,GAAKjC,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,GACXO,EAAI,GAAKP,EAAE,ICgCAiC,KAGXsV,eAAepT,GAEX,ODzBD,SAAkB5D,EAAK4D,GAC1B,IAAIlE,EAAIkE,EAAE,GACNjE,EAAIiE,EAAE,GACNhE,EAAIgE,EAAE,GACNL,EAAIK,EAAE,GACNqT,EAAKvX,EAAIA,EACTwX,EAAKvX,EAAIA,EACTwX,EAAKvX,EAAIA,EAETwX,EAAK1X,EAAIuX,EACTI,EAAK1X,EAAIsX,EACTK,EAAK3X,EAAIuX,EACTK,EAAK3X,EAAIqX,EACTO,EAAK5X,EAAIsX,EACTO,EAAK7X,EAAIuX,EACTO,EAAKnU,EAAI0T,EACTU,EAAKpU,EAAI2T,EACTU,EAAKrU,EAAI4T,EAEbnX,EAAI,GAAK,EAAIsX,EAAKG,EAClBzX,EAAI,GAAKqX,EAAKO,EACd5X,EAAI,GAAKuX,EAAKI,EAEd3X,EAAI,GAAKqX,EAAKO,EACd5X,EAAI,GAAK,EAAIoX,EAAKK,EAClBzX,EAAI,GAAKwX,EAAKE,EAEd1X,EAAI,GAAKuX,EAAKI,EACd3X,EAAI,GAAKwX,EAAKE,EACd1X,EAAI,GAAK,EAAIoX,EAAKE,ECLd0Q,CAAkBtmB,KAAMkC,GACjBlC,KAGXumB,UAAUC,EAAOC,EAAOC,GAEpB,OADA1mB,KAAKE,IAAIsmB,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIC,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIC,EAAM,GAAIA,EAAM,GAAIA,EAAM,IACxF1mB,KAGXW,QAAQc,EAAIzB,MAER,ODkGD,SAAgB1B,EAAKP,GACxB,IAAIyR,EAAMzR,EAAE,GACR0R,EAAM1R,EAAE,GACR2R,EAAM3R,EAAE,GACR6R,EAAM7R,EAAE,GACR8R,EAAM9R,EAAE,GACR+R,EAAM/R,EAAE,GACRiS,EAAMjS,EAAE,GACRkS,EAAMlS,EAAE,GACRmS,EAAMnS,EAAE,GAERwV,EAAMrD,EAAML,EAAMC,EAAMG,EACxByD,GAAOxD,EAAMN,EAAME,EAAME,EACzB6D,EAAM5D,EAAML,EAAMC,EAAMG,EAGxB4G,EAAMpH,EAAM+D,EAAM9D,EAAMiE,EAAMhE,EAAMmE,EAEnC+C,IAGLA,EAAM,EAAMA,EAEZtY,EAAI,GAAKiV,EAAMqD,EACftY,EAAI,KAAO4R,EAAMT,EAAMC,EAAMO,GAAO2G,EACpCtY,EAAI,IAAMwR,EAAML,EAAMC,EAAMG,GAAO+G,EACnCtY,EAAI,GAAKoV,EAAMkD,EACftY,EAAI,IAAM4R,EAAMV,EAAME,EAAMM,GAAO4G,EACnCtY,EAAI,KAAOwR,EAAMN,EAAME,EAAME,GAAOgH,EACpCtY,EAAI,GAAKuV,EAAM+C,EACftY,EAAI,KAAO2R,EAAMT,EAAMC,EAAMO,GAAO4G,EACpCtY,EAAI,IAAMuR,EAAML,EAAMC,EAAMG,GAAOgH,GClI/B+P,CAAgB3mB,KAAMyB,GACfzB,KAGX4mB,gBAAgBnlB,GAEZ,ODuSD,SAAwBnD,EAAKP,GAChC,IAAIyR,EAAMzR,EAAE,GACR0R,EAAM1R,EAAE,GACR2R,EAAM3R,EAAE,GACR4R,EAAM5R,EAAE,GACR6R,EAAM7R,EAAE,GACR8R,EAAM9R,EAAE,GACR+R,EAAM/R,EAAE,GACRgS,EAAMhS,EAAE,GACRiS,EAAMjS,EAAE,GACRkS,EAAMlS,EAAE,GACRmS,EAAMnS,EAAE,IACRoS,EAAMpS,EAAE,IACRqS,EAAMrS,EAAE,IACRsS,EAAMtS,EAAE,IACRuS,EAAMvS,EAAE,IACRwS,EAAMxS,EAAE,IAERuV,EAAM9D,EAAMK,EAAMJ,EAAMG,EACxB2D,EAAM/D,EAAMM,EAAMJ,EAAME,EACxB4D,EAAMhE,EAAMO,EAAMJ,EAAMC,EACxByG,EAAM5G,EAAMK,EAAMJ,EAAMG,EACxByG,EAAM7G,EAAMM,EAAMJ,EAAME,EACxB0G,EAAM7G,EAAMK,EAAMJ,EAAMG,EACxB0G,EAAMxG,EAAMK,EAAMJ,EAAMG,EACxBqG,EAAMzG,EAAMM,EAAMJ,EAAME,EACxBsG,EAAM1G,EAAMO,EAAMJ,EAAMC,EACxBuG,EAAM1G,EAAMK,EAAMJ,EAAMG,EACxBoD,EAAMxD,EAAMM,EAAMJ,EAAME,EACxBqD,EAAMxD,EAAMK,EAAMJ,EAAMG,EAGxBsG,EAAMtD,EAAMI,EAAMH,EAAME,EAAMD,EAAMmD,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAEvEI,IAGLA,EAAM,EAAMA,EAEZtY,EAAI,IAAMuR,EAAM6D,EAAM5D,EAAM2D,EAAM1D,EAAM4G,GAAOC,EAC/CtY,EAAI,IAAMwR,EAAM4G,EAAM9G,EAAM8D,EAAM3D,EAAM0G,GAAOG,EAC/CtY,EAAI,IAAMsR,EAAM6D,EAAM5D,EAAM6G,EAAM3G,EAAMyG,GAAOI,EAE/CtY,EAAI,IAAMoR,EAAM+D,EAAMhE,EAAMiE,EAAM/D,EAAMgH,GAAOC,EAC/CtY,EAAI,IAAMkR,EAAMkE,EAAMhE,EAAMgH,EAAM/G,EAAM8G,GAAOG,EAC/CtY,EAAI,IAAMmR,EAAMiH,EAAMlH,EAAMiE,EAAM9D,EAAM6G,GAAOI,EAE/CtY,EAAI,IAAM+R,EAAMkG,EAAMjG,EAAMgG,EAAM/F,EAAM8F,GAAOO,EAC/CtY,EAAI,IAAMgS,EAAMkD,EAAMpD,EAAMmG,EAAMhG,EAAMgD,GAAOqD,EAC/CtY,EAAI,IAAM8R,EAAMkG,EAAMjG,EAAMmD,EAAMjD,EAAM+C,GAAOsD,GCzV3CiQ,CAAwB7mB,KAAMyB,GACvBzB,MClEf,IAAI8mB,EAAK,EAEF,MAAMC,UAAa9N,EACtBnZ,YAAY6E,GAAIqiB,SAAEA,EAAQrd,QAAEA,EAAO6V,KAAEA,EAAO7a,EAAG8a,UAAS/U,cAAEA,GAAgB,EAAIhB,YAAEA,EAAc,GAAM,IAChG3J,QACK4E,EAAGjB,QAAQoB,QAAQC,MAAM,2CAC9B/E,KAAK2E,GAAKA,EACV3E,KAAKzC,GAAKupB,IACV9mB,KAAKgnB,SAAWA,EAChBhnB,KAAK2J,QAAUA,EACf3J,KAAKwf,KAAOA,EAGZxf,KAAK0K,cAAgBA,EAGrB1K,KAAK0J,YAAcA,EACnB1J,KAAKinB,gBAAkB,IAAIxU,EAC3BzS,KAAKknB,aAAe,IAAIlB,EACxBhmB,KAAKmnB,sBAAwB,GAC7BnnB,KAAKonB,qBAAuB,GAGhCC,eAAe3S,GAEX,OADA1U,KAAKmnB,sBAAsBvc,KAAK8J,GACzB1U,KAGXsnB,cAAc5S,GAEV,OADA1U,KAAKonB,qBAAqBxc,KAAK8J,GACxB1U,KAGXyK,MAAKR,OAAEA,GAAW,IACdjK,KAAKmnB,sBAAsBnc,SAAS0J,GAAMA,GAAKA,EAAE,CAAE6S,KAAMvnB,K,OAAMiK,MAC3DA,IAEKjK,KAAK2J,QAAQmX,SAAS0G,aACvBpqB,OAAOuK,OAAO3H,KAAK2J,QAAQmX,SAAU,CACjC0G,YAAa,CAAE7e,MAAO,MACtB8e,WAAY,CAAE9e,MAAO,MACrBse,gBAAiB,CAAEte,MAAO,MAC1Bue,aAAc,CAAEve,MAAO,MACvB+e,iBAAkB,CAAE/e,MAAO,MAC3Bgf,eAAgB,CAAEhf,MAAO,QAKjC3I,KAAK2J,QAAQmX,SAAS4G,iBAAiB/e,MAAQsB,EAAOyd,iBACtD1nB,KAAK2J,QAAQmX,SAAS6G,eAAehf,MAAQsB,EAAO2d,cACpD5nB,KAAK2J,QAAQmX,SAAS2G,WAAW9e,MAAQsB,EAAOwd,WAChDznB,KAAKinB,gBAAgBxmB,SAASwJ,EAAOwd,WAAYznB,KAAKkL,aACtDlL,KAAKknB,aAAaN,gBAAgB5mB,KAAKinB,iBACvCjnB,KAAK2J,QAAQmX,SAAS0G,YAAY7e,MAAQ3I,KAAKkL,YAC/ClL,KAAK2J,QAAQmX,SAASmG,gBAAgBte,MAAQ3I,KAAKinB,gBACnDjnB,KAAK2J,QAAQmX,SAASoG,aAAave,MAAQ3I,KAAKknB,cAIpD,IAAIrD,EAAY7jB,KAAK2J,QAAQhE,UAAY3F,KAAKkL,YAAYqN,cAAgB,EAC1EvY,KAAK2J,QAAQia,IAAI,C,UAAEC,IACnB7jB,KAAKgnB,SAASvc,KAAK,CAAE+U,KAAMxf,KAAKwf,KAAM7V,QAAS3J,KAAK2J,UACpD3J,KAAKonB,qBAAqBpc,SAAS0J,GAAMA,GAAKA,EAAE,CAAE6S,KAAMvnB,K,OAAMiK,OC9B/D,SAAS4d,GAAIvpB,EAAKP,EAAGS,GAGxB,OAFAF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GACXF,EAWJ,SAASwpB,GAASxpB,EAAKP,EAAGS,GAG7B,OAFAF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,GACXF,EAuCJ,SAASypB,GAAMzpB,EAAKP,EAAGS,GAG1B,OAFAF,EAAI,GAAKP,EAAE,GAAKS,EAChBF,EAAI,GAAKP,EAAE,GAAKS,EACTF,EAmCJ,SAAS0pB,GAAOjqB,GACnB,IAAIC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACV,OAAOI,KAAKC,KAAKJ,EAAIA,EAAIC,EAAIA,GAgF1B,SAASgqB,GAAMlqB,EAAGS,GACrB,OAAOT,EAAE,GAAKS,EAAE,GAAKT,EAAE,GAAKS,EAAE,GCrN3B,MAAM0pB,WAAaroB,MACtBC,YAAY9B,EAAI,EAAGC,EAAID,GAEnB,OADA+B,MAAM/B,EAAGC,GACF+B,KAGPhC,QACA,OAAOgC,KAAK,GAGZ/B,QACA,OAAO+B,KAAK,GAGZhC,MAAEiC,GACFD,KAAK,GAAKC,EAGVhC,MAAEgC,GACFD,KAAK,GAAKC,EAGdC,IAAIlC,EAAGC,EAAID,GACP,OAAIA,EAAEV,OAAe0C,KAAKG,KAAKnC,IDFhC,SAAaM,EAAKN,EAAGC,GACxBK,EAAI,GAAKN,EACTM,EAAI,GAAKL,ECCLkqB,CAAanoB,KAAMhC,EAAGC,GACf+B,MAGXG,KAAKF,GDrBF,IAAc3B,EAAKP,ECuBlB,ODvBkBA,ECsBEkC,GDtBP3B,ECsBC0B,MDrBd,GAAKjC,EAAE,GACXO,EAAI,GAAKP,EAAE,GCqBAiC,KAGXK,IAAIC,EAAIC,GAGJ,OAFIA,EAAIsnB,GAAa7nB,KAAMM,EAAIC,GAC1BsnB,GAAa7nB,KAAMA,KAAMM,GACvBN,KAGXQ,IAAIF,EAAIC,GAGJ,OAFIA,EAAIunB,GAAkB9nB,KAAMM,EAAIC,GAC/BunB,GAAkB9nB,KAAMA,KAAMM,GAC5BN,KAGXS,SAASR,GDkBN,IAAkB3B,EAAKP,EAAGS,ECfzB,OAFIyB,EAAE3C,QDiBgBS,ECjBgBiC,KDiBbxB,ECjBmByB,GDiB3B3B,ECjBe0B,MDkBhC,GAAKjC,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,IClBTupB,GAAe/nB,KAAMA,KAAMC,GACzBD,KAGXU,OAAOT,GD0BJ,IAAgB3B,EAAKP,EAAGS,ECvBvB,OAFIyB,EAAE3C,QDyBcS,ECzBgBiC,KDyBbxB,ECzBmByB,GDyB3B3B,ECzBe0B,MD0B9B,GAAKjC,EAAE,GAAKS,EAAE,GAClBF,EAAI,GAAKP,EAAE,GAAKS,EAAE,IC1BTupB,GAAe/nB,KAAMA,KAAM,EAAIC,GAC7BD,KAGXW,QAAQV,EAAID,MD8GT,IAAiB1B,EAAKP,EC5GrB,OD4GqBA,EC7GEkC,GD6GP3B,EC7GC0B,MD8GjB,GAAK,EAAMjC,EAAE,GACjBO,EAAI,GAAK,EAAMP,EAAE,GC9GNiC,KAIXnB,MACI,OAAOmpB,GAAgBhoB,MAG3BY,SAASX,GACL,OAAIA,GDoCalC,ECpCeiC,KDqChChC,GADoBQ,ECpCkByB,GDqChC,GAAKlC,EAAE,GACbE,EAAIO,EAAE,GAAKT,EAAE,GACVI,KAAKC,KAAKJ,EAAIA,EAAIC,EAAIA,ICtCb+pB,GAAgBhoB,MDmC7B,IAAkBjC,EAAGS,EACpBR,EACAC,EClCJ6C,aACI,OAAOd,KAAKe,kBAGhBA,gBAAgBd,GACZ,OAAIA,GDwCoBlC,ECxCeiC,KDyCvChC,GAD2BQ,ECxCkByB,GDyCvC,GAAKlC,EAAE,GACbE,EAAIO,EAAE,GAAKT,EAAE,GACVC,EAAIA,EAAIC,EAAIA,GAqBhB,SAAuBF,GAC1B,IAAIC,EAAID,EAAE,GACNE,EAAIF,EAAE,GACV,OAAOC,EAAIA,EAAIC,EAAIA,EClEHmqB,CAAuBpoB,MDuCpC,IAAyBjC,EAAGS,EAC3BR,EACAC,ECtCJgD,OAAOhB,EAAID,MDyER,IAAgB1B,EAAKP,ECvEpB,ODuEoBA,ECxEEkC,GDwEP3B,ECxEC0B,MDyEhB,IAAMjC,EAAE,GACZO,EAAI,IAAMP,EAAE,GCzEDiC,KAGXkB,MAAMZ,EAAIC,GACN,OAAIA,EAAW0nB,GAAe3nB,EAAIC,GAC3B0nB,GAAejoB,KAAMM,GAGhCa,MAAMlB,GAEF,OADA8nB,GAAe/nB,KAAMA,KAAMC,GACpBD,KAGXoB,YDoFG,IAAmB9C,EAAKP,EACvBC,EACAC,EACAY,ECrFA,ODkFkBP,ECnFC0B,KDoFnBhC,GADuBD,ECnFEiC,MDoFnB,GACN/B,EAAIF,EAAE,IACNc,EAAMb,EAAIA,EAAIC,EAAIA,GACZ,IAENY,EAAM,EAAIV,KAAKC,KAAKS,IAExBP,EAAI,GAAKP,EAAE,GAAKc,EAChBP,EAAI,GAAKP,EAAE,GAAKc,EC3FLmB,KAGXqB,IAAIpB,GACA,ODkGezB,EClGWyB,GDkGdlC,EClGQiC,MDmGf,GAAKxB,EAAE,GAAKT,EAAE,GAAKS,EAAE,GAD3B,IAAaT,EAAGS,EC/FnB8C,OAAOrB,GACH,ODyMuBzB,ECzMWyB,GDyMdlC,ECzMQiC,MD0MvB,KAAOxB,EAAE,IAAMT,EAAE,KAAOS,EAAE,GADhC,IAAqBT,EAAGS,ECtM3B+C,aAAaC,GDqKV,IAAuBlD,EAAKP,EAAG0D,EAC9BzD,EACAC,ECrKA,ODmKsBK,ECpKC0B,KDoKOyB,ECpKKD,EDqKnCxD,GAD2BD,ECpKEiC,MDqKvB,GACN/B,EAAIF,EAAE,GACVO,EAAI,GAAKmD,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,GACjCnD,EAAI,GAAKmD,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,GCvKtBzB,KAGX2B,aAAaC,GAET,ODgLD,SAAuBtD,EAAKP,EAAG0D,GAClC,IAAIzD,EAAID,EAAE,GACNE,EAAIF,EAAE,GACVO,EAAI,GAAKmD,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,IACjCnD,EAAI,GAAKmD,EAAE,GAAKzD,EAAIyD,EAAE,GAAKxD,EAAIwD,EAAE,ICrL7B4mB,CAAuBroB,KAAMA,KAAM4B,GAC5B5B,KAGX+C,KAAK9C,EAAGlC,GAEJ,ODwGD,SAAcO,EAAKP,EAAGS,EAAGwE,GAC5B,IAAIhE,EAAKjB,EAAE,GACPkB,EAAKlB,EAAE,GACXO,EAAI,GAAKU,EAAKgE,GAAKxE,EAAE,GAAKQ,GAC1BV,EAAI,GAAKW,EAAK+D,GAAKxE,EAAE,GAAKS,GC7GtBqpB,CAActoB,KAAMA,KAAMC,EAAGlC,GACtBiC,KAGXkD,QACI,OAAO,IAAIglB,GAAKloB,KAAK,GAAIA,KAAK,IAGlCmD,UAAUpF,EAAGqF,EAAI,GAGb,OAFApD,KAAK,GAAKjC,EAAEqF,GACZpD,KAAK,GAAKjC,EAAEqF,EAAI,GACTpD,KAGXqD,QAAQtF,EAAI,GAAIqF,EAAI,GAGhB,OAFArF,EAAEqF,GAAKpD,KAAK,GACZjC,EAAEqF,EAAI,GAAKpD,KAAK,GACTjC,GCpIf,MAAMwqB,GAAM,IAAI3oB,EAET,MAAM4oB,GACT1oB,YACI6E,GACA8jB,OACIA,EAAM7H,OACNA,EAAS8H,GAAa7H,SACtBA,EAAW8H,GAAe7H,SAC1BA,EAAW,GAAErc,WACbA,EAAa,KAGjBzE,KAAK2E,GAAKA,EACV3E,KAAKyoB,OAASA,EACdzoB,KAAK0c,MAAQ+L,EAAOnrB,OAGpB0C,KAAKsZ,SAAW,IAAI8D,aAAa,EAAApd,KAAK0c,OACtC1c,KAAK4oB,KAAO,IAAIxL,aAAa,EAAApd,KAAK0c,OAClC1c,KAAK6oB,KAAO,IAAIzL,aAAa,EAAApd,KAAK0c,OAClC,MAAMoM,EAAO,IAAI1L,aAAa,EAAApd,KAAK0c,OAC7BqM,EAAK,IAAI3L,aAAa,EAAApd,KAAK0c,OAC3B4B,EAAQ,IAAIhB,YAAY,GAACtd,KAAK0c,MAAQ,IAG5C,IAAK,IAAIrf,EAAI,EAAGA,EAAI2C,KAAK0c,MAAOrf,IAAK,CACjCyrB,EAAK5oB,IAAI,EAAC,EAAI,GAAQ,EAAJ7C,GAClB,MAAM4C,EAAI5C,GAAK2C,KAAK0c,MAAQ,GAG5B,GAFAqM,EAAG7oB,IAAI,CAAC,EAAGD,EAAG,EAAGA,GAAQ,EAAJ5C,GAEjBA,IAAM2C,KAAK0c,MAAQ,EAAG,SAC1B,MAAMsM,EAAU,EAAJ3rB,EACZihB,EAAMpe,IAAI,CAAC8oB,EAAM,EAAGA,EAAM,EAAGA,EAAM,GAAgB,GAAXA,EAAM,IAC9C1K,EAAMpe,IAAI,CAAC8oB,EAAM,EAAGA,EAAM,EAAGA,EAAM,GAAgB,GAAXA,EAAM,IAGlD,MAAMhC,EAAYhnB,KAAKgnB,SAAW,IAAI1K,EAClC3X,EACAvH,OAAOuK,OAAOlD,EAAY,CACtB6U,SAAU,CAAE2D,KAAM,EAAGE,KAAMnd,KAAKsZ,UAChCsP,KAAM,CAAE3L,KAAM,EAAGE,KAAMnd,KAAK4oB,MAC5BC,KAAM,CAAE5L,KAAM,EAAGE,KAAMnd,KAAK6oB,MAC5BC,KAAM,CAAE7L,KAAM,EAAGE,KAAM2L,GACvBC,GAAI,CAAE9L,KAAM,EAAGE,KAAM4L,GACrBzK,MAAO,CAAErB,KAAM,EAAGE,KAAMmB,MAKhCte,KAAKipB,iBAEAnI,EAASoI,cAAalpB,KAAKmpB,WAAarI,EAASoI,YAAc,CAAEvgB,MAAO,IAAIuf,KAC5EpH,EAASsI,OAAMppB,KAAK+D,IAAM+c,EAASsI,KAAO,CAAEzgB,MAAO,IACnDmY,EAASuI,aAAYrpB,KAAKspB,UAAYxI,EAASuI,WAAa,CAAE1gB,MAAO,IACrEmY,EAASyI,SAAQvpB,KAAK0E,MAAQoc,EAASyI,OAAS,CAAE5gB,MAAO,IAAImT,EAAM,UACnEgF,EAAS0I,SAAQxpB,KAAKypB,MAAQ3I,EAAS0I,OAAS,CAAE7gB,MAAO,IAG9D3I,KAAK0pB,SAEL,MAAM/f,EAAW3J,KAAK2J,QAAU,IAAIgX,EAAQhc,EAAI,C,OAC5Cic,E,SACAC,E,SACAC,IAGJ9gB,KAAKunB,KAAO,IAAIR,EAAKpiB,EAAI,C,SAAEqiB,E,QAAUrd,IAGzCsf,iBACIjpB,KAAKyoB,OAAOzd,SAAQ,CAAC2e,EAAGtsB,KACpBssB,EAAEtmB,QAAQrD,KAAKsZ,SAAU,EAAAjc,GACzBssB,EAAEtmB,QAAQrD,KAAKsZ,SAAU,EAAAjc,EAAY,GAEhCA,GAQDssB,EAAEtmB,QAAQrD,KAAK6oB,KAAM,GAACxrB,EAAI,IAC1BssB,EAAEtmB,QAAQrD,KAAK6oB,KAAM,GAACxrB,EAAI,GAAa,KAPvCkrB,GAAIpoB,KAAKwpB,GACJnpB,IAAIR,KAAKyoB,OAAOprB,EAAI,IACpBgD,IAAIspB,GACTpB,GAAIllB,QAAQrD,KAAK4oB,KAAM,EAAAvrB,GACvBkrB,GAAIllB,QAAQrD,KAAK4oB,KAAM,EAAAvrB,EAAY,IAMnCA,IAAM2C,KAAKyoB,OAAOnrB,OAAS,GAE3BirB,GAAIpoB,KAAKwpB,GACJnpB,IAAIR,KAAKyoB,OAAOprB,EAAI,IACpBgD,IAAIspB,GACTpB,GAAIllB,QAAQrD,KAAK6oB,KAAM,EAAAxrB,GACvBkrB,GAAIllB,QAAQrD,KAAK6oB,KAAM,EAAAxrB,EAAY,KAEnCssB,EAAEtmB,QAAQrD,KAAK4oB,KAAM,GAACvrB,EAAI,IAC1BssB,EAAEtmB,QAAQrD,KAAK4oB,KAAM,GAACvrB,EAAI,GAAa,OAI/C2C,KAAKgnB,SAASviB,WAAW6U,SAAS2E,aAAc,EAChDje,KAAKgnB,SAASviB,WAAWmkB,KAAK3K,aAAc,EAC5Cje,KAAKgnB,SAASviB,WAAWokB,KAAK5K,aAAc,EAIhDyL,SAEQ1pB,KAAKmpB,YAAYnpB,KAAKmpB,WAAWxgB,MAAMzI,IAAIF,KAAK2E,GAAGjB,OAAOG,MAAO7D,KAAK2E,GAAGjB,OAAOI,QAChF9D,KAAK+D,MAAK/D,KAAK+D,IAAI4E,MAAQ3I,KAAK2E,GAAGK,SAASjB,MAIxD,MAAM2kB,GAA2B,w+CAmD3BC,GAA6B,yL,ICNnCiB,GAnKc,KAwCd,CACI,MAAM5kB,EAAW,IAAI6kB,EAAS,CAAE9lB,IAAK,IAC/BY,EAAKK,EAASL,GACpBhB,SAASmmB,KAAKC,YAAYplB,EAAGjB,QAE7BiB,EAAGqlB,WAAW,KAAM,KAAM,KAAO,IAEjC,MAAMhgB,EAAQ,IAAIigB,EAEZrE,EAAQ,GAEd,SAAS8D,IACL1kB,EAASC,QAAQilB,OAAOC,WAAYD,OAAOE,aAG3CxE,EAAM5a,SAASqf,GAASA,EAAKC,SAASZ,WAK1C,SAASa,EAAOxsB,EAAGS,GACf,MAAMwF,EAAQ7F,KAAKosB,SACnB,OAAOxsB,GAAK,EAAMiG,GAASxF,EAAIwF,EALnCkmB,OAAOM,iBAAiB,SAAUd,GAAQ,GAmB1C,CAAC,UAAW,UAAW,UAAW,UAAW,WAAW1e,SAAQ,CAACtG,EAAOrH,KAEpE,MAAMgtB,EAAO,CACTI,OAAQF,EAAO,IAAM,IACrBG,SAAUH,EAAO,GAAK,KACtBI,cAAe,IAAIC,EACnBC,YAAa,IAAID,EAAqB,IAAhBL,GAAO,EAAI,KAO/B9B,EAAU4B,EAAK5B,OAAS,GAC9B,IAAK,IAAIprB,EAAI,EAAGA,EAFF,GAEaA,IAAKorB,EAAO7d,KAAK,IAAIggB,GAIhDP,EAAKC,SAAW,IAAIQ,GAASnmB,EAAI,C,OAC7B8jB,E,OA9FmB,+1CAgGnB3H,SAAU,CACNyI,OAAQ,CAAE5gB,MAAO,IAAIoiB,EAAMrmB,IAC3B2kB,WAAY,CAAE1gB,MAAO4hB,EAAO,GAAI,SAIxCF,EAAKC,SAAS/C,KAAK9N,UAAUzP,GAE7B4b,EAAMhb,KAAKyf,MAIfX,IAGA,MAAMsB,EAAQ,IAAIJ,EAQlB,SAASK,EAAYC,GACbA,EAAEC,gBAAkBD,EAAEC,eAAe7tB,SACrC4tB,EAAEltB,EAAIktB,EAAEC,eAAe,GAAGC,MAC1BF,EAAEjtB,EAAIitB,EAAEC,eAAe,GAAGE,YAElBhjB,IAAR6iB,EAAEltB,IACFktB,EAAEltB,EAAIktB,EAAEE,MACRF,EAAEjtB,EAAIitB,EAAEG,OAIZL,EAAM9qB,IAAKgrB,EAAEltB,EAAI2G,EAAGK,SAASnB,MAAS,EAAI,EAAIqnB,EAAEjtB,EAAI0G,EAAGK,SAASlB,QAAU,EAAK,EAAG,GAlBlF,iBAAkBomB,QAClBA,OAAOM,iBAAiB,aAAcS,GAAa,GACnDf,OAAOM,iBAAiB,YAAaS,GAAa,IAElDf,OAAOM,iBAAiB,YAAaS,GAAa,GAiBtD,MAAMK,EAAM,IAAIV,EAEhBW,uBACA,SAAShgB,EAAOvI,GACZuoB,sBAAsBhgB,GAEtBqa,EAAM5a,SAASqf,IAEX,IAAK,IAAIhtB,EAAIgtB,EAAK5B,OAAOnrB,OAAS,EAAGD,GAAK,EAAGA,IACpCA,EAODgtB,EAAK5B,OAAOprB,GAAG0F,KAAKsnB,EAAK5B,OAAOprB,EAAI,GAAI,KALxCiuB,EAAInrB,KAAK6qB,GAAO3qB,IAAIgqB,EAAKQ,aAAarqB,IAAI6pB,EAAK5B,OAAOprB,IAAIoD,SAAS4pB,EAAKI,QACxEJ,EAAKM,cAActqB,IAAIirB,GAAK7qB,SAAS4pB,EAAKK,UAC1CL,EAAK5B,OAAOprB,GAAGgD,IAAIgqB,EAAKM,gBAMhCN,EAAKC,SAASrB,oBAGlBjkB,EAASsG,OAAO,C,MAAEtB,S,OC9J1BwhB,GAAiB5tB,KAAKC,MAAM,uf,OCA5B4tB,GAAiB,IAAAC,IAAoBhuB,EAAA,SAAAiuB,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,OCA5FC,GAAiB,IAAAN,IAAoBhuB,EAAA,SAAAiuB,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,OCA5FE,GAAiB,IAAAP,IAAoBhuB,EAAA,SAAAiuB,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,OCA5FG,GAAiB,IAAAR,IAAoBhuB,EAAA,SAAAiuB,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,ICa5FI,GAPe,C,SACXC,M,SACAC,M,WACAC,M,UACAC,OCNJznB,QAAQ0nB,IAAIrP,MAAKsP,SAAS,IAE1B3nB,QAAQ0nB,IAAIE,ICEZ,IAAIC,GAAQ,KACG,MAAAC,GACX9sB,eAEA+sB,OACI7sB,KAAK8sB,OACL9sB,KAAK+sB,eACL/sB,KAAKgtB,aAITF,OAEInpB,SAASspB,eAAe,MAAMC,UCpBhB,8JDqBdvpB,SAASspB,eAAe,aAAaC,UErBvB,irDFsBdvpB,SAASspB,eAAe,WAAWC,UGrBxB,yVHwBfH,eACI7C,OAAOM,iBAAiB,SAAU2C,IAG9B,OAFYA,EAAMjkB,OAAO3L,IAGrB,IAAK,OACDoG,SAASspB,eAAe,aAAaC,UE/BnC,irDFgCDP,GAAQ,IAAIS,MAAM,CAACpjB,MAAM,WAAWqjB,QAAO,IAC5C,MACJ,IAAK,aACD1pB,SAASspB,eAAe,aAAaC,UDzBtC,6tEC0BCP,GAAQ,IAAIS,MAAM,CAACpjB,MAAM,WAAWqjB,QAAO,IAC3C,MACJ,IAAK,UACD1pB,SAASspB,eAAe,aAAaC,UIvCrC,4zCJwCAP,GAAQ,IAAIS,MAAM,CAACpjB,MAAM,WAAWqjB,QAAO,QAIpD,GAGPC,aAEYpD,OAAOqD,WAAW,sBACpBC,SAEF7pB,SAAS6mB,iBAAiB,SAAS,SAAU2C,GACjB,eAApBA,EAAMjkB,OAAO3L,KACjBoG,SAASspB,eAAe,aAAaC,UD5ClC,6tEC6CHvpB,SAASspB,eAAe,MAAMrlB,MAAMsN,IAAM,WAKtD8X,aACI,GAAI9C,OAAOuD,UAAUC,UAAU7R,cAAc9B,QAAQ,WAAY,EAAI,CACjE,MAAM4T,EAAO,CACT,gEACA,2EAEJzD,OAAOplB,QAAQ0nB,IAAIoB,MAAM9oB,QAAS6oB,QAC3BzD,OAAOplB,SACdolB,OAAOplB,QAAQ0nB,IAAI,2BKpD/BtC,OAAO2D,OAAUV,KATP,IAAIW,IACVjB,OAIFjH","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-c2b0b963f026d910.js","node_modules/ogl/src/math/functions/Vec3Func.js","node_modules/ogl/src/math/Vec3.js","node_modules/ogl/src/core/Renderer.js","node_modules/ogl/src/math/functions/QuatFunc.js","node_modules/ogl/src/math/functions/Vec4Func.js","node_modules/ogl/src/math/Quat.js","node_modules/ogl/src/math/functions/Mat4Func.js","node_modules/ogl/src/math/Mat4.js","node_modules/ogl/src/math/Euler.js","node_modules/ogl/src/math/functions/EulerFunc.js","node_modules/ogl/src/core/Transform.js","node_modules/ogl/src/core/Camera.js","node_modules/ogl/src/math/functions/ColorFunc.js","node_modules/ogl/src/math/Color.js","node_modules/ogl/src/core/Geometry.js","node_modules/ogl/src/core/Program.js","node_modules/ogl/src/math/functions/Mat3Func.js","node_modules/ogl/src/math/Mat3.js","node_modules/ogl/src/core/Mesh.js","node_modules/ogl/src/math/functions/Vec2Func.js","node_modules/ogl/src/math/Vec2.js","node_modules/ogl/src/extras/Polyline.js","src/js/follow.js","src/data.json","node_modules/@parcel/runtime-js/lib/runtime-3cc1bc511e4599d2.js","node_modules/@parcel/runtime-js/lib/runtime-e9686cfd3650e2ef.js","node_modules/@parcel/runtime-js/lib/runtime-c0be45a2ab3f4a8f.js","node_modules/@parcel/runtime-js/lib/runtime-c72a9605a7032eb8.js","src/js/images.js","src/js/pages/Experiments.js","src/js/app.js","src/js/interface/Nav.js","src/js/pages/Home.js","src/js/interface/Contact.js","src/js/pages/Portafolio.js","src/main.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"auyDg\\\":\\\"index.b5c2c111.js\\\",\\\"3ItMJ\\\":\\\"insta-0.9fd1039c.jpg\\\",\\\"kVq87\\\":\\\"insta-1.8e1e9571.jpg\\\",\\\"9EqeY\\\":\\\"insta-2.b86e8b3f.jpg\\\",\\\"kXQBF\\\":\\\"insta-3.f4e77893.jpg\\\",\\\"hoADO\\\":\\\"index.02288d91.css\\\"}\"));","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec3Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n        this.state.currentProgram = null;\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n        this.getExtension('WEBGL_compressed_texture_astc');\n        this.getExtension('EXT_texture_compression_bptc');\n        this.getExtension('WEBGL_compressed_texture_s3tc');\n        this.getExtension('WEBGL_compressed_texture_etc1');\n        this.getExtension('WEBGL_compressed_texture_pvrtc');\n        this.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const NAMES = {\n    black: '#000000',\n    white: '#ffffff',\n    red: '#ff0000',\n    green: '#00ff00',\n    blue: '#0000ff',\n    fuchsia: '#ff00ff',\n    cyan: '#00ffff',\n    yellow: '#ffff00',\n    orange: '#ff8000',\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\n}\n\nexport function parseColor(color) {\n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n\n    // Hex\n    if (color[0] === '#') return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data - although needs position data for bounds calculation\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n        attr.usage = attr.usage || this.gl.STATIC_DRAW;\n\n        if (!attr.buffer) {\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        const isNewBuffer = !attr.buffer;\n        if (isNewBuffer) attr.buffer = this.gl.createBuffer();\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        if (isNewBuffer) {\n            this.gl.bufferData(attr.target, attr.data, attr.usage);\n        } else {\n            this.gl.bufferSubData(attr.target, 0, attr.data);\n        }\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.state.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.state.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Color } from '../math/Color.js';\n\nconst tmp = new Vec3();\n\nexport class Polyline {\n    constructor(\n        gl,\n        {\n            points, // Array of Vec3s\n            vertex = defaultVertex,\n            fragment = defaultFragment,\n            uniforms = {},\n            attributes = {}, // For passing in custom attribs\n        }\n    ) {\n        this.gl = gl;\n        this.points = points;\n        this.count = points.length;\n\n        // Create buffers\n        this.position = new Float32Array(this.count * 3 * 2);\n        this.prev = new Float32Array(this.count * 3 * 2);\n        this.next = new Float32Array(this.count * 3 * 2);\n        const side = new Float32Array(this.count * 1 * 2);\n        const uv = new Float32Array(this.count * 2 * 2);\n        const index = new Uint16Array((this.count - 1) * 3 * 2);\n\n        // Set static buffers\n        for (let i = 0; i < this.count; i++) {\n            side.set([-1, 1], i * 2);\n            const v = i / (this.count - 1);\n            uv.set([0, v, 1, v], i * 4);\n\n            if (i === this.count - 1) continue;\n            const ind = i * 2;\n            index.set([ind + 0, ind + 1, ind + 2], (ind + 0) * 3);\n            index.set([ind + 2, ind + 1, ind + 3], (ind + 1) * 3);\n        }\n\n        const geometry = (this.geometry = new Geometry(\n            gl,\n            Object.assign(attributes, {\n                position: { size: 3, data: this.position },\n                prev: { size: 3, data: this.prev },\n                next: { size: 3, data: this.next },\n                side: { size: 1, data: side },\n                uv: { size: 2, data: uv },\n                index: { size: 1, data: index },\n            })\n        ));\n\n        // Populate dynamic buffers\n        this.updateGeometry();\n\n        if (!uniforms.uResolution) this.resolution = uniforms.uResolution = { value: new Vec2() };\n        if (!uniforms.uDPR) this.dpr = uniforms.uDPR = { value: 1 };\n        if (!uniforms.uThickness) this.thickness = uniforms.uThickness = { value: 1 };\n        if (!uniforms.uColor) this.color = uniforms.uColor = { value: new Color('#000') };\n        if (!uniforms.uMiter) this.miter = uniforms.uMiter = { value: 1 };\n\n        // Set size uniforms' values\n        this.resize();\n\n        const program = (this.program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms,\n        }));\n\n        this.mesh = new Mesh(gl, { geometry, program });\n    }\n\n    updateGeometry() {\n        this.points.forEach((p, i) => {\n            p.toArray(this.position, i * 3 * 2);\n            p.toArray(this.position, i * 3 * 2 + 3);\n\n            if (!i) {\n                // If first point, calculate prev using the distance to 2nd point\n                tmp.copy(p)\n                    .sub(this.points[i + 1])\n                    .add(p);\n                tmp.toArray(this.prev, i * 3 * 2);\n                tmp.toArray(this.prev, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.next, (i - 1) * 3 * 2);\n                p.toArray(this.next, (i - 1) * 3 * 2 + 3);\n            }\n\n            if (i === this.points.length - 1) {\n                // If last point, calculate next using distance to 2nd last point\n                tmp.copy(p)\n                    .sub(this.points[i - 1])\n                    .add(p);\n                tmp.toArray(this.next, i * 3 * 2);\n                tmp.toArray(this.next, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.prev, (i + 1) * 3 * 2);\n                p.toArray(this.prev, (i + 1) * 3 * 2 + 3);\n            }\n        });\n\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.prev.needsUpdate = true;\n        this.geometry.attributes.next.needsUpdate = true;\n    }\n\n    // Only need to call if not handling resolution uniforms manually\n    resize() {\n        // Update automatic uniforms if not overridden\n        if (this.resolution) this.resolution.value.set(this.gl.canvas.width, this.gl.canvas.height);\n        if (this.dpr) this.dpr.value = this.gl.renderer.dpr;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    precision highp float;\n\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    uniform float uMiter;\n\n    varying vec2 vUv;\n\n    vec4 getPosition() {\n        mat4 mvp = projectionMatrix * modelViewMatrix;\n        vec4 current = mvp * vec4(position, 1);\n        vec4 nextPos = mvp * vec4(next, 1);\n        vec4 prevPos = mvp * vec4(prev, 1);\n\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);    \n        vec2 currentScreen = current.xy / current.w * aspect;\n        vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n        vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n    \n        vec2 dir1 = normalize(currentScreen - prevScreen);\n        vec2 dir2 = normalize(nextScreen - currentScreen);\n        vec2 dir = normalize(dir1 + dir2);\n    \n        vec2 normal = vec2(-dir.y, dir.x);\n        normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n        normal /= aspect;\n\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w * pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n\n    void main() {\n        vUv = uv;\n        gl_Position = getPosition();\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform vec3 uColor;\n    \n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor.rgb = uColor;\n        gl_FragColor.a = 1.0;\n    }\n`;\n","\n  import { Renderer, Transform, Vec3, Color, Polyline, Post } from 'ogl';\nconst lines = ()=>{\n    const vertex = /* glsl */ `\n    precision highp float;\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    vec4 getPosition() {\n        vec4 current = vec4(position, 1);\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);\n        vec2 nextScreen = next.xy * aspect;\n        vec2 prevScreen = prev.xy * aspect;\n    \n        // Calculate the tangent direction\n        vec2 tangent = normalize(nextScreen - prevScreen);\n    \n        // Rotate 90 degrees to get the normal\n        vec2 normal = vec2(-tangent.y, tangent.x);\n        normal /= aspect;\n        // Taper the line to be fatter in the middle, and skinny at the ends using the uv.y\n        normal *= mix(1.0, 0.1, pow(abs(uv.y - 0.5) * 2.0, 2.0) );\n        // When the points are on top of each other, shrink the line to avoid artifacts.\n        float dist = length(nextScreen - prevScreen);\n        normal *= smoothstep(0.0, 0.06, dist);\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w* pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n    void main() {\n        gl_Position = getPosition();\n    }\n`;\n\n{\n    const renderer = new Renderer({ dpr: 2 });\n    const gl = renderer.gl;\n    document.body.appendChild(gl.canvas);\n    \n    gl.clearColor(0.945,0.945,0.945, 0.1);\n\n    const scene = new Transform();\n\n    const lines = [];\n\n    function resize() {\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        // We call resize on the polylines to update their resolution uniforms\n        lines.forEach((line) => line.polyline.resize());\n    }\n    window.addEventListener('resize', resize, false);\n\n    // Just a helper function to make the code neater\n    function random(a, b) {\n        const alpha = Math.random();\n        return a * (1.0 - alpha) + b * alpha;\n    }\n\n    // If you're interested in learning about drawing lines with geometry,\n    // go through this detailed article by Matt DesLauriers\n    // https://mattdesl.svbtle.com/drawing-lines-is-hard\n    // It's an excellent breakdown of the approaches and their pitfalls.\n\n    // In this example, we're making screen-space polylines. Basically it\n    // involves creating a geometry of vertices along a path - with two vertices\n    // at each point. Then in the vertex shader, we push each pair apart to\n    // give the line some width.\n\n    // We're going to make a number of different coloured lines for fun.\n    ['#e09f7d', '#ffffff', '#ec4067', '#a01a7d', '#11071a'].forEach((color, i) => {\n        // Store a few values for each lines' spring movement\n        const line = {\n            spring: random(0.02, 0.1),\n            friction: random(0.7, 0.95),\n            mouseVelocity: new Vec3(),\n            mouseOffset: new Vec3(random(-1, 1) * 0.02),\n        };\n\n        // Create an array of Vec3s (eg [[0, 0, 0], ...])\n        // Note: Only pass in one for each point on the line - the class will handle\n        // the doubling of vertices for the polyline effect.\n        const count = 30;\n        const points = (line.points = []);\n        for (let i = 0; i < count; i++) points.push(new Vec3());\n\n        // Pass in the points, and any custom elements - for example here we've made\n        // custom shaders, and accompanying uniforms.\n        line.polyline = new Polyline(gl, {\n            points,\n            vertex,\n            uniforms: {\n                uColor: { value: new Color(color) },\n                uThickness: { value: random(10, 150) },\n            },\n        });\n\n        line.polyline.mesh.setParent(scene);\n\n        lines.push(line);\n    });\n\n    // Call initial resize after creating the polylines\n    resize();\n\n    // Add handlers to get mouse position\n    const mouse = new Vec3();\n    if ('ontouchstart' in window) {\n        window.addEventListener('touchstart', updateMouse, false);\n        window.addEventListener('touchmove', updateMouse, false);\n    } else {\n        window.addEventListener('mousemove', updateMouse, false);\n    }\n\n    function updateMouse(e) {\n        if (e.changedTouches && e.changedTouches.length) {\n            e.x = e.changedTouches[0].pageX;\n            e.y = e.changedTouches[0].pageY;\n        }\n        if (e.x === undefined) {\n            e.x = e.pageX;\n            e.y = e.pageY;\n        }\n\n        // Get mouse value in -1 to 1 range, with y flipped\n        mouse.set((e.x / gl.renderer.width) * 2 - 1, (e.y / gl.renderer.height) * -2 + 1, 0);\n    }\n\n    const tmp = new Vec3();\n\n    requestAnimationFrame(update);\n    function update(t) {\n        requestAnimationFrame(update);\n\n        lines.forEach((line) => {\n            // Update polyline input points\n            for (let i = line.points.length - 1; i >= 0; i--) {\n                if (!i) {\n                    // For the first point, spring ease it to the mouse position\n                    tmp.copy(mouse).add(line.mouseOffset).sub(line.points[i]).multiply(line.spring);\n                    line.mouseVelocity.add(tmp).multiply(line.friction);\n                    line.points[i].add(line.mouseVelocity);\n                } else {\n                    // The rest of the points ease to the point in front of them, making a line\n                    line.points[i].lerp(line.points[i - 1], 0.9);\n                }\n            }\n            line.polyline.updateGeometry();\n        });\n\n        renderer.render({ scene });\n    }\n}\n  \n}\n\n\nexport default lines;","{\n    \"projects\": [\n        {\n            \"title\": \"Moving Photon\",\n            \"description\": \"I Help develop and deploy the Virtual Experience for Moving Photon an interactive installation/performance created by installation artistFriendred Peng. Participation in Moving Photon can be in 5 different ways, including a Phantom performance, interactive installation, interactive performance,interactive performance with EEG and a remote performance.\"\n        },\n        {\n            \"title\": \"Glitch Machine\",\n            \"description\": \"   as\"\n        },\n        {\n            \"title\": \"Noizu\",\n            \"description\": \"   as\"\n        }\n    ]\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3ItMJ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kVq87\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9EqeY\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kXQBF\")).toString();","import imageOne from '../../images/insta-0.jpg';\nimport imageTwo from '../../images/insta-1.jpg';\nimport imageThree from '../../images/insta-2.jpg';\nimport imageFour from '../../images/insta-3.jpg';\n\n\nconst images = {\n    imageOne,\n    imageTwo,\n    imageThree,\n    imageFour\n}\n\nexport default images;","\nimport data from '../../data.json';\n\nimport images from '../images.js'\nconsole.log(data.projects[0])\n\nconsole.log(images)\n\n\n\nconst Experiments = () => {\n\tconst template = `\n<main>\n   <div id=\"portafolio\">\n    <section class=\"proj\">\n        <a href=\"https://movingphoton.friendred.studio/\" target=\"_blank\"> <img src=\"poster4.jpg\" width=\"500\" /></a>\n    </section>\n    <section class=\"info\">\n        <h2>Moving Photon</h2>\n        <p>I Help develop and deploy the Virtual Experience for\n            <a href=\"https://friendred.studio/2021/10/07/moving-photon/\" target=\"_blank\"> Moving Photon</a> an\n            interactive installation/performance\n            created by installation artist<a href=\"https://friendred.studio\" target=\"_blank\"> Friendred Peng.</a>\n            Participation in Moving Photon can be in 5 different ways, including a Phantom performance,\n            interactive installation, interactive performance,interactive performance with EEG and a <a\n                href=\"https://movingphoton.friendred.studio/\" target=\"_blank\"> remote performance.</a>\n    </section>\n    <section class=\"info\">\n    <h2>Glitch Machine</h2>\n        <p>A custom Glitch App build for<a href=\"https://www.instagram.com/jenna___marsh/ target=\"_blank\"> Jenna Marsh </a>, it lets you play with a image applying different filters and export the resulting image for printing</p>\n    </section>\n    <section class=\"proj\">\n        <a href=\"https://www.instagram.com/p/CNRC1QZHf66/\"> <img src= \"insta-0.jpg\" width=\"500\"/></a>\n     </section>\n     <section class=\"proj\">\n       <a href=\"https://onesimpleidea.itch.io/noizu\" target=\"_blank\"><img src= \"noizu.png\" width=\"500\"/></a>\n    </section>\n    <section class=\"info\">\n    <h2>Noizu</h2>\n        <p>Custom build a Audio player for Linux and mac. on building a light and simple player for linux, based on my old love to sonique and winamp i do miss those programs when ui and ux was actually interesting and different every time this is a preview</p>\n     </section>\n     <section class=\"info\">\n     <h2>PACMan YaEsta.com</h2>\n     <p>Develop a Physical installation with Mapping and live interaction  for the launch of the e-commerce site YaEsta.com back in the day</p>\n      </section>\n    <section class=\"proj\">\n       <a href=\"https://www.youtube.com/watch?v=YHZd0TxPMkY\"> <img src= \"insta-3.jpg\" width=\"500\"/></a>  \n    </section>\n   \n</div>\n</main>\n    `;\n\treturn template;\n};\n\nexport default Experiments;\n","import Navbar from \"./interface/Nav\";\nimport Contact from \"./interface/Contact\";\nimport Home from \"./pages/Home\";\nimport Portafolio from \"./pages/Portafolio\";\nimport Experiments from \"./pages/Experiments\";\n//import Stage  from \"./Stage\"\n\n\nlet stage = null\nexport default class GUIView{\n    constructor(){}\n\n    init(){\n        this.load();\n        this.addListeners();\n        this.simpleSign();\n        \n        //this.responsive();\n    }\n    load(){\n        \t//load UI and socials media  plus main content\n        document.getElementById(\"ui\").innerHTML = Navbar();\n        document.getElementById(\"container\").innerHTML = Home();\n        document.getElementById(\"contact\").innerHTML = Contact();\n\n    }\n    addListeners(){\n        window.addEventListener(\"click\", (event) => {\n            let links = event.target.id;\n           \n            switch (links) {\n                case 'home':\n                    document.getElementById(\"container\").innerHTML = Home();\n                     stage = new Stage({scene:\"sectionA\",active:true})\n                    break;\n                case 'experiment':\n                    document.getElementById(\"container\").innerHTML = Experiments();\n                    stage = new Stage({scene:\"sectionB\",active:false})\n                    break;\n                case 'project':\n                    document.getElementById(\"container\").innerHTML = Portafolio();\n                    stage = new Stage({scene:\"sectionC\",active:true})\n                    break;\n            }\n        \n        }, false);\n        \n    }\n    responsive(){\n        \t//responsive screens\n        var x = window.matchMedia(\"(max-width: 700px)\");\n        if (x.matches) {\n            //console.log(\"responsive biatch\");\n            document.addEventListener(\"click\", function (event) {\n                if (event.target.id !== \"experiment\") return;\n                document.getElementById(\"container\").innerHTML = Experiments();\n                document.getElementById(\"ui\").style.top = \"10vh\";\n            });\n        }\n    }\n\n    simpleSign(){\n        if (window.navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\n            const args = [\n                \"\\n %c ->> created by cyrstem more info on onesimpleidea.xyz\\n\",\n                \"border: 1px solid #000;color: #fff; background: #171717; padding:5px 0;\",\n            ];\n            window.console.log.apply(console, args);\n        } else if (window.console) {\n            window.console.log(\"-created by cyrstem  -\");\n        }\n    }\n}","const Navbar =()=>{\n    const template = `\n        <nav>\n            <button id=\"home\">About Me </button>\n            <button id=\"experiment\">Experiments</button> \n        </nav>\n       \n    `;\n    return template;\n}\nexport default Navbar;\n","const Home = () => {\n    const template = `\n    <main>\n        <div id=\"content\">\n            <p>Hello...</p>\n            <p>I'm <b>Jacob</b> a <b>Creative Developer</b> and <b>Front-End Developer</b> based in Quito - Ecuador, specialize on building custom digital or physical experiences.</p> \n            <p><b>Self-taught</b> developer, <b>fast learner</b> that works with<b> WebGL, JS, C++, OpenGL, GLSL </b>and recently curious about <b>Machine Learning.</b></p>\n            <div id =\"sites\"> \n            <p> I have worked for:</p>\n            <ul>\n            <li>\n             <a href=\"https://activetheory.net/\" target=\"_blank\">\n               <span>Active Theory</span> \n               <span>WebGL Developer</span>\n               <span>2021</span>\n             </a>\n            </li>\n            <li>\n               <a href=\"https://myuniguru.com/\" target=\"_blank\">\n                 <span>My Uniguru</span>\n                 <span>FullStack Developer</span>\n                 <span class=\"number\">2020</span>\n               </a>\n             </li>\n             <li>\n             <a href=\"https://smartco.com.ec\" target=\"_blank\"> \n               <span>Smartco </span>\n               <span>Unity Developer</span>\n               <span class=\"number\">2019 - 2020</span>\n             </a>\n           </li>\n             <li>\n               <a href=\"https://www.yaesta.com\" target=\"_blank\">\n                 <span> YaEsta </span>\n                 <span> Front-end  & Designer</span> \n                 <span class=\"number\">2016 - 2018</span>\n               </a>\n             </li>\n            </ul>\n         </div>\n         <p>Contact me at <b>cyrstem[at]gmail[dot]com</b></p>  \n        </div>\n    </main>\n    `;\n    return template;\n};\nexport default Home;\n","const Contact = () => {\n\n\tconst template = `\n\n        <ul id=\"links\">\n            <a href =\"https://www.instagram.com/cyrstem/\"target=\"_blank\"><img src=\"insta.png\"></a>\n                <a href =\"http://ec.linkedin.com/in/jacobohz\" target=\"_blank\"><img src=\"in.png\"></a>\n            <a href =\"https://github.com/cyrstem/\" target=\"_blank\"><img src=\"git.png\"></a>\n        </ul>\n    `;\n\treturn template;\n    \n};\nexport default Contact;\n","const Portafolio = () => {\n  const template = `\n      <div class =\"sites\"> \n         <ul>\n         <li>\n          <a href=\"https://activetheory.net/\" target=\"_blank\">\n            <span>Active Theory</span> \n            <span>WebGL Developer</span>\n            <span>2021</span>\n          </a>\n         </li>\n         <li>\n            <a href=\"https://myuniguru.com/\" target=\"_blank\">\n              <span>My Uniguru</span>\n              <span>FullStack Developer</span>\n              <span class=\"number\">2020</span>\n            </a>\n          </li>\n          <li>\n          <a href=\"https://smartco.com.ec\" target=\"_blank\"> \n            <span>Smartco </span>\n            <span>Unity Developer</span>\n            <span class=\"number\">2019 - 2020</span>\n          </a>\n        </li>\n          <li>\n            <a href=\"https://www.yaesta.com\" target=\"_blank\">\n              <span> YaEsta </span>\n              <span> Front-end  & Designer</span> \n              <span class=\"number\">2016 - 2018</span>\n            </a>\n          </li>\n          \n      \n          <li>\n            <a href=\"https://www.pachamama.org.ec/en/\" target=\"_blank\">\n              <span> Pachamama</span>\n              <span> Front-end Developer</span>\n              <span class=\"number\">2010 – 2013</span>\n            </a>\n          </li>\n         </ul>\n      </div>\n    `;\n  return template;\n};\n\nexport default Portafolio;\n","\nimport \"./style/main.scss\";\n import lines from \"./js/follow\";\nimport GUIView from \"./js/app\";\nimport thingA from \"./js/thingA\";\n\n\t\nconst app = () => {\n\tlet ui = new GUIView();\n\tui.init();\n\t//let thing = new thingA( {scene:'stateA', active: true} );\n\t//let thing = new thingA();\n\t//\t\tthing.draw()\n\t lines();\n\n};\n\nwindow.onload = (event) => {\n\tapp();\n};\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$fcf02a95a4622ee8$export$f24224f1c91d8156","a","x","y","z","Math","sqrt","$fcf02a95a4622ee8$export$784d13d8ee351f07","out","$fcf02a95a4622ee8$export$e16d8520af44a096","b","$fcf02a95a4622ee8$export$4e2d2ead65e5f7e3","$fcf02a95a4622ee8$export$dcdf75081b88279d","$fcf02a95a4622ee8$export$ab44e1323ffc8376","$fcf02a95a4622ee8$export$a3295358bff77e","len","$fcf02a95a4622ee8$export$94132a0e348806d4","$fcf02a95a4622ee8$export$bb646b20bb93d339","ax","ay","az","bx","by","bz","$fcf02a95a4622ee8$export$944b09d2ad10b378","tempA","tempB","cosine","PI","acos","$46d76f993ed555f5$export$838423f3adec30fa","Array","constructor","super","this","v","set","copy","$fcf02a95a4622ee8$export$adaa4cf7ef1b65be","add","va","vb","sub","multiply","divide","inverse","distance","$fcf02a95a4622ee8$export$9f17032d917177de","squaredLen","squaredDistance","$fcf02a95a4622ee8$export$88e6ebb4fe54f538","negate","cross","scale","normalize","dot","equals","applyMatrix3","mat3","m","$fcf02a95a4622ee8$export$f0bfa0a0024626ee","applyMatrix4","mat4","w","$fcf02a95a4622ee8$export$5ffbd13800309d59","scaleRotateMatrix4","$fcf02a95a4622ee8$export$58ce737ad0c12bc2","applyQuaternion","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","$fcf02a95a4622ee8$export$c32adef9e939ce85","angle","lerp","t","$fcf02a95a4622ee8$export$3a89f8d6f6bf6c9f","clone","fromArray","o","toArray","transformDirection","$b5a73110aaf50409$var$tempVec3","$b5a73110aaf50409$var$ID","$b5a73110aaf50409$export$88530751e3977073","canvas","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","autoClear","webgl","attributes","color","gl","getContext","isWebgl2","console","error","renderer","setSize","state","blendFunc","src","ONE","dst","ZERO","blendEquation","modeRGB","FUNC_ADD","cullFace","frontFace","CCW","depthMask","depthFunc","LESS","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","textureUnits","activeTextureUnit","boundBuffer","uniformLocations","Map","currentProgram","extensions","getExtension","vertexAttribDivisor","drawArraysInstanced","drawElementsInstanced","createVertexArray","bindVertexArray","deleteVertexArray","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","assign","style","setViewport","setScissor","scissor","enable","disable","setBlendFunc","srcAlpha","dstAlpha","undefined","blendFuncSeparate","setBlendEquation","modeAlpha","blendEquationSeparate","setCullFace","value","setFrontFace","setDepthMask","setDepthFunc","activeTexture","TEXTURE0","bindFramebuffer","target","FRAMEBUFFER","buffer","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","program","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","draw","frustumCulled","frustumIntersectsMesh","push","opaque","transparent","ui","forEach","depthTest","worldMatrix","getTranslation","projectionViewMatrix","concat","render","update","clear","DEPTH_TEST","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","$0b0b47b0a5724ccd$export$2060d2db72cce88f","aw","bw","$0b0b47b0a5724ccd$export$784d13d8ee351f07","$0b0b47b0a5724ccd$export$adaa4cf7ef1b65be","$0b0b47b0a5724ccd$export$94132a0e348806d4","$0b0b47b0a5724ccd$export$a3295358bff77e","$e4281cd166358a18$export$5edfe12bb88684c8","onChange","identity","rotateX","rad","sin","cos","$0b0b47b0a5724ccd$export$a59c8716592e09af","rotateY","$0b0b47b0a5724ccd$export$cf71e4d4ca4d1cfd","rotateZ","$0b0b47b0a5724ccd$export$ea6eae3365de5b9c","a0","a1","a2","a3","dot1","invDot","$0b0b47b0a5724ccd$export$6897c284b6f9f4dc","conjugate","qA","qB","fromMatrix3","matrix3","fRoot","fTrace","j","k","$0b0b47b0a5724ccd$export$272a1eb8e5a4b55b","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","$0b0b47b0a5724ccd$export$7a404a587ea85af","fromAxisAngle","axis","s","$0b0b47b0a5724ccd$export$4286ddefc8f49512","slerp","omega","cosom","sinom","scale0","scale1","$0b0b47b0a5724ccd$export$1544d9bc2995de08","$17e1720dd2981297$export$2060d2db72cce88f","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","$17e1720dd2981297$export$71dc54d92bd04b57","mat","m11","m12","m13","m21","m22","m23","m31","m32","m33","hypot","$17e1720dd2981297$export$df3937d3b537df0a","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","$4e21c701cd686be1$export$21c0e3d5e995d7e1","m00","m01","m02","m03","m10","m20","m30","$17e1720dd2981297$export$adaa4cf7ef1b65be","translate","$17e1720dd2981297$export$d73ee8ef04f5226a","rotate","c","b00","b01","b02","b10","b11","b12","b20","b21","b22","abs","$17e1720dd2981297$export$bb628a54ab399bc9","$17e1720dd2981297$export$dcdf75081b88279d","ma","mb","fromPerspective","fov","aspect","near","far","fovy","f","tan","nf","$17e1720dd2981297$export$541149539f3a4684","fromOrthogonal","left","right","bottom","top","lr","bt","$17e1720dd2981297$export$4f2167e613cfc87b","fromQuaternion","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","$17e1720dd2981297$export$2ff2bbe382249af7","setPosition","b03","b04","b05","b06","b07","b08","b09","det","$17e1720dd2981297$export$6897c284b6f9f4dc","compose","pos","xy","xz","yz","$17e1720dd2981297$export$ddf9c55c9f2be172","getRotation","getScaling","getMaxScaleOnAxis","max","$17e1720dd2981297$export$6276f53cd18ff805","lookAt","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","$17e1720dd2981297$export$aa67782f4dc9e52c","determinant","$17e1720dd2981297$export$a04698f914c55ed9","$5f514479e80f605c$var$tmpMat4","$5f514479e80f605c$export$d93cc409a0768c5f","reorder","fromRotationMatrix","asin","min","atan2","$ee536ae28bcc5e05$export$48889b85f55f068c","$b99754c4edbe0b63$export$563a914cafbdc389","parent","children","matrix","matrixAutoUpdate","position","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","indexOf","splice","force","updateMatrix","worldMatrixNeedsUpdate","l","callback","decompose","invert","$5fd82508fd9a96a0$var$NAMES","black","white","red","green","blue","fuchsia","cyan","yellow","orange","$5fd82508fd9a96a0$export$848d71df1f759bc","hex","rgb","exec","warn","parseInt","$5fd82508fd9a96a0$export$a564e3eeccb7f9fa","num","$5fd82508fd9a96a0$export$6e865ea70d7724f","arguments","isNaN","toLowerCase","$8ff67d004e35b87a$export$892596cec99bc70e","isArray","r","g","$ba0ac60fd26b90a9$var$tempVec3","$ba0ac60fd26b90a9$var$ID","$ba0ac60fd26b90a9$var$ATTR_ID","$ba0ac60fd26b90a9$var$isBoundsWarned","$ba0ac60fd26b90a9$export$2db6c17465f94a2","VAOs","drawRange","start","count","instancedCount","currentGeometry","glState","key","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","usage","STATIC_DRAW","updateAttribute","isInstanced","index","isNewBuffer","createBuffer","bindBuffer","bufferData","bufferSubData","setIndex","setDrawRange","setInstancedCount","createVAO","attributeOrder","bindAttributes","attributeLocations","location","name","numLoc","vertexAttribPointer","enableVertexAttribArray","mode","TRIANGLES","drawElements","drawArrays","getPosition","computeBoundingBox","array","BYTES_PER_ELEMENT","bounds","center","radius","Infinity","computeBoundingSphere","maxRadiusSq","remove","key1","deleteBuffer","$5baeac5adaf115e1$var$ID","$5baeac5adaf115e1$var$arrayCacheF32","$5baeac5adaf115e1$export$b6c59b989905b650","vertex","fragment","uniforms","BACK","depthWrite","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","$5baeac5adaf115e1$var$addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","applyState","CULL_FACE","BLEND","use","flipFaces","textureUnit","useProgram","activeUniform","$5baeac5adaf115e1$var$warn","texture","$5baeac5adaf115e1$var$setUniform","CW","deleteProgram","arrayLen","valueLen","$5baeac5adaf115e1$var$flatten","setValue","get","slice","$5baeac5adaf115e1$var$arraysEqual","$5baeac5adaf115e1$var$setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","$5baeac5adaf115e1$var$warnCount","message","$f18166a0e0295852$export$2060d2db72cce88f","$5195651babd91a92$export$83f4edd572c84121","$f18166a0e0295852$export$adaa4cf7ef1b65be","$f18166a0e0295852$export$d73ee8ef04f5226a","$f18166a0e0295852$export$bb628a54ab399bc9","$f18166a0e0295852$export$dcdf75081b88279d","fromMatrix4","$f18166a0e0295852$export$2ff2bbe382249af7","fromBasis","vec3a","vec3b","vec3c","$f18166a0e0295852$export$6897c284b6f9f4dc","getNormalMatrix","$f18166a0e0295852$export$966b25ab6dc1b1f9","$81280ac60efc3984$var$ID","$81280ac60efc3984$export$e176487c05830cc5","geometry","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","viewMatrix","projectionMatrix","cameraPosition","worldPosition","$3fe3a0560092e414$export$e16d8520af44a096","$3fe3a0560092e414$export$4e2d2ead65e5f7e3","$3fe3a0560092e414$export$dcdf75081b88279d","$3fe3a0560092e414$export$f24224f1c91d8156","$3fe3a0560092e414$export$bb646b20bb93d339","$fa4ed4f88e886272$export$ac4bca90992eed1","$3fe3a0560092e414$export$adaa4cf7ef1b65be","$3fe3a0560092e414$export$ab44e1323ffc8376","$3fe3a0560092e414$export$5ffbd13800309d59","$3fe3a0560092e414$export$3a89f8d6f6bf6c9f","$c34c9fefb8e97149$var$tmp","$c34c9fefb8e97149$export$79f3ee03e63e7073","points","$c34c9fefb8e97149$var$defaultVertex","$c34c9fefb8e97149$var$defaultFragment","prev","next","side","uv","ind","updateGeometry","uResolution","resolution","uDPR","uThickness","thickness","uColor","uMiter","miter","resize","p","$113d6dca106def5a$export$2e2bcd8739ae039","Renderer","body","appendChild","clearColor","Transform","window","innerWidth","innerHeight","line","polyline","random","addEventListener","spring","friction","mouseVelocity","Vec3","mouseOffset","Polyline","Color","mouse","updateMouse","e","changedTouches","pageX","pageY","tmp","requestAnimationFrame","module","$f66b21bc935e3ee7$exports","URL","resolve","import","meta","url","toString","$75ea386fd376ef83$exports","$e12c5b4180c8a207$exports","$cca7efaac228e066$exports","$7aed54579b2d588c$export$2e2bcd8739ae039","imageOne","imageTwo","imageThree","imageFour","log","projects","images","stage","$388b617130f03bd4$export$2e2bcd8739ae039","init","load","addListeners","simpleSign","getElementById","innerHTML","event","Stage","active","responsive","matchMedia","matches","navigator","userAgent","args","apply","onload","GUIView"],"version":3,"file":"index.b5c2c111.js.map"}