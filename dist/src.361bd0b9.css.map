{"version":3,"sources":["style/_layout.scss","style/_ui.scss","style/_responsive.scss","../node_modules/bourbon/core/bourbon/library/_hide-visually.scss"],"names":[],"mappings":"AAKQ,+EAAA,CCAR,eACC,iBAAA,CACA,OAAA,CACA,qBAAA,CACA,iBAAA,CACA,aAAA,CACA,UAAA,CACA,WAAA,CAGA,oBAAA,CAAA,mBAAA,CAAA,iCAAA,CACA,2BAAA,CACA,iBAAA,CACA,wBAKA,mCAFC,kBAED,iBAEC,eAIF,SACC,YAAA,CACA,sBAAA,CACA,mBAEA,aACC,oBAAA,CACA,WAKF,QACC,iBAAA,CACA,QCrCC,yBDmCF,QEUI,QAAA,CACA,0BAAA,CACA,qBAAA,CACA,UAAA,CACA,eAAA,CACA,SAAA,CACA,iBAAA,CACA,kBAAA,CACA,WDlDF,yBDgCF,QEUI,QAAA,CACA,0BAAA,CACA,qBAAA,CACA,UAAA,CACA,eAAA,CACA,SAAA,CACA,iBAAA,CACA,kBAAA,CACA,WH/CJ,OACC,UAAA,CACA,WAAA,CACA,aAAA,CACA,UAOD,UACG,qBAfC,CAgBD,QAAA,CACA,SAAA,CACA,eAAA,CACA,iCArBU,CAsBZ,UAnBa,CAoBZ,mCAIF,WACC,YAAA,CACA,sBAAA,CACA,oBAID,OAEC,WAAA,CAEA,YAAA,CAEA,0BAAA,CACA,eAAA,CACA,cAAA,CACA,4BAAA,CACE,4BAAA,CACA,gCAAA,CACA,gCAAA,CACA,wBAAA,CACA,yBAIH,qBAjBC,gBAuBD,aACC,qBAAA,CACA","file":"src.361bd0b9.css","sourceRoot":"../src","sourcesContent":["//Basic body pluss call ui \n@import'_ui';\n//fonts and main colors  must be type here \n\n// @import url('https://fonts.googleapis.com/css?family=Nanum+Gothic:400,700,800&display=swap');\n@import url('https://fonts.googleapis.com/css?family=Inconsolata&display=swap');\n// $custom-font:'Nanum Gothic'; \n$custom-font:'Inconsolata', monospace;\n//variables to complete\n$bg:white;\n$tnormalcolor:black;\n\ncanvas{\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: block;\n\tz-index: 0;\n}\n\n\n\n//base  for all the site \n\nhtml, body{\n  \tbackground-color: $bg;\n  \tmargin: 0px;\n  \tpadding: 0px;\n  \toverflow: hidden;\n  \tfont-family: $custom-font;\n\tcolor:$tnormalcolor;\n\t\t-webkit-font-smoothing:antialiased;\n\n}\n\n.container{\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-intems: center;\n\n}\n\nbutton{\n\tbackground: white;\n\twidth: 150px;\n\tborder-color:#303030;\n\tpadding: 10px;\n\t@include border-width(0.1em 0.1em 0.1em 0.1em);\n\tborder-style:outset;\n\tfont-weight: bold;\n\tfont-size: 15px;\n\t-ms-transform: rotate(-90deg); /* IE 9 */\n\t  -ms-transform-origin: 20% 40%; /* IE 9 */\n\t  -webkit-transform: rotate(-90deg); /* Safari 3-8 */\n\t  -webkit-transform-origin: 20% 40%; /* Safari 3-8 */\n\t  transform: rotate(-90deg);\n\t  transform-origin: 20% 40%;\n}\n\n\nbutton:active{\n\tbackground: white;\n}\n\n\n\nbutton:hover{\n\tbackground-color: black;\n\tcolor:white;\n}\n","// here goes interface buttons and canvas plus  positions\n@import '_responsive';\n\n\n\n.container > div{\n\tposition: absolute;\n\ttop:40%;\n\tbackground-color: white;\n\ttext-align: center;\n\topacity: 0.9555;\n\tcolor: black;\n\twidth: 600px;\n\tborder-color:#303030;\n\t@include border-width(0.25em 0.2em 1em 1.5em);\n\tborder-style:outset;\n\ttransform-style: preserve-3d;\n\tperspective: 250px;\n\tperspective-origin: right;\n\t// z-index: 400;\n\th1{\n\t\tpadding-left: 23px;\n\t}\n\tp{\n\t\tpadding-left: 23px;\n\t\tfont-size: 16px;\n\t}\n}\n\n#contact{\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\timg{\n\t\talign-content: center;\n\t\twidth: 35px;\n\n\t}\t\n}\n\n#latest{\n\tposition:absolute;\n\ttop: 55%;\n\t@include  respondTo(phones){\n\t\t @include hide-visually;\n\t}\n\n\n\t@include respondTo(tablet){\n\t\t @include hide-visually;\n\t}\n}\n\n\n","$mobile: 767px;\n$tablet: 992px;\n$desktop: 1200px;\n\n@mixin respondTo($media){\n\t@if $media == phones{\n\t\t@media(max-width: $mobile){@content;}\n\t}\n\t@else if $media == tablet{\n\t\t@media(max-width: $tablet){@content;}\n\t}\n\t@else if $media == desktop{\n\t\t@media(max-width: $tablet){@content;}\n\t}\n}","@charset \"UTF-8\";\n\n/// Hides an element visually while still allowing the content to be accessible\n/// to assistive technology, e.g. screen readers. Passing `unhide` will reverse\n/// the affects of the hiding, which is handy for showing the element on focus,\n/// for example.\n///\n/// @link https://goo.gl/Vf1TGn\n///\n/// @argument {string} $toggle [hide]\n///   Accepts `hide` or `unhide`. `unhide` reverses the affects of `hide`.\n///\n/// @example scss\n///   .element {\n///     @include hide-visually;\n///\n///     &:active,\n///     &:focus {\n///       @include hide-visually(\"unhide\");\n///     }\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border: 0;\n///     clip: rect(1px, 1px, 1px, 1px);\n///     clip-path: inset(100%);\n///     height: 1px;\n///     overflow: hidden;\n///     padding: 0;\n///     position: absolute;\n///     width: 1px;\n///   }\n///\n///   .hide-visually:active,\n///   .hide-visually:focus {\n///     clip: auto;\n///     clip-path: none;\n///     height: auto;\n///     overflow: visible;\n///     position: static;\n///     width: auto;\n///   }\n///\n/// @since 5.0.0\n\n@mixin hide-visually($toggle: \"hide\") {\n  @if not index(\"hide\" \"unhide\", $toggle) {\n    @error \"`#{$toggle}` is not a valid value for the `$toggle` argument in \" +\n           \"the `hide-visually` mixin. Must be either `hide` or `unhide`.\";\n  } @else if $toggle == \"hide\" {\n    border: 0;\n    clip: rect(1px, 1px, 1px, 1px);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  } @else if $toggle == \"unhide\" {\n    clip: auto;\n    clip-path: none;\n    height: auto;\n    overflow: visible;\n    position: static;\n    white-space: inherit;\n    width: auto;\n  }\n}\n"]}