{"version":3,"sources":["../node_modules/ogl/src/math/functions/Vec3Func.js","../node_modules/ogl/src/math/Vec3.js","../node_modules/ogl/src/core/Geometry.js","../node_modules/ogl/src/core/Program.js","../node_modules/ogl/src/core/Renderer.js","../node_modules/ogl/src/math/functions/Vec4Func.js","../node_modules/ogl/src/math/functions/QuatFunc.js","../node_modules/ogl/src/math/Quat.js","../node_modules/ogl/src/math/functions/Mat4Func.js","../node_modules/ogl/src/math/Mat4.js","../node_modules/ogl/src/math/functions/EulerFunc.js","../node_modules/ogl/src/math/Euler.js","../node_modules/ogl/src/core/Transform.js","../node_modules/ogl/src/core/Camera.js","../node_modules/ogl/src/math/functions/Mat3Func.js","../node_modules/ogl/src/math/Mat3.js","../node_modules/ogl/src/core/Mesh.js","../node_modules/ogl/src/core/Texture.js","../node_modules/ogl/src/core/RenderTarget.js","../node_modules/ogl/src/math/functions/ColorFunc.js","../node_modules/ogl/src/math/Color.js","../node_modules/ogl/src/math/functions/Vec2Func.js","../node_modules/ogl/src/math/Vec2.js","../node_modules/ogl/src/math/Vec4.js","../node_modules/ogl/src/extras/Plane.js","../node_modules/ogl/src/extras/Box.js","../node_modules/ogl/src/extras/Sphere.js","../node_modules/ogl/src/extras/Cylinder.js","../node_modules/ogl/src/extras/Triangle.js","../node_modules/ogl/src/extras/Torus.js","../node_modules/ogl/src/extras/Orbit.js","../node_modules/ogl/src/extras/Raycast.js","../node_modules/ogl/src/extras/Curve.js","../node_modules/ogl/src/extras/Post.js","../node_modules/ogl/src/extras/Animation.js","../node_modules/ogl/src/extras/Skin.js","../node_modules/ogl/src/extras/Text.js","../node_modules/ogl/src/extras/NormalProgram.js","../node_modules/ogl/src/extras/Flowmap.js","../node_modules/ogl/src/extras/GPGPU.js","../node_modules/ogl/src/extras/Polyline.js","../node_modules/ogl/src/extras/Shadow.js","../node_modules/ogl/src/extras/KTXTexture.js","../node_modules/ogl/src/extras/TextureLoader.js","../node_modules/ogl/src/extras/GLTFSkin.js","../node_modules/ogl/src/extras/BasisManager.js","../node_modules/ogl/src/index.mjs","js/follow.js","../node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js","../node_modules/core-js/library/modules/_global.js","../node_modules/core-js/library/modules/_core.js","../node_modules/core-js/library/modules/_a-function.js","../node_modules/core-js/library/modules/_ctx.js","../node_modules/core-js/library/modules/_is-object.js","../node_modules/core-js/library/modules/_an-object.js","../node_modules/core-js/library/modules/_fails.js","../node_modules/core-js/library/modules/_descriptors.js","../node_modules/core-js/library/modules/_dom-create.js","../node_modules/core-js/library/modules/_ie8-dom-define.js","../node_modules/core-js/library/modules/_to-primitive.js","../node_modules/core-js/library/modules/_object-dp.js","../node_modules/core-js/library/modules/_property-desc.js","../node_modules/core-js/library/modules/_hide.js","../node_modules/core-js/library/modules/_has.js","../node_modules/core-js/library/modules/_export.js","../node_modules/core-js/library/modules/es6.object.define-property.js","../node_modules/core-js/library/fn/object/define-property.js","../node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","../node_modules/@babel/runtime-corejs2/helpers/createClass.js","js/interface/Nav.js","js/interface/Contact.js","js/pages/Home.js","js/pages/Portafolio.js","js/pages/Experiments.js","js/app.js","main.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["EPSILON","length","a","x","y","z","Math","sqrt","copy","out","set","add","b","subtract","multiply","divide","scale","distance","squaredDistance","squaredLength","negate","inverse","normalize","len","dot","cross","ax","ay","az","bx","by","bz","lerp","t","transformMat4","m","w","scaleRotateMat4","transformMat3","transformQuat","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","PI","acos","exactEquals","Vec3","Array","constructor","v","Vec3Func","va","vb","sub","squaredLen","equals","applyMatrix3","mat3","applyMatrix4","mat4","scaleRotateMatrix4","applyQuaternion","clone","fromArray","o","toArray","transformDirection","tempVec3","ID","ATTR_ID","isBoundsWarned","Geometry","gl","attributes","canvas","console","error","id","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","key","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","target","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","usage","STATIC_DRAW","buffer","updateAttribute","isInstanced","warn","min","index","max","isNewBuffer","createBuffer","boundBuffer","bindBuffer","bufferData","bufferSubData","setIndex","value","setDrawRange","setInstancedCount","createVAO","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","name","numLoc","i","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","draw","mode","TRIANGLES","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","getPosition","position","computeBoundingBox","array","BYTES_PER_ELEMENT","bounds","center","radius","Infinity","l","computeBoundingSphere","maxRadiusSq","remove","deleteVertexArray","deleteBuffer","arrayCacheF32","Program","vertex","fragment","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","blendFunc","blendEquation","src","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","programActive","currentProgram","useProgram","activeUniform","undefined","texture","update","setUniform","textureUnits","push","CW","deleteProgram","flatten","setValue","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","arrayLen","valueLen","warnCount","message","Renderer","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","extensions","getExtension","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","style","setViewport","setScissor","scissor","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","identity","setAxisAngle","axis","rad","s","sin","cos","bw","rotateX","rotateY","rotateZ","slerp","omega","cosom","sinom","scale0","scale1","invert","a0","a1","a2","a3","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","vec4","Quat","onChange","QuatFunc","qA","qB","fromMatrix3","matrix3","fromAxisAngle","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","b0","b1","b2","b3","translate","rotate","hypot","c","b12","b20","b21","b22","abs","mat","getScaling","getMaxScaleOnAxis","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat","yx","zx","zy","perspective","fovy","aspect","near","far","f","tan","nf","ortho","left","right","bottom","top","lr","bt","targetTo","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","multiplyScalar","Mat4","Mat4Func","ma","mb","fromPerspective","fov","fromOrthogonal","fromQuaternion","setPosition","compose","pos","lookAt","fromRotationMatrix","asin","atan2","tmpMat4","Euler","reorder","EulerFunc","Transform","parent","children","matrix","matrixAutoUpdate","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","indexOf","splice","force","updateMatrix","worldMatrixNeedsUpdate","callback","decompose","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","project","unproject","frustum","constant","invLen","geometry","frustumIntersectsSphere","normal","plane","fromMat4","normalFromMat4","projection","Mat3","Mat3Func","fromMatrix4","fromBasis","vec3a","vec3b","vec3c","getNormalMatrix","Mesh","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","cameraPosition","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","generateMipmap","onUpdate","RenderTarget","depthTexture","createFramebuffer","textures","framebufferTexture2D","COLOR_ATTACHMENT0","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","NAMES","black","white","red","green","blue","fuchsia","cyan","yellow","orange","hexToRGB","hex","rgb","exec","parseInt","numberToRGB","num","parseColor","arguments","toLowerCase","Color","isArray","ColorFunc","r","g","transformMat2","transformMat2d","Vec2","Vec2Func","Vec4","Vec4Func","Plane","widthSegments","heightSegments","wSegs","hSegs","numIndices","uv","Uint32Array","buildPlane","u","uDir","vDir","ii","io","segW","segH","iy","ix","d","Box","depthSegments","dSegs","Sphere","ceil","phiStart","phiLength","thetaStart","thetaLength","pStart","pLength","tStart","tLength","iv","te","grid","n","vRow","Cylinder","radiusTop","radiusBottom","radialSegments","openEnded","rSegs","numCaps","indexArray","addHeight","addCap","slope","indexRow","theta","sinTheta","cosTheta","isTop","sign","centerIndex","Triangle","Torus","tube","tubularSegments","arc","vertices","normals","uvs","indices","idx","STATE","NONE","ROTATE","DOLLY","PAN","DOLLY_PAN","tempVec2a","tempVec2b","Orbit","object","element","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","zoomStyle","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","sphericalTarget","spherical","panDelta","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","mouseButtons","ORBIT","ZOOM","getZoomScale","pow","panLeft","panUp","pan","deltaX","deltaY","el","body","targetDistance","clientHeight","dolly","dollyScale","handleMoveRotate","handleMouseMoveDolly","e","clientX","clientY","handleMovePan","handleTouchStartDollyPan","dx","touches","pageX","dy","pageY","handleTouchMoveDollyPan","onMouseDown","button","window","addEventListener","onMouseMove","onMouseUp","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","onTouchMove","onTouchEnd","onContextMenu","addHandlers","passive","tempVec2c","tempVec3c","tempVec3d","tempVec3e","tempVec3f","tempVec3g","tempVec3h","tempVec3i","tempVec3j","tempVec3k","Raycast","origin","direction","castMouse","mouse","intersectBounds","meshes","output","invWorldMat4","hits","localMaxDistance","localDistance","raycast","intersectSphere","intersectBox","hit","localPoint","point","intersectMeshes","includeUV","includeNormal","closestFaceNormal","faceNormal","barycoord","uvA","uvB","uvC","closestA","closestB","closestC","end","ai","bi","ci","intersectTriangle","localFaceNormal","localNormal","getBarycoord","sphere","ray","tca","d2","radius2","thc","t0","t1","box","tmin","tmax","tYmin","tYmax","tZmin","tZmax","invdirx","invdiry","invdirz","backfaceCulling","edge1","edge2","diff","DdN","DdQxE2","DdE1xQ","QdN","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","denom","invDenom","CATMULLROM","CUBICBEZIER","QUADRATICBEZIER","_a0","_a1","_a2","_a3","getCtrlPoint","points","last","getQuadraticBezierPoint","p0","c0","p1","ret","getCubicBezierPoint","c1","Curve","divisions","_getQuadraticBezierPoints","p","_getCubicBezierPoints","_getCatmullRomPoints","pop","getPoints","Post","targetOnly","options","passes","fbo","read","write","swap","resize","addPass","defaultVertex","defaultFragment","textureUniform","pass","floor","enabledPasses","filter","prevPos","prevRot","prevScl","nextPos","nextRot","nextScl","Animation","objects","elapsed","weight","duration","frames","totalWeight","isSet","floorFrame","blend","prevKey","nextKey","Skin","rig","createBones","createBoneTexture","animations","boneTexture","boneTextureSize","root","bones","bone","bindPose","bindInverse","log","LN2","boneMatrices","RGBA32F","addAnimation","animation","total","Text","font","text","align","letterSpacing","lineHeight","wordSpacing","wordBreak","_this","glyphs","buffers","fontHeight","baseline","newline","whitespace","parseFont","createGeometry","chars","char","common","base","replace","numChars","layout","cursor","wordCursor","wordWidth","line","newLine","maxTimes","test","glyph","prevGlyph","kern","getKernPairOffset","advance","xadvance","numGlyphs","populateBuffers","texW","scaleW","texH","scaleH","lineIndex","xoffset","yoffset","h","uw","vh","numLines","map","id1","id2","kernings","first","second","amount","NormalProgram","Flowmap","falloff","dissipation","mask","createFBOs","velocity","initProgram","HALF_FLOAT","HALF_FLOAT_OES","RGBA16F","tMap","uFalloff","uAlpha","uDissipation","uAspect","uMouse","uVelocity","GPGPU","initialData","dataLength","coords","floatArray","tmp","Polyline","prev","next","side","ind","updateGeometry","uResolution","resolution","uDPR","uThickness","thickness","uColor","uMiter","miter","Shadow","light","depthProgram","castMeshes","receive","cast","uniformProjection","uniformView","uniformTexture","colorProgram","isForceVisibility","KTXTexture","parseBuffer","ktx","KhronosTextureContainer","mipmaps","glInternalFormat","numberOfMipmapLevels","idCheck","head","DataView","littleEndian","getUint32","glType","numberOfFaces","bytesOfKeyValueData","levelSize","Int32Array","face","cache","supportedExtensions","TextureLoader","load","support","getSupportedExtensions","ext","prop","includes","cacheID","loaded","loadKTX","loadImage","pvrtc","s3tc","etc1","astc","bc7","detectWebP","fetch","then","res","arrayBuffer","decodeImage","imgBmp","powerOfTwo","close","clearCache","toDataURL","log2","Promise","resolve","isChrome","navigator","userAgent","createImageBitmap","blob","imageOrientation","img","Image","crossOrigin","onload","GLTFSkin","skeleton","joints","updateUniforms","_worldMatrix","supportedFormat","BasisManager","workerSrc","getSupportedFormat","onMessage","queue","initWorker","worker","Worker","onmessage","textureResolve","delete","isBasis","parseTexture","postMessage","promise","innerWidth","innerHeight","polyline","random","updateMouse","changedTouches","requestAnimationFrame","mouseOffset","spring","mouseVelocity","friction","appendChild","clearColor","_classCallCheck","instance","Constructor","TypeError","module","exports","__esModule","require","_Object$defineProperty","_defineProperties","props","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","prototype","Navbar","template","Contact","Home","Portafolio","Experiments","GUIView","addListeners","simpleSign","getElementById","innerHTML","event","links","matchMedia","matches","args","apply","app","init","bundleURL","getBundleURLCached","getBundleURL","Error","err","stack","getBaseURL","url","bundle","updateLink","link","newLink","cloneNode","href","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","querySelectorAll","OVERLAY_ID","OldModule","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","overlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","some","cb"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9DA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;;ACLAF,MAAM,CAACC,OAAP,GAAiBE,OAAO,CAAC,2CAAD,CAAxB;;ACAA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,uDAAD,CAApC;;AAEA,SAASE,iBAAT,CAA2BhnC,MAA3B,EAAmCinC,KAAnC,EAA0C;AACxC,OAAK,IAAI1kC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0kC,KAAK,CAAChuC,MAA1B,EAAkCsJ,CAAC,EAAnC,EAAuC;AACrC,QAAI2kC,UAAU,GAAGD,KAAK,CAAC1kC,CAAD,CAAtB;AACA2kC,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AACAD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AACA,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;;AAE3BN,IAAAA,sBAAsB,CAAC/mC,MAAD,EAASknC,UAAU,CAA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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec3Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data - although needs position data for bounds calculation\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n        attr.usage = attr.usage || this.gl.STATIC_DRAW;\n\n        if (!attr.buffer) {\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        const isNewBuffer = !attr.buffer;\n        if (isNewBuffer) attr.buffer = this.gl.createBuffer();\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        if (isNewBuffer) {\n            this.gl.bufferData(attr.target, attr.data, attr.usage);\n        } else {\n            this.gl.bufferSubData(attr.target, 0, attr.data);\n        }\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n        this.getExtension('WEBGL_compressed_texture_astc');\n        this.getExtension('EXT_texture_compression_bptc');\n        this.getExtension('WEBGL_compressed_texture_s3tc');\n        this.getExtension('WEBGL_compressed_texture_etc1');\n        this.getExtension('WEBGL_compressed_texture_pvrtc');\n        this.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","// TODO: test stencil and depth\nimport { Texture } from './Texture.js';\n\nexport class RenderTarget {\n    constructor(\n        gl,\n        {\n            width = gl.canvas.width,\n            height = gl.canvas.height,\n            target = gl.FRAMEBUFFER,\n            color = 1, // number of color attachments\n            depth = true,\n            stencil = false,\n            depthTexture = false, // note - stencil breaks\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = minFilter,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            unpackAlignment,\n            premultiplyAlpha,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.buffer = this.gl.createFramebuffer();\n        this.target = target;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        this.textures = [];\n        const drawBuffers = [];\n\n        // create and attach required num of color textures\n        for (let i = 0; i < color; i++) {\n            this.textures.push(\n                new Texture(gl, {\n                    width,\n                    height,\n                    wrapS,\n                    wrapT,\n                    minFilter,\n                    magFilter,\n                    type,\n                    format,\n                    internalFormat,\n                    unpackAlignment,\n                    premultiplyAlpha,\n                    flipY: false,\n                    generateMipmaps: false,\n                })\n            );\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        // For multi-render targets shader access\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n        // alias for majority of use cases\n        this.texture = this.textures[0];\n\n        // note depth textures break stencil - so can't use together\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n            this.depthTexture = new Texture(gl, {\n                width,\n                height,\n                minFilter: this.gl.NEAREST,\n                magFilter: this.gl.NEAREST,\n                format: this.gl.DEPTH_COMPONENT,\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n                type: this.gl.UNSIGNED_INT,\n            });\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            // Render buffers\n            if (depth && !stencil) {\n                this.depthBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n            }\n\n            if (stencil && !depth) {\n                this.stencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n            }\n\n            if (depth && stencil) {\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n\n    setSize(width, height) {\n        if (this.width === width && this.height === height) return;\n\n        this.width = width;\n        this.height = height;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        for (let i = 0; i < this.textures.length; i++) {\n            this.textures[i].width = width;\n            this.textures[i].height = height;\n            this.textures[i].needsUpdate = true;\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n        }\n\n        if (this.depthTexture) {\n            this.depthTexture.width = width;\n            this.depthTexture.height = height;\n            this.depthTexture.needsUpdate = true;\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            if (this.depthBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n            }\n\n            if (this.stencilBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n            }\n\n            if (this.depthStencilBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n}\n","const NAMES = {\n    black: '#000000',\n    white: '#ffffff',\n    red: '#ff0000',\n    green: '#00ff00',\n    blue: '#0000ff',\n    fuchsia: '#ff00ff',\n    cyan: '#00ffff',\n    yellow: '#ffff00',\n    orange: '#ff8000',\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\n}\n\nexport function parseColor(color) {\n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n\n    // Hex\n    if (color[0] === '#') return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","import * as Vec4Func from './functions/Vec4Func.js';\n\nexport class Vec4 extends Array {\n    constructor(x = 0, y = x, z = x, w = x) {\n        super(x, y, z, w);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set w(v) {\n        this[3] = v;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        Vec4Func.set(this, x, y, z, w);\n        return this;\n    }\n\n    copy(v) {\n        Vec4Func.copy(this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec4Func.normalize(this, this);\n        return this;\n    }\n\n    multiply(v) {\n        Vec4Func.scale(this, this, v);\n        return this;\n    }\n\n    dot(v) {\n        return Vec4Func.dot(this, v);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = numIndices > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Plane } from './Plane.js';\n\nexport class Box extends Geometry {\n    constructor(gl, { width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const dSegs = depthSegments;\n\n        const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n        const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n\n        // left, right\n        Plane.buildPlane(position, normal, uv, index, depth, height, width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, depth, height, -width, dSegs, hSegs, 2, 1, 0, 1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        // top, bottom\n        Plane.buildPlane(position, normal, uv, index, width, depth, height, dSegs, wSegs, 0, 2, 1, 1, 1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, depth, -height, dSegs, wSegs, 0, 2, 1, 1, -1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        // front, back\n        Plane.buildPlane(position, normal, uv, index, width, height, -depth, wSegs, hSegs, 0, 1, 2, -1, -1, i, ii);\n        i += (wSegs + 1) * (hSegs + 1);\n        ii += wSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, 0, 1, 2, 1, -1, i, ii);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(\n        gl,\n        {\n            radius = 0.5,\n            widthSegments = 16,\n            heightSegments = Math.ceil(widthSegments * 0.5),\n            phiStart = 0,\n            phiLength = Math.PI * 2,\n            thetaStart = 0,\n            thetaLength = Math.PI,\n            attributes = {},\n        } = {}\n    ) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3] = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3] = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2] = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3] = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3] = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Cylinder extends Geometry {\n    constructor(\n        gl,\n        {\n            radiusTop = 0.5,\n            radiusBottom = 0.5,\n            height = 1,\n            radialSegments = 8,\n            heightSegments = 1,\n            openEnded = false,\n            thetaStart = 0,\n            thetaLength = Math.PI * 2,\n            attributes = {},\n        } = {}\n    ) {\n        const rSegs = radialSegments;\n        const hSegs = heightSegments;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const numCaps = openEnded ? 0 : radiusBottom && radiusTop ? 2 : 1;\n        const num = (rSegs + 1) * (hSegs + 1 + numCaps) + numCaps;\n        const numIndices = rSegs * hSegs * 6 + numCaps * rSegs * 3;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n        const indexArray = [];\n\n        addHeight();\n        if (!openEnded) {\n            if (radiusTop) addCap(true);\n            if (radiusBottom) addCap(false);\n        }\n\n        function addHeight() {\n            let x, y;\n            const n = new Vec3();\n            const slope = (radiusBottom - radiusTop) / height;\n\n            for (y = 0; y <= hSegs; y++) {\n                const indexRow = [];\n                const v = y / hSegs;\n\n                const r = v * (radiusBottom - radiusTop) + radiusTop;\n                for (x = 0; x <= rSegs; x++) {\n                    const u = x / rSegs;\n                    const theta = u * tLength + tStart;\n                    const sinTheta = Math.sin(theta);\n                    const cosTheta = Math.cos(theta);\n\n                    position.set([r * sinTheta, (0.5 - v) * height, r * cosTheta], i * 3);\n                    n.set(sinTheta, slope, cosTheta).normalize();\n                    normal.set([n.x, n.y, n.z], i * 3);\n                    uv.set([u, 1 - v], i * 2);\n                    indexRow.push(i++);\n                }\n                indexArray.push(indexRow);\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                for (y = 0; y < hSegs; y++) {\n                    const a = indexArray[y][x];\n                    const b = indexArray[y + 1][x];\n                    const c = indexArray[y + 1][x + 1];\n                    const d = indexArray[y][x + 1];\n\n                    index.set([a, b, d, b, c, d], ii * 3);\n                    ii += 2;\n                }\n            }\n        }\n\n        function addCap(isTop) {\n            let x;\n            const r = isTop === true ? radiusTop : radiusBottom;\n            const sign = isTop === true ? 1 : -1;\n\n            const centerIndex = i;\n            position.set([0, 0.5 * height * sign, 0], i * 3);\n            normal.set([0, sign, 0], i * 3);\n            uv.set([0.5, 0.5], i * 2);\n            i++;\n\n            for (x = 0; x <= rSegs; x++) {\n                const u = x / rSegs;\n                const theta = u * tLength + tStart;\n                const cosTheta = Math.cos(theta);\n                const sinTheta = Math.sin(theta);\n\n                position.set([r * sinTheta, 0.5 * height * sign, r * cosTheta], i * 3);\n                normal.set([0, sign, 0], i * 3);\n                uv.set([cosTheta * 0.5 + 0.5, sinTheta * 0.5 * sign + 0.5], i * 2);\n                i++;\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                const j = centerIndex + x + 1;\n                if (isTop) {\n                    index.set([j, j + 1, centerIndex], ii * 3);\n                } else {\n                    index.set([j + 1, j, centerIndex], ii * 3);\n                }\n                ii++;\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Triangle extends Geometry {\n    constructor(gl, { attributes = {} } = {}) {\n        Object.assign(attributes, {\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// https://github.com/mrdoob/three.js/blob/master/src/geometries/TorusGeometry.js\n\nimport { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Torus extends Geometry {\n    constructor(gl, { radius = 0.5, tube = 0.2, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2, attributes = {} } = {}) {\n        const num = (radialSegments + 1) * (tubularSegments + 1);\n        const numIndices = radialSegments * tubularSegments * 6;\n\n        const vertices = new Float32Array(num * 3);\n        const normals = new Float32Array(num * 3);\n        const uvs = new Float32Array(num * 2);\n        const indices = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        const center = new Vec3();\n        const vertex = new Vec3();\n        const normal = new Vec3();\n\n        // generate vertices, normals and uvs\n        let idx = 0;\n        for (let j = 0; j <= radialSegments; j++) {\n            for (let i = 0; i <= tubularSegments; i++, idx++) {\n                const u = (i / tubularSegments) * arc;\n                const v = (j / radialSegments) * Math.PI * 2;\n\n                // vertex\n                vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n                vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n                vertex.z = tube * Math.sin(v);\n\n                vertices.set([vertex.x, vertex.y, vertex.z], idx * 3);\n\n                // normal\n                center.x = radius * Math.cos(u);\n                center.y = radius * Math.sin(u);\n                normal.sub(vertex, center).normalize();\n\n                normals.set([normal.x, normal.y, normal.z], idx * 3);\n\n                // uv\n                uvs.set([i / tubularSegments, j / radialSegments], idx * 2);\n            }\n        }\n\n        // generate indices\n        idx = 0;\n        for (let j = 1; j <= radialSegments; j++) {\n            for (let i = 1; i <= tubularSegments; i++, idx++) {\n                // indices\n                const a = (tubularSegments + 1) * j + i - 1;\n                const b = (tubularSegments + 1) * (j - 1) + i - 1;\n                const c = (tubularSegments + 1) * (j - 1) + i;\n                const d = (tubularSegments + 1) * j + i;\n\n                // faces\n                indices.set([a, b, d, b, c, d], idx * 6);\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: vertices },\n            normal: { size: 3, data: normals },\n            uv: { size: 2, data: uvs },\n            index: { data: indices },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        zoomStyle = 'dolly',\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n    this.zoomStyle = zoomStyle;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    const dolly = (dollyScale) => {\n        if (this.zoomStyle === 'dolly') sphericalDelta.radius /= dollyScale;\n        else {\n            object.fov /= dollyScale;\n            if (object.type === 'orthographic') object.orthographic();\n            else object.perspective();\n        }\n    };\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","// TODO: barycentric code shouldn't be here, but where?\n// TODO: SphereCast?\n\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\nconst tempVec2c = new Vec2();\n\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\nconst tempVec3c = new Vec3();\nconst tempVec3d = new Vec3();\nconst tempVec3e = new Vec3();\nconst tempVec3f = new Vec3();\nconst tempVec3g = new Vec3();\nconst tempVec3h = new Vec3();\nconst tempVec3i = new Vec3();\nconst tempVec3j = new Vec3();\nconst tempVec3k = new Vec3();\n\nconst tempMat4 = new Mat4();\n\nexport class Raycast {\n    constructor() {\n        this.origin = new Vec3();\n        this.direction = new Vec3();\n    }\n\n    // Set ray from mouse unprojection\n    castMouse(camera, mouse = [0, 0]) {\n        if (camera.type === 'orthographic') {\n            // Set origin\n            // Since camera is orthographic, origin is not the camera position\n            const { left, right, bottom, top, zoom } = camera;\n            const x = left / zoom + ((right - left) / zoom) * (mouse[0] * 0.5 + 0.5);\n            const y = bottom / zoom + ((top - bottom) / zoom) * (mouse[1] * 0.5 + 0.5);\n            this.origin.set(x, y, 0);\n            this.origin.applyMatrix4(camera.worldMatrix);\n\n            // Set direction\n            // https://community.khronos.org/t/get-direction-from-transformation-matrix-or-quat/65502/2\n            this.direction.x = -camera.worldMatrix[8];\n            this.direction.y = -camera.worldMatrix[9];\n            this.direction.z = -camera.worldMatrix[10];\n        } else {\n            // Set origin\n            camera.worldMatrix.getTranslation(this.origin);\n\n            // Set direction\n            this.direction.set(mouse[0], mouse[1], 0.5);\n            camera.unproject(this.direction);\n            this.direction.sub(this.origin).normalize();\n        }\n    }\n\n    intersectBounds(meshes, { maxDistance, output = [] } = {}) {\n        if (!Array.isArray(meshes)) meshes = [meshes];\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n\n        const hits = output;\n        hits.length = 0;\n\n        meshes.forEach((mesh) => {\n            // Create bounds\n            if (!mesh.geometry.bounds || mesh.geometry.bounds.radius === Infinity) mesh.geometry.computeBoundingSphere();\n            const bounds = mesh.geometry.bounds;\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            // Break out early if bounds too far away from origin\n            if (maxDistance) {\n                if (origin.distance(bounds.center) - bounds.radius > localMaxDistance) return;\n            }\n\n            let localDistance = 0;\n\n            // Check origin isn't inside bounds before testing intersection\n            if (mesh.geometry.raycast === 'sphere') {\n                if (origin.distance(bounds.center) > bounds.radius) {\n                    localDistance = this.intersectSphere(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            } else {\n                if (\n                    origin.x < bounds.min.x ||\n                    origin.x > bounds.max.x ||\n                    origin.y < bounds.min.y ||\n                    origin.y > bounds.max.y ||\n                    origin.z < bounds.min.z ||\n                    origin.z > bounds.max.z\n                ) {\n                    localDistance = this.intersectBox(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            }\n\n            if (maxDistance && localDistance > localMaxDistance) return;\n\n            // Create object on mesh to avoid generating lots of objects\n            if (!mesh.hit) mesh.hit = { localPoint: new Vec3(), point: new Vec3() };\n\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            hits.push(mesh);\n        });\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectMeshes(meshes, { cullFace = true, maxDistance, includeUV = true, includeNormal = true, output = [] } = {}) {\n        // Test bounds first before testing geometry\n        const hits = this.intersectBounds(meshes, { maxDistance, output });\n        if (!hits.length) return hits;\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n        const a = tempVec3c;\n        const b = tempVec3d;\n        const c = tempVec3e;\n        const closestFaceNormal = tempVec3f;\n        const faceNormal = tempVec3g;\n        const barycoord = tempVec3h;\n        const uvA = tempVec2a;\n        const uvB = tempVec2b;\n        const uvC = tempVec2c;\n\n        for (let i = hits.length - 1; i >= 0; i--) {\n            const mesh = hits[i];\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            let localDistance = 0;\n            let closestA, closestB, closestC;\n\n            const geometry = mesh.geometry;\n            const attributes = geometry.attributes;\n            const index = attributes.index;\n            const position = attributes.position;\n\n            const start = Math.max(0, geometry.drawRange.start);\n            const end = Math.min(index ? index.count : position.count, geometry.drawRange.start + geometry.drawRange.count);\n            const stride = position.stride ? position.stride / position.data.BYTES_PER_ELEMENT : position.size;\n\n            for (let j = start; j < end; j += 3) {\n                // Position attribute indices for each triangle\n                const ai = index ? index.data[j] : j;\n                const bi = index ? index.data[j + 1] : j + 1;\n                const ci = index ? index.data[j + 2] : j + 2;\n\n                a.fromArray(position.data, ai * stride);\n                b.fromArray(position.data, bi * stride);\n                c.fromArray(position.data, ci * stride);\n\n                const distance = this.intersectTriangle(a, b, c, cullFace, origin, direction, faceNormal);\n                if (!distance) continue;\n\n                // Too far away\n                if (maxDistance && distance > localMaxDistance) continue;\n\n                if (!localDistance || distance < localDistance) {\n                    localDistance = distance;\n                    closestA = ai;\n                    closestB = bi;\n                    closestC = ci;\n                    closestFaceNormal.copy(faceNormal);\n                }\n            }\n\n            if (!localDistance) hits.splice(i, 1);\n\n            // Update hit values from bounds-test\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            // Add unique hit objects on mesh to avoid generating lots of objects\n            if (!mesh.hit.faceNormal) {\n                mesh.hit.localFaceNormal = new Vec3();\n                mesh.hit.faceNormal = new Vec3();\n                mesh.hit.uv = new Vec2();\n                mesh.hit.localNormal = new Vec3();\n                mesh.hit.normal = new Vec3();\n            }\n\n            // Add face normal data which is already computed\n            mesh.hit.localFaceNormal.copy(closestFaceNormal);\n            mesh.hit.faceNormal.copy(mesh.hit.localFaceNormal).transformDirection(mesh.worldMatrix);\n\n            // Optional data, opt out to optimise a bit if necessary\n            if (includeUV || includeNormal) {\n                // Calculate barycoords to find uv values at hit point\n                a.fromArray(position.data, closestA * 3);\n                b.fromArray(position.data, closestB * 3);\n                c.fromArray(position.data, closestC * 3);\n                this.getBarycoord(mesh.hit.localPoint, a, b, c, barycoord);\n            }\n\n            if (includeUV && attributes.uv) {\n                uvA.fromArray(attributes.uv.data, closestA * 2);\n                uvB.fromArray(attributes.uv.data, closestB * 2);\n                uvC.fromArray(attributes.uv.data, closestC * 2);\n                mesh.hit.uv.set(\n                    uvA.x * barycoord.x + uvB.x * barycoord.y + uvC.x * barycoord.z,\n                    uvA.y * barycoord.x + uvB.y * barycoord.y + uvC.y * barycoord.z\n                );\n            }\n\n            if (includeNormal && attributes.normal) {\n                a.fromArray(attributes.normal.data, closestA * 3);\n                b.fromArray(attributes.normal.data, closestB * 3);\n                c.fromArray(attributes.normal.data, closestC * 3);\n                mesh.hit.localNormal.set(\n                    a.x * barycoord.x + b.x * barycoord.y + c.x * barycoord.z,\n                    a.y * barycoord.x + b.y * barycoord.y + c.y * barycoord.z,\n                    a.z * barycoord.x + b.z * barycoord.y + c.z * barycoord.z\n                );\n\n                mesh.hit.normal.copy(mesh.hit.localNormal).transformDirection(mesh.worldMatrix);\n            }\n        }\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectSphere(sphere, origin = this.origin, direction = this.direction) {\n        const ray = tempVec3c;\n        ray.sub(sphere.center, origin);\n        const tca = ray.dot(direction);\n        const d2 = ray.dot(ray) - tca * tca;\n        const radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return 0;\n        const thc = Math.sqrt(radius2 - d2);\n        const t0 = tca - thc;\n        const t1 = tca + thc;\n        if (t0 < 0 && t1 < 0) return 0;\n        if (t0 < 0) return t1;\n        return t0;\n    }\n\n    // Ray AABB - Ray Axis aligned bounding box testing\n    intersectBox(box, origin = this.origin, direction = this.direction) {\n        let tmin, tmax, tYmin, tYmax, tZmin, tZmax;\n        const invdirx = 1 / direction.x;\n        const invdiry = 1 / direction.y;\n        const invdirz = 1 / direction.z;\n        const min = box.min;\n        const max = box.max;\n        tmin = ((invdirx >= 0 ? min.x : max.x) - origin.x) * invdirx;\n        tmax = ((invdirx >= 0 ? max.x : min.x) - origin.x) * invdirx;\n        tYmin = ((invdiry >= 0 ? min.y : max.y) - origin.y) * invdiry;\n        tYmax = ((invdiry >= 0 ? max.y : min.y) - origin.y) * invdiry;\n        if (tmin > tYmax || tYmin > tmax) return 0;\n        if (tYmin > tmin) tmin = tYmin;\n        if (tYmax < tmax) tmax = tYmax;\n        tZmin = ((invdirz >= 0 ? min.z : max.z) - origin.z) * invdirz;\n        tZmax = ((invdirz >= 0 ? max.z : min.z) - origin.z) * invdirz;\n        if (tmin > tZmax || tZmin > tmax) return 0;\n        if (tZmin > tmin) tmin = tZmin;\n        if (tZmax < tmax) tmax = tZmax;\n        if (tmax < 0) return 0;\n        return tmin >= 0 ? tmin : tmax;\n    }\n\n    intersectTriangle(a, b, c, backfaceCulling = true, origin = this.origin, direction = this.direction, normal = tempVec3g) {\n        // from https://github.com/mrdoob/three.js/blob/master/src/math/Ray.js\n        // which is from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        const edge1 = tempVec3h;\n        const edge2 = tempVec3i;\n        const diff = tempVec3j;\n        edge1.sub(b, a);\n        edge2.sub(c, a);\n        normal.cross(edge1, edge2);\n        let DdN = direction.dot(normal);\n        if (!DdN) return 0;\n        let sign;\n        if (DdN > 0) {\n            if (backfaceCulling) return 0;\n            sign = 1;\n        } else {\n            sign = -1;\n            DdN = -DdN;\n        }\n        diff.sub(origin, a);\n        let DdQxE2 = sign * direction.dot(edge2.cross(diff, edge2));\n        if (DdQxE2 < 0) return 0;\n        let DdE1xQ = sign * direction.dot(edge1.cross(diff));\n        if (DdE1xQ < 0) return 0;\n        if (DdQxE2 + DdE1xQ > DdN) return 0;\n        let QdN = -sign * diff.dot(normal);\n        if (QdN < 0) return 0;\n        return QdN / DdN;\n    }\n\n    getBarycoord(point, a, b, c, target = tempVec3h) {\n        // From https://github.com/mrdoob/three.js/blob/master/src/math/Triangle.js\n        // static/instance method to calculate barycentric coordinates\n        // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n        const v0 = tempVec3i;\n        const v1 = tempVec3j;\n        const v2 = tempVec3k;\n        v0.sub(c, a);\n        v1.sub(b, a);\n        v2.sub(point, a);\n        const dot00 = v0.dot(v0);\n        const dot01 = v0.dot(v1);\n        const dot02 = v0.dot(v2);\n        const dot11 = v1.dot(v1);\n        const dot12 = v1.dot(v2);\n        const denom = dot00 * dot11 - dot01 * dot01;\n        if (denom === 0) return target.set(-2, -1, -1);\n        const invDenom = 1 / denom;\n        const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n        return target.set(1 - u - v, v, u);\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\nconst CATMULLROM = 'catmullrom';\nconst CUBICBEZIER = 'cubicbezier';\nconst QUADRATICBEZIER = 'quadraticbezier';\n\n// temp\nconst _a0 = new Vec3(),\n    _a1 = new Vec3(),\n    _a2 = new Vec3(),\n    _a3 = new Vec3();\n\n/**\n * Get the control points of cubic bezier curve.\n * @param {*} i\n * @param {*} a\n * @param {*} b\n */\nfunction getCtrlPoint(points, i, a = 0.168, b = 0.168) {\n    if (i < 1) {\n        _a0.sub(points[1], points[0]).scale(a).add(points[0]);\n    } else {\n        _a0.sub(points[i + 1], points[i - 1])\n            .scale(a)\n            .add(points[i]);\n    }\n    if (i > points.length - 3) {\n        const last = points.length - 1;\n        _a1.sub(points[last - 1], points[last])\n            .scale(b)\n            .add(points[last]);\n    } else {\n        _a1.sub(points[i], points[i + 2])\n            .scale(b)\n            .add(points[i + 1]);\n    }\n    return [_a0.clone(), _a1.clone()];\n}\n\nfunction getQuadraticBezierPoint(t, p0, c0, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 2);\n    _a1.copy(c0).scale(2 * k * t);\n    _a2.copy(p1).scale(t ** 2);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2);\n    return ret;\n}\n\nfunction getCubicBezierPoint(t, p0, c0, c1, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 3);\n    _a1.copy(c0).scale(3 * k ** 2 * t);\n    _a2.copy(c1).scale(3 * k * t ** 2);\n    _a3.copy(p1).scale(t ** 3);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2).add(_a3);\n    return ret;\n}\n\nexport class Curve {\n    constructor({ points = [new Vec3(0, 0, 0), new Vec3(0, 1, 0), new Vec3(1, 1, 0), new Vec3(1, 0, 0)], divisions = 12, type = CATMULLROM } = {}) {\n        this.points = points;\n        this.divisions = divisions;\n        this.type = type;\n    }\n\n    _getQuadraticBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 3) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        const p0 = this.points[0];\n        let c0 = this.points[1],\n            p1 = this.points[2];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n            points.push(p);\n        }\n\n        let offset = 3;\n        while (count - offset > 0) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c0);\n            p1 = this.points[offset];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n                points.push(p);\n            }\n            offset++;\n        }\n\n        return points;\n    }\n\n    _getCubicBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 4) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        let p0 = this.points[0],\n            c0 = this.points[1],\n            c1 = this.points[2],\n            p1 = this.points[3];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n            points.push(p);\n        }\n\n        let offset = 4;\n        while (count - offset > 1) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c1);\n            c1 = this.points[offset];\n            p1 = this.points[offset + 1];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n                points.push(p);\n            }\n            offset += 2;\n        }\n\n        return points;\n    }\n\n    _getCatmullRomPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count <= 2) {\n            return this.points;\n        }\n\n        let p0;\n        this.points.forEach((p, i) => {\n            if (i === 0) {\n                p0 = p;\n            } else {\n                const [c0, c1] = getCtrlPoint(this.points, i - 1, a, b);\n                const c = new Curve({\n                    points: [p0, c0, c1, p],\n                    type: CUBICBEZIER,\n                });\n                points.pop();\n                points.push(...c.getPoints(divisions));\n                p0 = p;\n            }\n        });\n\n        return points;\n    }\n\n    getPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const type = this.type;\n\n        if (type === QUADRATICBEZIER) {\n            return this._getQuadraticBezierPoints(divisions);\n        }\n\n        if (type === CUBICBEZIER) {\n            return this._getCubicBezierPoints(divisions);\n        }\n\n        if (type === CATMULLROM) {\n            return this._getCatmullRomPoints(divisions, a, b);\n        }\n\n        return this.points;\n    }\n}\n\nCurve.CATMULLROM = CATMULLROM;\nCurve.CUBICBEZIER = CUBICBEZIER;\nCurve.QUADRATICBEZIER = QUADRATICBEZIER;\n","// TODO: Destroy render targets if size changed and exists\n\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Post {\n    constructor(\n        gl,\n        {\n            width,\n            height,\n            dpr,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = gl.LINEAR,\n            geometry = new Triangle(gl),\n            targetOnly = null,\n        } = {}\n    ) {\n        this.gl = gl;\n\n        this.options = { wrapS, wrapT, minFilter, magFilter };\n\n        this.passes = [];\n\n        this.geometry = geometry;\n\n        this.uniform = { value: null };\n        this.targetOnly = targetOnly;\n\n        const fbo = (this.fbo = {\n            read: null,\n            write: null,\n            swap: () => {\n                let temp = fbo.read;\n                fbo.read = fbo.write;\n                fbo.write = temp;\n            },\n        });\n\n        this.resize({ width, height, dpr });\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = { value: this.fbo.read.texture };\n\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    resize({ width, height, dpr } = {}) {\n        if (dpr) this.dpr = dpr;\n        if (width) {\n            this.width = width;\n            this.height = height || width;\n        }\n\n        dpr = this.dpr || this.gl.renderer.dpr;\n        width = Math.floor((this.width || this.gl.renderer.width) * dpr);\n        height = Math.floor((this.height || this.gl.renderer.height) * dpr);\n\n        this.options.width = width;\n        this.options.height = height;\n\n        this.fbo.read = new RenderTarget(this.gl, this.options);\n        this.fbo.write = new RenderTarget(this.gl, this.options);\n    }\n\n    // Uses same arguments as renderer.render, with addition of optional texture passed in to avoid scene render\n    render({ scene, camera, texture, target = null, update = true, sort = true, frustumCull = true }) {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        if (!texture) {\n            this.gl.renderer.render({\n                scene,\n                camera,\n                target: enabledPasses.length || (!target && this.targetOnly) ? this.fbo.write : target,\n                update,\n                sort,\n                frustumCull,\n            });\n            this.fbo.swap();\n        }\n\n        enabledPasses.forEach((pass, i) => {\n            pass.mesh.program.uniforms[pass.textureUniform].value = !i && texture ? texture : this.fbo.read.texture;\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: i === enabledPasses.length - 1 && (target || !this.targetOnly) ? target : this.fbo.write,\n                clear: true,\n            });\n            this.fbo.swap();\n        });\n\n        this.uniform.value = this.fbo.read.texture;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst prevPos = new Vec3();\nconst prevRot = new Quat();\nconst prevScl = new Vec3();\n\nconst nextPos = new Vec3();\nconst nextRot = new Quat();\nconst nextScl = new Vec3();\n\nexport class Animation {\n    constructor({ objects, data }) {\n        this.objects = objects;\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = 1;\n        this.duration = data.frames.length - 1;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = this.elapsed % this.duration;\n\n        const floorFrame = Math.floor(elapsed);\n        const blend = elapsed - floorFrame;\n        const prevKey = this.data.frames[floorFrame];\n        const nextKey = this.data.frames[(floorFrame + 1) % this.duration];\n\n        this.objects.forEach((object, i) => {\n            prevPos.fromArray(prevKey.position, i * 3);\n            prevRot.fromArray(prevKey.quaternion, i * 4);\n            prevScl.fromArray(prevKey.scale, i * 3);\n\n            nextPos.fromArray(nextKey.position, i * 3);\n            nextRot.fromArray(nextKey.quaternion, i * 4);\n            nextScl.fromArray(nextKey.scale, i * 3);\n\n            prevPos.lerp(nextPos, blend);\n            prevRot.slerp(nextRot, blend);\n            prevScl.lerp(nextScl, blend);\n\n            object.position.lerp(prevPos, weight);\n            object.quaternion.slerp(prevRot, weight);\n            object.scale.lerp(prevScl, weight);\n        });\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Transform } from '../core/Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\nimport { Animation } from './Animation.js';\n\nconst tempMat4 = new Mat4();\n\nexport class Skin extends Mesh {\n    constructor(gl, { rig, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n\n        this.createBones(rig);\n        this.createBoneTexture();\n        this.animations = [];\n\n        Object.assign(this.program.uniforms, {\n            boneTexture: { value: this.boneTexture },\n            boneTextureSize: { value: this.boneTextureSize },\n        });\n    }\n\n    createBones(rig) {\n        // Create root so that can simply update world matrix of whole skeleton\n        this.root = new Transform();\n\n        // Create bones\n        this.bones = [];\n        if (!rig.bones || !rig.bones.length) return;\n        for (let i = 0; i < rig.bones.length; i++) {\n            const bone = new Transform();\n\n            // Set initial values (bind pose)\n            bone.position.fromArray(rig.bindPose.position, i * 3);\n            bone.quaternion.fromArray(rig.bindPose.quaternion, i * 4);\n            bone.scale.fromArray(rig.bindPose.scale, i * 3);\n\n            this.bones.push(bone);\n        }\n\n        // Once created, set the hierarchy\n        rig.bones.forEach((data, i) => {\n            this.bones[i].name = data.name;\n            if (data.parent === -1) return this.bones[i].setParent(this.root);\n            this.bones[i].setParent(this.bones[data.parent]);\n        });\n\n        // Then update to calculate world matrices\n        this.root.updateMatrixWorld(true);\n\n        // Store inverse of bind pose to calculate differences\n        this.bones.forEach((bone) => {\n            bone.bindInverse = new Mat4(...bone.worldMatrix).inverse();\n        });\n    }\n\n    createBoneTexture() {\n        if (!this.bones.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.bones.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    addAnimation(data) {\n        const animation = new Animation({ objects: this.bones, data });\n        this.animations.push(animation);\n        return animation;\n    }\n\n    update() {\n        // Calculate combined animation weight\n        let total = 0;\n        this.animations.forEach((animation) => (total += animation.weight));\n\n        this.animations.forEach((animation, i) => {\n            // force first animation to set in order to reset frame\n            animation.update(total, i === 0);\n        });\n    }\n\n    draw({ camera } = {}) {\n        // Update world matrices manually, as not part of scene graph\n        this.root.updateMatrixWorld(true);\n\n        // Update bone texture\n        this.bones.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n\n        super.draw({ camera });\n    }\n}\n","export function Text({\n    font,\n    text,\n    width = Infinity,\n    align = 'left',\n    size = 1,\n    letterSpacing = 0,\n    lineHeight = 1.4,\n    wordSpacing = 0,\n    wordBreak = false,\n}) {\n    const _this = this;\n    let glyphs, buffers;\n    let fontHeight, baseline, scale;\n\n    const newline = /\\n/;\n    const whitespace = /\\s/;\n\n    {\n        parseFont();\n        createGeometry();\n    }\n\n    function parseFont() {\n        glyphs = {};\n        font.chars.forEach((d) => (glyphs[d.char] = d));\n    }\n\n    function createGeometry() {\n        fontHeight = font.common.lineHeight;\n        baseline = font.common.base;\n\n        // Use baseline so that actual text height is as close to 'size' value as possible\n        scale = size / baseline;\n\n        // Strip spaces and newlines to get actual character length for buffers\n        let chars = text.replace(/[ \\n]/g, '');\n        let numChars = chars.length;\n\n        // Create output buffers\n        buffers = {\n            position: new Float32Array(numChars * 4 * 3),\n            uv: new Float32Array(numChars * 4 * 2),\n            id: new Float32Array(numChars * 4),\n            index: new Uint16Array(numChars * 6),\n        };\n\n        // Set values for buffers that don't require calculation\n        for (let i = 0; i < numChars; i++) {\n            buffers.id[i] = i;\n            buffers.index.set([i * 4, i * 4 + 2, i * 4 + 1, i * 4 + 1, i * 4 + 2, i * 4 + 3], i * 6);\n        }\n\n        layout();\n    }\n\n    function layout() {\n        const lines = [];\n\n        let cursor = 0;\n\n        let wordCursor = 0;\n        let wordWidth = 0;\n        let line = newLine();\n\n        function newLine() {\n            const line = {\n                width: 0,\n                glyphs: [],\n            };\n            lines.push(line);\n            wordCursor = cursor;\n            wordWidth = 0;\n            return line;\n        }\n\n        let maxTimes = 100;\n        let count = 0;\n        while (cursor < text.length && count < maxTimes) {\n            count++;\n\n            const char = text[cursor];\n\n            // Skip whitespace at start of line\n            if (!line.width && whitespace.test(char)) {\n                cursor++;\n                wordCursor = cursor;\n                wordWidth = 0;\n                continue;\n            }\n\n            // If newline char, skip to next line\n            if (newline.test(char)) {\n                cursor++;\n                line = newLine();\n                continue;\n            }\n\n            const glyph = glyphs[char] || glyphs[' '];\n\n            // Find any applicable kern pairs\n            if (line.glyphs.length) {\n                const prevGlyph = line.glyphs[line.glyphs.length - 1][0];\n                let kern = getKernPairOffset(glyph.id, prevGlyph.id) * scale;\n                line.width += kern;\n                wordWidth += kern;\n            }\n\n            // add char to line\n            line.glyphs.push([glyph, line.width]);\n\n            // calculate advance for next glyph\n            let advance = 0;\n\n            // If whitespace, update location of current word for line breaks\n            if (whitespace.test(char)) {\n                wordCursor = cursor;\n                wordWidth = 0;\n\n                // Add wordspacing\n                advance += wordSpacing * size;\n            } else {\n                // Add letterspacing\n                advance += letterSpacing * size;\n            }\n\n            advance += glyph.xadvance * scale;\n\n            line.width += advance;\n            wordWidth += advance;\n\n            // If width defined\n            if (line.width > width) {\n                // If can break words, undo latest glyph if line not empty and create new line\n                if (wordBreak && line.glyphs.length > 1) {\n                    line.width -= advance;\n                    line.glyphs.pop();\n                    line = newLine();\n                    continue;\n\n                    // If not first word, undo current word and cursor and create new line\n                } else if (!wordBreak && wordWidth !== line.width) {\n                    let numGlyphs = cursor - wordCursor + 1;\n                    line.glyphs.splice(-numGlyphs, numGlyphs);\n                    cursor = wordCursor;\n                    line.width -= wordWidth;\n                    line = newLine();\n                    continue;\n                }\n            }\n\n            cursor++;\n            // Reset infinite loop catch\n            count = 0;\n        }\n\n        // Remove last line if empty\n        if (!line.width) lines.pop();\n\n        populateBuffers(lines);\n    }\n\n    function populateBuffers(lines) {\n        const texW = font.common.scaleW;\n        const texH = font.common.scaleH;\n\n        // For all fonts tested, a little offset was needed to be right on the baseline, hence 0.07.\n        let y = 0.07 * size;\n        let j = 0;\n\n        for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n            let line = lines[lineIndex];\n\n            for (let i = 0; i < line.glyphs.length; i++) {\n                const glyph = line.glyphs[i][0];\n                let x = line.glyphs[i][1];\n\n                if (align === 'center') {\n                    x -= line.width * 0.5;\n                } else if (align === 'right') {\n                    x -= line.width;\n                }\n\n                // If space, don't add to geometry\n                if (whitespace.test(glyph.char)) continue;\n\n                // Apply char sprite offsets\n                x += glyph.xoffset * scale;\n                y -= glyph.yoffset * scale;\n\n                // each letter is a quad. axis bottom left\n                let w = glyph.width * scale;\n                let h = glyph.height * scale;\n                buffers.position.set([x, y - h, 0, x, y, 0, x + w, y - h, 0, x + w, y, 0], j * 4 * 3);\n\n                let u = glyph.x / texW;\n                let uw = glyph.width / texW;\n                let v = 1.0 - glyph.y / texH;\n                let vh = glyph.height / texH;\n                buffers.uv.set([u, v - vh, u, v, u + uw, v - vh, u + uw, v], j * 4 * 2);\n\n                // Reset cursor to baseline\n                y += glyph.yoffset * scale;\n\n                j++;\n            }\n\n            y -= size * lineHeight;\n        }\n\n        _this.buffers = buffers;\n        _this.numLines = lines.length;\n        _this.height = _this.numLines * size * lineHeight;\n        _this.width = Math.max(...lines.map((line) => line.width));\n    }\n\n    function getKernPairOffset(id1, id2) {\n        for (let i = 0; i < font.kernings.length; i++) {\n            let k = font.kernings[i];\n            if (k.first < id1) continue;\n            if (k.second < id2) continue;\n            if (k.first > id1) return 0;\n            if (k.first === id1 && k.second > id2) return 0;\n            return k.amount;\n        }\n        return 0;\n    }\n\n    // Update buffers to layout with new layout\n    this.resize = function (options) {\n        ({ width } = options);\n        layout();\n    };\n\n    // Completely change text (like creating new Text)\n    this.update = function (options) {\n        ({ text } = options);\n        createGeometry();\n    };\n}\n","import { Program } from '../core/Program.js';\n\nconst vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat3 normalMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vNormal = normalize(normalMatrix * normal);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    varying vec3 vNormal;\n\n    void main() {\n        gl_FragColor.rgb = normalize(vNormal);\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nexport function NormalProgram(gl) {\n    return new Program(gl, {\n        vertex: vertex,\n        fragment: fragment,\n        cullFace: null,\n    });\n}\n","import { RenderTarget } from '../core/RenderTarget.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Flowmap {\n    constructor(\n        gl,\n        {\n            size = 128, // default size of the render targets\n            falloff = 0.3, // size of the stamp, percentage of the size\n            alpha = 1, // opacity of the stamp\n            dissipation = 0.98, // affects the speed that the stamp fades. Closer to 1 is slower\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        } = {}\n    ) {\n        const _this = this;\n        this.gl = gl;\n\n        // output uniform containing render target textures\n        this.uniform = { value: null };\n\n        this.mask = {\n            read: null,\n            write: null,\n\n            // Helper function to ping pong the render targets and update the uniform\n            swap: () => {\n                let temp = _this.mask.read;\n                _this.mask.read = _this.mask.write;\n                _this.mask.write = temp;\n                _this.uniform.value = _this.mask.read.texture;\n            },\n        };\n\n        {\n            createFBOs();\n\n            this.aspect = 1;\n            this.mouse = new Vec2();\n            this.velocity = new Vec2();\n\n            this.mesh = initProgram();\n        }\n\n        function createFBOs() {\n            // Requested type not supported, fall back to half float\n            if (!type) type = gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES;\n\n            let minFilter = (() => {\n                if (gl.renderer.isWebgl2) return gl.LINEAR;\n                if (gl.renderer.extensions[`OES_texture_${type === gl.FLOAT ? '' : 'half_'}float_linear`]) return gl.LINEAR;\n                return gl.NEAREST;\n            })();\n\n            const options = {\n                width: size,\n                height: size,\n                type,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n                minFilter,\n                depth: false,\n            };\n\n            _this.mask.read = new RenderTarget(gl, options);\n            _this.mask.write = new RenderTarget(gl, options);\n            _this.mask.swap();\n        }\n\n        function initProgram() {\n            return new Mesh(gl, {\n                // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n                geometry: new Triangle(gl),\n\n                program: new Program(gl, {\n                    vertex,\n                    fragment,\n                    uniforms: {\n                        tMap: _this.uniform,\n\n                        uFalloff: { value: falloff * 0.5 },\n                        uAlpha: { value: alpha },\n                        uDissipation: { value: dissipation },\n\n                        // User needs to update these\n                        uAspect: { value: 1 },\n                        uMouse: { value: _this.mouse },\n                        uVelocity: { value: _this.velocity },\n                    },\n                    depthTest: false,\n                }),\n            });\n        }\n    }\n\n    update() {\n        this.mesh.program.uniforms.uAspect.value = this.aspect;\n\n        this.gl.renderer.render({\n            scene: this.mesh,\n            target: this.mask.write,\n            clear: false,\n        });\n        this.mask.swap();\n    }\n}\n\nconst vertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n\n    uniform float uFalloff;\n    uniform float uAlpha;\n    uniform float uDissipation;\n    \n    uniform float uAspect;\n    uniform vec2 uMouse;\n    uniform vec2 uVelocity;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec4 color = texture2D(tMap, vUv) * uDissipation;\n\n        vec2 cursor = vUv - uMouse;\n        cursor.x *= uAspect;\n\n        vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\n        float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\n\n        color.rgb = mix(color.rgb, stamp, vec3(falloff));\n\n        gl_FragColor = color;\n    }\n`;\n","import { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Texture } from '../core/Texture.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class GPGPU {\n    constructor(\n        gl,\n        {\n            // Always pass in array of vec4s (RGBA values within texture)\n            data = new Float32Array(16),\n            geometry = new Triangle(gl),\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        }\n    ) {\n        this.gl = gl;\n        const initialData = data;\n        this.passes = [];\n        this.geometry = geometry;\n        this.dataLength = initialData.length / 4;\n\n        // Windows and iOS only like power of 2 textures\n        // Find smallest PO2 that fits data\n        this.size = Math.pow(2, Math.ceil(Math.log(Math.ceil(Math.sqrt(this.dataLength))) / Math.LN2));\n\n        // Create coords for output texture\n        this.coords = new Float32Array(this.dataLength * 2);\n        for (let i = 0; i < this.dataLength; i++) {\n            const x = (i % this.size) / this.size; // to add 0.5 to be center pixel ?\n            const y = Math.floor(i / this.size) / this.size;\n            this.coords.set([x, y], i * 2);\n        }\n\n        // Use original data if already correct length of PO2 texture, else copy to new array of correct length\n        const floatArray = (() => {\n            if (initialData.length === this.size * this.size * 4) {\n                return initialData;\n            } else {\n                const a = new Float32Array(this.size * this.size * 4);\n                a.set(initialData);\n                return a;\n            }\n        })();\n\n        // Create output texture uniform using input float texture with initial data\n        this.uniform = {\n            value: new Texture(gl, {\n                image: floatArray,\n                target: gl.TEXTURE_2D,\n                type: gl.FLOAT,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? gl.RGBA32F : gl.RGBA,\n                wrapS: gl.CLAMP_TO_EDGE,\n                wrapT: gl.CLAMP_TO_EDGE,\n                generateMipmaps: false,\n                minFilter: gl.NEAREST,\n                magFilter: gl.NEAREST,\n                width: this.size,\n                flipY: false,\n            }),\n        };\n\n        // Create FBOs\n        const options = {\n            width: this.size,\n            height: this.size,\n            type: type || gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES,\n            format: gl.RGBA,\n            internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n            minFilter: gl.NEAREST,\n            depth: false,\n            unpackAlignment: 1,\n        };\n\n        this.fbo = {\n            read: new RenderTarget(gl, options),\n            write: new RenderTarget(gl, options),\n            swap: () => {\n                let temp = this.fbo.read;\n                this.fbo.read = this.fbo.write;\n                this.fbo.write = temp;\n                this.uniform.value = this.fbo.read.texture;\n            },\n        };\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = this.uniform;\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    render() {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        enabledPasses.forEach((pass, i) => {\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: this.fbo.write,\n                clear: false,\n            });\n            this.fbo.swap();\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Geometry } from '../core/Geometry.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Color } from '../math/Color.js';\n\nconst tmp = new Vec3();\n\nexport class Polyline {\n    constructor(\n        gl,\n        {\n            points, // Array of Vec3s\n            vertex = defaultVertex,\n            fragment = defaultFragment,\n            uniforms = {},\n            attributes = {}, // For passing in custom attribs\n        }\n    ) {\n        this.gl = gl;\n        this.points = points;\n        this.count = points.length;\n\n        // Create buffers\n        this.position = new Float32Array(this.count * 3 * 2);\n        this.prev = new Float32Array(this.count * 3 * 2);\n        this.next = new Float32Array(this.count * 3 * 2);\n        const side = new Float32Array(this.count * 1 * 2);\n        const uv = new Float32Array(this.count * 2 * 2);\n        const index = new Uint16Array((this.count - 1) * 3 * 2);\n\n        // Set static buffers\n        for (let i = 0; i < this.count; i++) {\n            side.set([-1, 1], i * 2);\n            const v = i / (this.count - 1);\n            uv.set([0, v, 1, v], i * 4);\n\n            if (i === this.count - 1) continue;\n            const ind = i * 2;\n            index.set([ind + 0, ind + 1, ind + 2], (ind + 0) * 3);\n            index.set([ind + 2, ind + 1, ind + 3], (ind + 1) * 3);\n        }\n\n        const geometry = (this.geometry = new Geometry(\n            gl,\n            Object.assign(attributes, {\n                position: { size: 3, data: this.position },\n                prev: { size: 3, data: this.prev },\n                next: { size: 3, data: this.next },\n                side: { size: 1, data: side },\n                uv: { size: 2, data: uv },\n                index: { size: 1, data: index },\n            })\n        ));\n\n        // Populate dynamic buffers\n        this.updateGeometry();\n\n        if (!uniforms.uResolution) this.resolution = uniforms.uResolution = { value: new Vec2() };\n        if (!uniforms.uDPR) this.dpr = uniforms.uDPR = { value: 1 };\n        if (!uniforms.uThickness) this.thickness = uniforms.uThickness = { value: 1 };\n        if (!uniforms.uColor) this.color = uniforms.uColor = { value: new Color('#000') };\n        if (!uniforms.uMiter) this.miter = uniforms.uMiter = { value: 1 };\n\n        // Set size uniforms' values\n        this.resize();\n\n        const program = (this.program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms,\n        }));\n\n        this.mesh = new Mesh(gl, { geometry, program });\n    }\n\n    updateGeometry() {\n        this.points.forEach((p, i) => {\n            p.toArray(this.position, i * 3 * 2);\n            p.toArray(this.position, i * 3 * 2 + 3);\n\n            if (!i) {\n                // If first point, calculate prev using the distance to 2nd point\n                tmp.copy(p)\n                    .sub(this.points[i + 1])\n                    .add(p);\n                tmp.toArray(this.prev, i * 3 * 2);\n                tmp.toArray(this.prev, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.next, (i - 1) * 3 * 2);\n                p.toArray(this.next, (i - 1) * 3 * 2 + 3);\n            }\n\n            if (i === this.points.length - 1) {\n                // If last point, calculate next using distance to 2nd last point\n                tmp.copy(p)\n                    .sub(this.points[i - 1])\n                    .add(p);\n                tmp.toArray(this.next, i * 3 * 2);\n                tmp.toArray(this.next, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.prev, (i + 1) * 3 * 2);\n                p.toArray(this.prev, (i + 1) * 3 * 2 + 3);\n            }\n        });\n\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.prev.needsUpdate = true;\n        this.geometry.attributes.next.needsUpdate = true;\n    }\n\n    // Only need to call if not handling resolution uniforms manually\n    resize() {\n        // Update automatic uniforms if not overridden\n        if (this.resolution) this.resolution.value.set(this.gl.canvas.width, this.gl.canvas.height);\n        if (this.dpr) this.dpr.value = this.gl.renderer.dpr;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    precision highp float;\n\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    uniform float uMiter;\n\n    varying vec2 vUv;\n\n    vec4 getPosition() {\n        mat4 mvp = projectionMatrix * modelViewMatrix;\n        vec4 current = mvp * vec4(position, 1);\n        vec4 nextPos = mvp * vec4(next, 1);\n        vec4 prevPos = mvp * vec4(prev, 1);\n\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);    \n        vec2 currentScreen = current.xy / current.w * aspect;\n        vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n        vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n    \n        vec2 dir1 = normalize(currentScreen - prevScreen);\n        vec2 dir2 = normalize(nextScreen - currentScreen);\n        vec2 dir = normalize(dir1 + dir2);\n    \n        vec2 normal = vec2(-dir.y, dir.x);\n        normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n        normal /= aspect;\n\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w * pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n\n    void main() {\n        vUv = uv;\n        gl_Position = getPosition();\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform vec3 uColor;\n    \n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor.rgb = uColor;\n        gl_FragColor.a = 1.0;\n    }\n`;\n","import { Camera } from '../core/Camera.js';\nimport { Program } from '../core/Program.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\n\nexport class Shadow {\n    constructor(gl, { light = new Camera(gl), width = 1024, height = width }) {\n        this.gl = gl;\n\n        this.light = light;\n\n        this.target = new RenderTarget(gl, { width, height });\n\n        this.depthProgram = new Program(gl, {\n            vertex: defaultVertex,\n            fragment: defaultFragment,\n            cullFace: null,\n        });\n\n        this.castMeshes = [];\n    }\n\n    add({\n        mesh,\n        receive = true,\n        cast = true,\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniformProjection = 'shadowProjectionMatrix',\n        uniformView = 'shadowViewMatrix',\n        uniformTexture = 'tShadow',\n    }) {\n        // Add uniforms to existing program\n        if (receive && !mesh.program.uniforms[uniformProjection]) {\n            mesh.program.uniforms[uniformProjection] = { value: this.light.projectionMatrix };\n            mesh.program.uniforms[uniformView] = { value: this.light.viewMatrix };\n            mesh.program.uniforms[uniformTexture] = { value: this.target.texture };\n        }\n\n        if (!cast) return;\n        this.castMeshes.push(mesh);\n\n        // Store program for when switching between depth override\n        mesh.colorProgram = mesh.program;\n\n        // Check if depth program already attached\n        if (mesh.depthProgram) return;\n\n        // Use global depth override if nothing custom passed in\n        if (vertex === defaultVertex && fragment === defaultFragment) {\n            mesh.depthProgram = this.depthProgram;\n            return;\n        }\n\n        // Create custom override program\n        mesh.depthProgram = new Program(this.gl, {\n            vertex,\n            fragment,\n            cullFace: null,\n        });\n    }\n\n    render({ scene }) {\n        // For depth render, replace program with depth override.\n        // Hide meshes not casting shadows.\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.depthProgram;\n            } else {\n                node.isForceVisibility = node.visible;\n                node.visible = false;\n            }\n        });\n\n        // Render the depth shadow map using the light as the camera\n        this.gl.renderer.render({\n            scene,\n            camera: this.light,\n            target: this.target,\n        });\n\n        // Then switch the program back to the normal one\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.colorProgram;\n            } else {\n                node.visible = node.isForceVisibility;\n            }\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    vec4 packRGBA (float v) {\n        vec4 pack = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);\n        pack -= pack.yzww * vec2(1.0 / 255.0, 0.0).xxxy;\n        return pack;\n    }\n\n    void main() {\n        gl_FragColor = packRGBA(gl_FragCoord.z);\n    }\n`;\n","import { Texture } from '../core/Texture.js';\n\n// TODO: Support cubemaps\n// Generate textures using https://github.com/TimvanScherpenzeel/texture-compressor\n\nexport class KTXTexture extends Texture {\n    constructor(gl, { buffer, wrapS = gl.CLAMP_TO_EDGE, wrapT = gl.CLAMP_TO_EDGE, anisotropy = 0, minFilter, magFilter } = {}) {\n        super(gl, {\n            generateMipmaps: false,\n            wrapS,\n            wrapT,\n            anisotropy,\n            minFilter,\n            magFilter,\n        });\n\n        if (buffer) return this.parseBuffer(buffer);\n    }\n\n    parseBuffer(buffer) {\n        const ktx = new KhronosTextureContainer(buffer);\n        ktx.mipmaps.isCompressedTexture = true;\n\n        // Update texture\n        this.image = ktx.mipmaps;\n        this.internalFormat = ktx.glInternalFormat;\n        if (ktx.numberOfMipmapLevels > 1) {\n            if (this.minFilter === this.gl.LINEAR) this.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        } else {\n            if (this.minFilter === this.gl.NEAREST_MIPMAP_LINEAR) this.minFilter = this.gl.LINEAR;\n        }\n\n        // TODO: support cube maps\n        // ktx.numberOfFaces\n    }\n}\n\nfunction KhronosTextureContainer(buffer) {\n    const idCheck = [0xab, 0x4b, 0x54, 0x58, 0x20, 0x31, 0x31, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\n    const id = new Uint8Array(buffer, 0, 12);\n    for (let i = 0; i < id.length; i++) if (id[i] !== idCheck[i]) return console.error('File missing KTX identifier');\n\n    // TODO: Is this always 4? Tested: [android, macos]\n    const size = Uint32Array.BYTES_PER_ELEMENT;\n    const head = new DataView(buffer, 12, 13 * size);\n    const littleEndian = head.getUint32(0, true) === 0x04030201;\n    const glType = head.getUint32(1 * size, littleEndian);\n    if (glType !== 0) return console.warn('only compressed formats currently supported');\n    this.glInternalFormat = head.getUint32(4 * size, littleEndian);\n    let width = head.getUint32(6 * size, littleEndian);\n    let height = head.getUint32(7 * size, littleEndian);\n    this.numberOfFaces = head.getUint32(10 * size, littleEndian);\n    this.numberOfMipmapLevels = Math.max(1, head.getUint32(11 * size, littleEndian));\n    const bytesOfKeyValueData = head.getUint32(12 * size, littleEndian);\n\n    this.mipmaps = [];\n    let offset = 12 + 13 * 4 + bytesOfKeyValueData;\n    for (let level = 0; level < this.numberOfMipmapLevels; level++) {\n        const levelSize = new Int32Array(buffer, offset, 1)[0]; // size per face, since not supporting array cubemaps\n        offset += 4; // levelSize field\n        for (let face = 0; face < this.numberOfFaces; face++) {\n            const data = new Uint8Array(buffer, offset, levelSize);\n            this.mipmaps.push({ data, width, height });\n            offset += levelSize;\n            offset += 3 - ((levelSize + 3) % 4); // add padding for odd sized image\n        }\n        width = width >> 1;\n        height = height >> 1;\n    }\n}\n","import { Texture } from '../core/Texture.js';\nimport { KTXTexture } from './KTXTexture.js';\n\n// For compressed textures, generate using https://github.com/TimvanScherpenzeel/texture-compressor\n\nlet cache = {};\nconst supportedExtensions = [];\n\nexport class TextureLoader {\n    static load(\n        gl,\n        {\n            src, // string or object of extension:src key-values\n            // {\n            //     pvrtc: '...ktx',\n            //     s3tc: '...ktx',\n            //     etc: '...ktx',\n            //     etc1: '...ktx',\n            //     astc: '...ktx',\n            //     webp: '...webp',\n            //     jpg: '...jpg',\n            //     png: '...png',\n            // }\n\n            // Only props relevant to KTXTexture\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            anisotropy = 0,\n\n            // For regular images\n            format = gl.RGBA,\n            internalFormat = format,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = true,\n        } = {}\n    ) {\n        const support = this.getSupportedExtensions(gl);\n        let ext = 'none';\n\n        // If src is string, determine which format from the extension\n        if (typeof src === 'string') {\n            ext = src.split('.').pop().split('?')[0].toLowerCase();\n        }\n\n        // If src is object, use supported extensions and provided list to choose best option\n        // Get first supported match, so put in order of preference\n        if (typeof src === 'object') {\n            for (const prop in src) {\n                if (support.includes(prop.toLowerCase())) {\n                    ext = prop.toLowerCase();\n                    src = src[prop];\n                    break;\n                }\n            }\n        }\n\n        // Stringify props\n        const cacheID =\n            src +\n            wrapS +\n            wrapT +\n            anisotropy +\n            format +\n            internalFormat +\n            generateMipmaps +\n            minFilter +\n            magFilter +\n            premultiplyAlpha +\n            unpackAlignment +\n            flipY +\n            gl.renderer.id;\n\n        // Check cache for existing texture\n        if (cache[cacheID]) return cache[cacheID];\n\n        let texture;\n        switch (ext) {\n            case 'ktx':\n            case 'pvrtc':\n            case 's3tc':\n            case 'etc':\n            case 'etc1':\n            case 'astc':\n                // Load compressed texture using KTX format\n                texture = new KTXTexture(gl, {\n                    src,\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    minFilter,\n                    magFilter,\n                });\n                texture.loaded = this.loadKTX(src, texture);\n                break;\n            case 'webp':\n            case 'jpg':\n            case 'jpeg':\n            case 'png':\n                texture = new Texture(gl, {\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    format,\n                    internalFormat,\n                    generateMipmaps,\n                    minFilter,\n                    magFilter,\n                    premultiplyAlpha,\n                    unpackAlignment,\n                    flipY,\n                });\n                texture.loaded = this.loadImage(gl, src, texture, flipY);\n                break;\n            default:\n                console.warn('No supported format supplied');\n                texture = new Texture(gl);\n        }\n\n        texture.ext = ext;\n        cache[cacheID] = texture;\n        return texture;\n    }\n\n    static getSupportedExtensions(gl) {\n        if (supportedExtensions.length) return supportedExtensions;\n\n        const extensions = {\n            pvrtc: gl.renderer.getExtension('WEBGL_compressed_texture_pvrtc') || gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'),\n            s3tc: gl.renderer.getExtension('WEBGL_compressed_texture_s3tc'),\n            // etc: gl.renderer.getExtension('WEBGL_compressed_texture_etc'),\n            etc1: gl.renderer.getExtension('WEBGL_compressed_texture_etc1'),\n            astc: gl.renderer.getExtension('WEBGL_compressed_texture_astc'),\n            bc7: gl.renderer.getExtension('EXT_texture_compression_bptc'),\n        };\n\n        for (const ext in extensions) if (extensions[ext]) supportedExtensions.push(ext);\n\n        // Check for WebP support\n        if (detectWebP()) supportedExtensions.push('webp');\n\n        // Formats supported by all\n        supportedExtensions.push('png', 'jpg');\n\n        return supportedExtensions;\n    }\n\n    static loadKTX(src, texture) {\n        return fetch(src)\n            .then((res) => res.arrayBuffer())\n            .then((buffer) => texture.parseBuffer(buffer));\n    }\n\n    static loadImage(gl, src, texture, flipY) {\n        return decodeImage(src, flipY).then((imgBmp) => {\n            // Catch non POT textures and update params to avoid errors\n            if (!powerOfTwo(imgBmp.width) || !powerOfTwo(imgBmp.height)) {\n                if (texture.generateMipmaps) texture.generateMipmaps = false;\n                if (texture.minFilter === gl.NEAREST_MIPMAP_LINEAR) texture.minFilter = gl.LINEAR;\n                if (texture.wrapS === gl.REPEAT) texture.wrapS = texture.wrapT = gl.CLAMP_TO_EDGE;\n            }\n\n            texture.image = imgBmp;\n\n            // For createImageBitmap, close once uploaded\n            texture.onUpdate = () => {\n                if (imgBmp.close) imgBmp.close();\n                texture.onUpdate = null;\n            };\n\n            return imgBmp;\n        });\n    }\n\n    static clearCache() {\n        cache = {};\n    }\n}\n\nfunction detectWebP() {\n    return document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') == 0;\n}\n\nfunction powerOfTwo(value) {\n    // (width & (width - 1)) !== 0\n    return Math.log2(value) % 1 === 0;\n}\n\nfunction decodeImage(src, flipY) {\n    return new Promise((resolve) => {\n        // Only chrome's implementation of createImageBitmap is fully supported\n        const isChrome = navigator.userAgent.toLowerCase().includes('chrome');\n        if (!!window.createImageBitmap && isChrome) {\n            fetch(src, { mode: 'cors' })\n                .then(r => r.blob())\n                .then(b => createImageBitmap(b, { imageOrientation: flipY ? 'flipY' : 'none', premultiplyAlpha: 'none' }))\n                .then(resolve);\n        } else {\n            const img = new Image();\n\n            img.crossOrigin = '';\n            img.src = src;\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\n\nconst tempMat4 = new Mat4();\nconst identity = new Mat4();\n\nexport class GLTFSkin extends Mesh {\n    constructor(gl, { skeleton, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n        this.skeleton = skeleton;\n        this.program = program;\n        this.createBoneTexture();\n        this.animations = [];\n    }\n\n    createBoneTexture() {\n        if (!this.skeleton.joints.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.skeleton.joints.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    // addAnimation(data) {\n    //     const animation = new Animation({ objects: this.bones, data });\n    //     this.animations.push(animation);\n    //     return animation;\n    // }\n\n    // updateAnimations() {\n    //     // Calculate combined animation weight\n    //     let total = 0;\n    //     this.animations.forEach((animation) => (total += animation.weight));\n\n    //     this.animations.forEach((animation, i) => {\n    //         // force first animation to set in order to reset frame\n    //         animation.update(total, i === 0);\n    //     });\n    // }\n\n    updateUniforms() {\n        // Update bone texture\n        this.skeleton.joints.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n    }\n\n    draw({ camera } = {}) {\n        if (!this.program.uniforms.boneTexture) {\n            Object.assign(this.program.uniforms, {\n                boneTexture: { value: this.boneTexture },\n                boneTextureSize: { value: this.boneTextureSize },\n            });\n        }\n\n        this.updateUniforms();\n\n        // Switch the world matrix with identity to ignore any transforms\n        // on the mesh itself - only use skeleton's transforms\n        const _worldMatrix = this.worldMatrix;\n        this.worldMatrix = identity;\n\n        super.draw({ camera });\n\n        // Switch back to leave identity untouched\n        this.worldMatrix = _worldMatrix;\n    }\n}\n","let supportedFormat;\nlet id = 0;\n\nexport class BasisManager {\n    constructor(workerSrc) {\n        if (!supportedFormat) supportedFormat = this.getSupportedFormat();\n        this.onMessage = this.onMessage.bind(this);\n        this.queue = new Map();\n        this.initWorker(workerSrc);\n    }\n\n    getSupportedFormat() {\n        const gl = document.createElement('canvas').getContext('webgl');\n        /* if (!!gl.getExtension('WEBGL_compressed_texture_etc')) {\n            return 'etc2';\n        } else  */\n        if (!!gl.getExtension('WEBGL_compressed_texture_astc')) {\n            return 'astc';\n        } else if (!!gl.getExtension('EXT_texture_compression_bptc')) {\n            return 'bptc';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_s3tc')) {\n            return 's3tc';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_etc1')) {\n            return 'etc1';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_pvrtc') || !!gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc')) {\n            return 'pvrtc';\n            // } else if (!!gl.getExtension('WEBGL_compressed_texture_atc')) {\n            //     return 'atc';\n        }\n        return 'none';\n    }\n\n    initWorker(workerSrc) {\n        this.worker = new Worker(workerSrc);\n        this.worker.onmessage = this.onMessage;\n    }\n\n    onMessage({ data }) {\n        const { id, error, image } = data;\n        if (error) {\n            console.log(error, id);\n            return;\n        }\n        const textureResolve = this.queue.get(id);\n        this.queue.delete(id);\n        image.isBasis = true;\n        textureResolve(image);\n    }\n\n    parseTexture(buffer) {\n        id++;\n        this.worker.postMessage({\n            id,\n            buffer,\n            supportedFormat,\n        });\n        let textureResolve;\n        const promise = new Promise((res) => (textureResolve = res));\n        this.queue.set(id, textureResolve);\n        return promise;\n    }\n}\n","// Core\nexport { Geometry } from './core/Geometry.js';\nexport { Program } from './core/Program.js';\nexport { Renderer } from './core/Renderer.js';\nexport { Camera } from './core/Camera.js';\nexport { Transform } from './core/Transform.js';\nexport { Mesh } from './core/Mesh.js';\nexport { Texture } from './core/Texture.js';\nexport { RenderTarget } from './core/RenderTarget.js';\n\n// Maths\nexport { Color } from './math/Color.js';\nexport { Euler } from './math/Euler.js';\nexport { Mat3 } from './math/Mat3.js';\nexport { Mat4 } from './math/Mat4.js';\nexport { Quat } from './math/Quat.js';\nexport { Vec2 } from './math/Vec2.js';\nexport { Vec3 } from './math/Vec3.js';\nexport { Vec4 } from './math/Vec4.js';\n\n// Extras\nexport { Plane } from './extras/Plane.js';\nexport { Box } from './extras/Box.js';\nexport { Sphere } from './extras/Sphere.js';\nexport { Cylinder } from './extras/Cylinder.js';\nexport { Triangle } from './extras/Triangle.js';\nexport { Torus } from './extras/Torus.js';\nexport { Orbit } from './extras/Orbit.js';\nexport { Raycast } from './extras/Raycast.js';\nexport { Curve } from './extras/Curve.js';\nexport { Post } from './extras/Post.js';\nexport { Skin } from './extras/Skin.js';\nexport { Animation } from './extras/Animation.js';\nexport { Text } from './extras/Text.js';\nexport { NormalProgram } from './extras/NormalProgram.js';\nexport { Flowmap } from './extras/Flowmap.js';\nexport { GPGPU } from './extras/GPGPU.js';\nexport { Polyline } from './extras/Polyline.js';\nexport { Shadow } from './extras/Shadow.js';\nexport { KTXTexture } from './extras/KTXTexture.js';\nexport { TextureLoader } from './extras/TextureLoader.js';\n// export { GLTFLoader } from './extras/GLTFLoader.js';\nexport { GLTFSkin } from './extras/GLTFSkin.js';\nexport { BasisManager } from './extras/BasisManager.js';\n","\n  import { Renderer, Transform, Vec3, Color, Polyline, Post } from 'ogl';\nconst lines = ()=>{\n    const vertex = /* glsl */ `\n    precision highp float;\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    vec4 getPosition() {\n        vec4 current = vec4(position, 1);\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);\n        vec2 nextScreen = next.xy * aspect;\n        vec2 prevScreen = prev.xy * aspect;\n    \n        // Calculate the tangent direction\n        vec2 tangent = normalize(nextScreen - prevScreen);\n    \n        // Rotate 90 degrees to get the normal\n        vec2 normal = vec2(-tangent.y, tangent.x);\n        normal /= aspect;\n        // Taper the line to be fatter in the middle, and skinny at the ends using the uv.y\n        normal *= mix(1.0, 0.1, pow(abs(uv.y - 0.5) * 2.0, 2.0) );\n        // When the points are on top of each other, shrink the line to avoid artifacts.\n        float dist = length(nextScreen - prevScreen);\n        normal *= smoothstep(0.0, 0.06, dist);\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w* pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n    void main() {\n        gl_Position = getPosition();\n    }\n`;\n\n{\n    const renderer = new Renderer({ dpr: 2 });\n    const gl = renderer.gl;\n    document.body.appendChild(gl.canvas);\n    \n    gl.clearColor(0.945,0.945,0.945, 0.1);\n\n    const scene = new Transform();\n\n    const lines = [];\n\n    function resize() {\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        // We call resize on the polylines to update their resolution uniforms\n        lines.forEach((line) => line.polyline.resize());\n    }\n    window.addEventListener('resize', resize, false);\n\n    // Just a helper function to make the code neater\n    function random(a, b) {\n        const alpha = Math.random();\n        return a * (1.0 - alpha) + b * alpha;\n    }\n\n    // If you're interested in learning about drawing lines with geometry,\n    // go through this detailed article by Matt DesLauriers\n    // https://mattdesl.svbtle.com/drawing-lines-is-hard\n    // It's an excellent breakdown of the approaches and their pitfalls.\n\n    // In this example, we're making screen-space polylines. Basically it\n    // involves creating a geometry of vertices along a path - with two vertices\n    // at each point. Then in the vertex shader, we push each pair apart to\n    // give the line some width.\n\n    // We're going to make a number of different coloured lines for fun.\n    ['#ff0000', '#202020', '#000000', '#1f0000', '#ffffff'].forEach((color, i) => {\n        // Store a few values for each lines' spring movement\n        const line = {\n            spring: random(0.02, 0.3),\n            friction: random(0.4, 0.95),\n            mouseVelocity: new Vec3(),\n            mouseOffset: new Vec3(random(-1, 1) * 0.09),\n        };\n\n        // Create an array of Vec3s (eg [[0, 0, 0], ...])\n        // Note: Only pass in one for each point on the line - the class will handle\n        // the doubling of vertices for the polyline effect.\n        const count = random(30,60);\n        const points = (line.points = []);\n        for (let i = 0; i < count; i++) points.push(new Vec3());\n\n        // Pass in the points, and any custom elements - for example here we've made\n        // custom shaders, and accompanying uniforms.\n        line.polyline = new Polyline(gl, {\n            points,\n            vertex,\n            uniforms: {\n                uColor: { value: new Color(color) },\n                uThickness: { value: random(1, 280) },\n            },\n        });\n\n        line.polyline.mesh.setParent(scene);\n\n        lines.push(line);\n    });\n\n    // Call initial resize after creating the polylines\n    resize();\n\n    // Add handlers to get mouse position\n    const mouse = new Vec3();\n    if ('ontouchstart' in window) {\n        window.addEventListener('touchstart', updateMouse, false);\n        window.addEventListener('touchmove', updateMouse, false);\n    } else {\n        window.addEventListener('mousemove', updateMouse, false);\n    }\n\n    function updateMouse(e) {\n        if (e.changedTouches && e.changedTouches.length) {\n            e.x = e.changedTouches[0].pageX;\n            e.y = e.changedTouches[0].pageY;\n        }\n        if (e.x === undefined) {\n            e.x = e.pageX;\n            e.y = e.pageY;\n        }\n\n        // Get mouse value in -1 to 1 range, with y flipped\n        mouse.set((e.x / gl.renderer.width) * 2 - 1, (e.y / gl.renderer.height) * -2 + 1, 0);\n    }\n\n    const tmp = new Vec3();\n\n    requestAnimationFrame(update);\n    function update(t) {\n        requestAnimationFrame(update);\n\n        lines.forEach((line) => {\n            // Update polyline input points\n            for (let i = line.points.length - 1; i >= 0; i--) {\n                if (!i) {\n                    // For the first point, spring ease it to the mouse position\n                    tmp.copy(mouse).add(line.mouseOffset).sub(line.points[i]).multiply(line.spring);\n                    line.mouseVelocity.add(tmp).multiply(line.friction);\n                    line.points[i].add(line.mouseVelocity);\n                } else {\n                    // The rest of the points ease to the point in front of them, making a line\n                    line.points[i].lerp(line.points[i - 1], 0.8);\n                }\n            }\n            line.polyline.updateGeometry();\n        });\n\n        renderer.render({ scene });\n    }\n}\n  \n}\n\n\nexport default lines;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var core = module.exports = { version: '2.6.12' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","module.exports = require(\"core-js/library/fn/object/define-property\");","var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","const Navbar =()=>{\n    const template = `\n        <nav>\n            <button id=\"home\">About Me </button>\n            <button id=\"experiment\">Experiments</button> \n        </nav>\n       \n    `;\n    return template;\n}\nexport default Navbar;\n","const Contact = () => {\n\n\tconst template = `\n\n        <ul id=\"links\">\n            <a href =\"https://www.instagram.com/cyrstem/\"target=\"_blank\"><img src=\"insta.png\" width=\"20\"></a>\n                <a href =\"http://ec.linkedin.com/in/jacobohz\" target=\"_blank\"><img src=\"in.png\" width=\"20\"></a>\n            <a href =\"https://github.com/cyrstem/\" target=\"_blank\"><img src=\"git.png\" width=\"20\"></a>\n        </ul>\n    `;\n\treturn template;\n    \n};\nexport default Contact;\n","const Home = () => {\n    const template = `\n        <main>\n        <p>Hello, I'm building something new so in the meantime....</p>\n        <p>here is everything you need to know about me.</p>\n        <p>I'm <b>Jacob</b> a <b>Creative Developer</b> and <b>Front-End Developer</b> based in Quito - Ecuador, specialized in building custom digital or physical experiences.</p> \n        <p><b>Self-taught</b> developer, <b>fast learner</b> that works with <b> WebGL, JS, C++, OpenGL, GLSL </b>and recently curious about <b>Machine Learning.</b></p>\n        <div id =\"sites\"> \n        <p> I have collaborated with:</p>\n        <ul>\n        <li>\n        <a href=\"https://activetheory.net/\" target=\"_blank\">\n          <span>Active Theory</span> \n          <span> --- WebGL Developer</span>\n        </a>\n       </li>\n        <li>\n         <a href=\"https://visualgoodness.com/\" target=\"_blank\">\n           <span>Visual Goodness </span> \n           <span> --- WebGL Developer</span>\n         </a>\n        </li>\n        <li>\n           <a href=\"https://myuniguru.com/\" target=\"_blank\">\n             <span>My Uniguru</span>\n             <span> --- FullStack Developer</span>\n           </a>\n         </li>\n         <li>\n         <a href=\"https://smartco.com.ec\" target=\"_blank\"> \n           <span>Smartco </span>\n           <span> --- Unity Developer</span>\n         </a>\n       </li>\n         <li>\n           <a href=\"https://www.yaesta.com\" target=\"_blank\">\n             <span> YaEsta </span>\n             <span> --- Front-end  & Designer</span> \n           </a>\n         </li>\n        </ul>\n     </div>\n     <p>Contact me at <b>cyrstem[at]gmail[dot]com</b></p>  \n    \n    <div id=\"links\">\n     <ul>\n     <a href =\"https://www.instagram.com/cyrstem/\"target=\"_blank\"><img src=\"insta.png\" width=\"20\"></a>\n         <a href =\"http://ec.linkedin.com/in/jacobohz\" target=\"_blank\"><img src=\"in.png\" width=\"20\"></a>\n     <a href =\"https://github.com/cyrstem/\" target=\"_blank\"><img src=\"git.png\" width=\"20\"></a>\n    </ul>\n    </div>\n    \n        </main>\n    `;\n    return template;\n};\nexport default Home;\n","const Portafolio = () => {\n  const template = `\n      <div class =\"sites\"> \n         <ul>\n         <li>\n          <a href=\"https://activetheory.net/\" target=\"_blank\">\n            <span>Active Theory</span> \n            <span>WebGL Developer</span>\n            <span>2021</span>\n          </a>\n         </li>\n         <li>\n            <a href=\"https://myuniguru.com/\" target=\"_blank\">\n              <span>My Uniguru</span>\n              <span>FullStack Developer</span>\n              <span class=\"number\">2020</span>\n            </a>\n          </li>\n          <li>\n          <a href=\"https://smartco.com.ec\" target=\"_blank\"> \n            <span>Smartco </span>\n            <span>Unity Developer</span>\n            <span class=\"number\">2019 - 2020</span>\n          </a>\n        </li>\n          <li>\n            <a href=\"https://www.yaesta.com\" target=\"_blank\">\n              <span> YaEsta </span>\n              <span> Front-end  & Designer</span> \n              <span class=\"number\">2016 - 2018</span>\n            </a>\n          </li>\n          \n      \n          <li>\n            <a href=\"https://www.pachamama.org.ec/en/\" target=\"_blank\">\n              <span> Pachamama</span>\n              <span> Front-end Developer</span>\n              <span class=\"number\">2010 – 2013</span>\n            </a>\n          </li>\n         </ul>\n      </div>\n    `;\n  return template;\n};\n\nexport default Portafolio;\n","const Experiments = () => {\n\tconst template = `\n   <div id=\"portafolio\">\n    <section class=\"info\">\n        <a href=\"https://movingphoton.friendred.studio/\" target=\"_blank\"> <img src=\"poster4.jpg\" width=\"500\" /></a>\n    </section>\n    <section class=\"info\">\n        <h2>Moving Photon</h2>\n        <p>I Help develop and deploy the Virtual Experience for\n            <a href=\"https://friendred.studio/2021/10/07/moving-photon/\" target=\"_blank\">Moving Photon</a> an\n            interactive installation/performance\n            created by installation artist<a href=\"https://friendred.studio\" target=\"_blank\"> Friendred Peng.</a>\n            Participation in Moving Photon can be in 5 different ways, including a Phantom performance,\n            interactive installation, interactive performance,interactive performance with EEG and a <a\n                href=\"https://movingphoton.friendred.studio/\" target=\"_blank\"> remote performance.</a>\n    </section>\n    <section class=\"info\">\n    <h2>Glitch Machine</h2>\n        <p>A custom Glitch App build for<a href=\"https://www.instagram.com/jenna___marsh/ target=\"_blank\">Jenna Marsh</a>, it lets you play with a image applying different filters and export the resulting image for printing</p>\n    </section>\n    <section class=\"info\">\n        <a href=\"https://www.instagram.com/p/CNRC1QZHf66/\"> <img src= \"insta-0.jpg\" width=\"500\"/></a>\n     </section>\n     <section class=\"info\">\n       <a href=\"https://onesimpleidea.itch.io/noizu\" target=\"_blank\"><img src= \"noizu.png\" width=\"500\"/></a>\n    </section>\n    <section class=\"info\">\n    <h2>Noizu</h2>\n        <p>Custom build a Audio player for Linux and mac. on building a light and simple player for linux, based on my old love to sonique and winamp i do miss those programs when ui and ux was actually interesting and different every time this is a preview</p>\n     </section>\n     <section class=\"info\">\n     <h2>PACMAN YaEsta.com</h2>\n     <p>Develop a Physical installation with Mapping and live interaction  for the launch of the e-commerce site YaEsta.com back in the day</p>\n      </section>\n    <section class=\"info\">\n       <a href=\"https://www.youtube.com/watch?v=YHZd0TxPMkY\"> <img src= \"insta-3.jpg\" width=\"500\"/></a>  \n    </section>\n   \n</div>\n    `;\n\treturn template;\n};\nexport default Experiments;\n","import Navbar from \"./interface/Nav\";\nimport Contact from \"./interface/Contact\";\nimport Home from \"./pages/Home\";\nimport Portafolio from \"./pages/Portafolio\";\nimport Experiments from \"./pages/Experiments\";\n\n\nexport default class GUIView{\n    constructor(){}\n\n    init(){\n        this.load();\n        this.addListeners();\n        this.simpleSign();\n        \n        //this.responsive();\n    }\n    load(){\n      \n        \t//load UI and socials media  plus main content\n        document.getElementById(\"ui\").innerHTML = Navbar();\n        document.getElementById(\"container\").innerHTML = Home();\n        // document.getElementById(\"contact\").innerHTML = Contact();\n\n    }\n    addListeners(){\n        window.addEventListener(\"click\", (event) => {\n            let links = event.target.id;\n            switch (links) {\n                case 'home':\n                    document.getElementById(\"container\").innerHTML = Home();\n                    \n                    break;\n                case 'experiment':\n                    document.getElementById(\"container\").innerHTML = Experiments();\n                \n                    break;\n                case 'project':\n                    document.getElementById(\"container\").innerHTML = Portafolio();\n                    \n                    \n                    break;\n            }\n        \n        }, false);\n        \n    }\n    responsive(){\n        \t//responsive screens\n        var x = window.matchMedia(\"(max-width: 700px)\");\n        if (x.matches) {\n            //console.log(\"responsive biatch\");\n            document.addEventListener(\"click\", function (event) {\n                if (event.target.id !== \"experiment\") return;\n                document.getElementById(\"container\").innerHTML = Experiments();\n                document.getElementById(\"ui\").style.top = \"10vh\";\n            });\n        }\n    }\n    simpleSign(){\n        if (window.navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\n            const args = [\n                \"\\n %c -created by Cyrstem \\n\",\n                \"border: 1px solid #000;color: #fff; background: #171717; padding:5px 0;\",\n            ];\n            window.console.log.apply(console, args);\n        } else if (window.console) {\n            window.console.log(\"-created by cyrstem  -\");\n        }\n    }\n}","\nimport \"./style/main.scss\";\nimport lines from \"./js/follow\";\nimport GUIView from \"./js/app\";\n\nconst app = () => {\n\tlet  ui = new GUIView();\n\tui.init();\n\tlines();\n};\n\nwindow.onload = (event) => {\n\tapp();\n};\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}