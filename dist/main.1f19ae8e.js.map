{"version":3,"sources":["../node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js","../node_modules/core-js/library/modules/_global.js","../node_modules/core-js/library/modules/_core.js","../node_modules/core-js/library/modules/_a-function.js","../node_modules/core-js/library/modules/_ctx.js","../node_modules/core-js/library/modules/_is-object.js","../node_modules/core-js/library/modules/_an-object.js","../node_modules/core-js/library/modules/_fails.js","../node_modules/core-js/library/modules/_descriptors.js","../node_modules/core-js/library/modules/_dom-create.js","../node_modules/core-js/library/modules/_ie8-dom-define.js","../node_modules/core-js/library/modules/_to-primitive.js","../node_modules/core-js/library/modules/_object-dp.js","../node_modules/core-js/library/modules/_property-desc.js","../node_modules/core-js/library/modules/_hide.js","../node_modules/core-js/library/modules/_has.js","../node_modules/core-js/library/modules/_export.js","../node_modules/core-js/library/modules/es6.object.define-property.js","../node_modules/core-js/library/fn/object/define-property.js","../node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","../node_modules/@babel/runtime-corejs2/helpers/createClass.js","js/interface/Nav.js","js/interface/Contact.js","js/pages/Home.js","js/pages/Portafolio.js","data.json","js/pages/Experiments.js","js/Stage.js","js/app.js","../node_modules/ogl/src/math/functions/Vec3Func.js","../node_modules/ogl/src/math/Vec3.js","../node_modules/ogl/src/core/Geometry.js","../node_modules/ogl/src/core/Program.js","../node_modules/ogl/src/core/Renderer.js","../node_modules/ogl/src/math/functions/Vec4Func.js","../node_modules/ogl/src/math/functions/QuatFunc.js","../node_modules/ogl/src/math/Quat.js","../node_modules/ogl/src/math/functions/Mat4Func.js","../node_modules/ogl/src/math/Mat4.js","../node_modules/ogl/src/math/functions/EulerFunc.js","../node_modules/ogl/src/math/Euler.js","../node_modules/ogl/src/core/Transform.js","../node_modules/ogl/src/core/Camera.js","../node_modules/ogl/src/math/functions/Mat3Func.js","../node_modules/ogl/src/math/Mat3.js","../node_modules/ogl/src/core/Mesh.js","../node_modules/ogl/src/core/Texture.js","../node_modules/ogl/src/core/RenderTarget.js","../node_modules/ogl/src/math/functions/ColorFunc.js","../node_modules/ogl/src/math/Color.js","../node_modules/ogl/src/math/functions/Vec2Func.js","../node_modules/ogl/src/math/Vec2.js","../node_modules/ogl/src/math/Vec4.js","../node_modules/ogl/src/extras/Plane.js","../node_modules/ogl/src/extras/Box.js","../node_modules/ogl/src/extras/Sphere.js","../node_modules/ogl/src/extras/Cylinder.js","../node_modules/ogl/src/extras/Triangle.js","../node_modules/ogl/src/extras/Torus.js","../node_modules/ogl/src/extras/Orbit.js","../node_modules/ogl/src/extras/Raycast.js","../node_modules/ogl/src/extras/Curve.js","../node_modules/ogl/src/extras/Post.js","../node_modules/ogl/src/extras/Animation.js","../node_modules/ogl/src/extras/Skin.js","../node_modules/ogl/src/extras/Text.js","../node_modules/ogl/src/extras/NormalProgram.js","../node_modules/ogl/src/extras/Flowmap.js","../node_modules/ogl/src/extras/GPGPU.js","../node_modules/ogl/src/extras/Polyline.js","../node_modules/ogl/src/extras/Shadow.js","../node_modules/ogl/src/extras/KTXTexture.js","../node_modules/ogl/src/extras/TextureLoader.js","../node_modules/ogl/src/extras/GLTFAnimation.js","../node_modules/ogl/src/extras/GLTFSkin.js","../node_modules/ogl/src/extras/GLTFLoader.js","../node_modules/ogl/src/extras/BasisManager.js","../node_modules/ogl/src/index.mjs","shaders/frag.glsl","shaders/vert.glsl","js/thingA.js","main.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_classCallCheck","instance","Constructor","TypeError","module","exports","__esModule","require","_Object$defineProperty","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","Navbar","template","Contact","Home","Portafolio","Experiments","Stage","scene","active","console","log","something","stage","GUIView","load","addListeners","simpleSign","document","getElementById","innerHTML","window","addEventListener","event","links","id","x","matchMedia","matches","style","top","navigator","userAgent","toLowerCase","indexOf","args","apply","EPSILON","a","y","z","Math","sqrt","copy","out","set","add","b","subtract","multiply","divide","scale","distance","squaredDistance","squaredLength","negate","inverse","normalize","len","dot","cross","ax","ay","az","bx","by","bz","lerp","t","transformMat4","m","w","scaleRotateMat4","transformMat3","transformQuat","q","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","PI","acos","exactEquals","Vec3","Array","constructor","v","Vec3Func","va","vb","sub","squaredLen","equals","applyMatrix4","mat4","scaleRotateMatrix4","applyQuaternion","clone","fromArray","o","toArray","transformDirection","tempVec3","ID","ATTR_ID","isBoundsWarned","Geometry","gl","attributes","canvas","error","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","buffer","createBuffer","updateAttribute","isInstanced","warn","min","index","max","boundBuffer","bindBuffer","bufferData","STATIC_DRAW","setIndex","value","setDrawRange","setInstancedCount","createVAO","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","name","numLoc","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","draw","mode","TRIANGLES","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","getPosition","position","computeBoundingBox","array","BYTES_PER_ELEMENT","bounds","center","radius","Infinity","l","computeBoundingSphere","maxRadiusSq","remove","deleteVertexArray","deleteBuffer","arrayCacheF32","Program","vertex","fragment","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","blendFunc","blendEquation","src","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","programActive","currentProgram","useProgram","activeUniform","undefined","texture","update","setUniform","textureUnits","push","CW","deleteProgram","flatten","setValue","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","arrayLen","valueLen","warnCount","message","Renderer","createElement","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","extensions","getExtension","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","setViewport","setScissor","scissor","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","identity","setAxisAngle","axis","rad","s","sin","cos","bw","rotateX","rotateY","rotateZ","slerp","omega","cosom","sinom","scale0","scale1","invert","a0","a1","a2","a3","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","vec4","Quat","onChange","QuatFunc","qA","qB","fromMatrix3","matrix3","fromAxisAngle","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","b0","b1","b2","b3","translate","rotate","hypot","c","b12","b20","b21","b22","abs","mat","getScaling","getMaxScaleOnAxis","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat","yx","zx","zy","perspective","fovy","aspect","near","far","f","tan","nf","ortho","left","right","bottom","lr","bt","targetTo","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","multiplyScalar","Mat4","Mat4Func","ma","mb","fromPerspective","fov","fromOrthogonal","fromQuaternion","setPosition","compose","pos","lookAt","fromRotationMatrix","asin","atan2","tmpMat4","Euler","reorder","EulerFunc","Transform","parent","children","matrix","matrixAutoUpdate","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","splice","force","updateMatrix","worldMatrixNeedsUpdate","callback","decompose","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","project","unproject","frustum","constant","invLen","geometry","frustumIntersectsSphere","normal","plane","fromMat4","normalFromMat4","projection","Mat3","Mat3Func","fromMatrix4","fromBasis","vec3a","vec3b","vec3c","getNormalMatrix","Mesh","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","cameraPosition","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","generateMipmap","onUpdate","RenderTarget","depthTexture","createFramebuffer","textures","framebufferTexture2D","COLOR_ATTACHMENT0","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","NAMES","black","white","red","green","blue","fuchsia","cyan","yellow","orange","hexToRGB","hex","rgb","exec","parseInt","numberToRGB","num","parseColor","arguments","Color","isArray","ColorFunc","r","g","transformMat2","transformMat2d","Vec2","Vec2Func","applyMatrix3","mat3","Vec4","Vec4Func","Plane","widthSegments","heightSegments","wSegs","hSegs","numIndices","uv","Uint32Array","buildPlane","u","uDir","vDir","ii","io","segW","segH","iy","ix","d","Box","depthSegments","dSegs","Sphere","ceil","phiStart","phiLength","thetaStart","thetaLength","pStart","pLength","tStart","tLength","iv","te","grid","n","vRow","Cylinder","radiusTop","radiusBottom","radialSegments","openEnded","rSegs","numCaps","indexArray","addHeight","addCap","slope","indexRow","theta","sinTheta","cosTheta","isTop","sign","centerIndex","Triangle","Torus","tube","tubularSegments","arc","vertices","normals","uvs","indices","idx","STATE","NONE","ROTATE","DOLLY","PAN","DOLLY_PAN","tempVec2a","tempVec2b","Orbit","object","element","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","zoomStyle","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","sphericalTarget","spherical","panDelta","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","mouseButtons","ORBIT","ZOOM","getZoomScale","pow","panLeft","panUp","pan","deltaX","deltaY","el","body","targetDistance","clientHeight","dolly","dollyScale","handleMoveRotate","handleMouseMoveDolly","e","clientX","clientY","handleMovePan","handleTouchStartDollyPan","dx","touches","pageX","dy","pageY","handleTouchMoveDollyPan","onMouseDown","button","onMouseMove","onMouseUp","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","onTouchMove","onTouchEnd","onContextMenu","addHandlers","passive","tempVec2c","tempVec3c","tempVec3d","tempVec3e","tempVec3f","tempVec3g","tempVec3h","tempVec3i","tempVec3j","tempVec3k","Raycast","origin","direction","castMouse","mouse","intersectBounds","meshes","output","invWorldMat4","hits","localMaxDistance","localDistance","raycast","intersectSphere","intersectBox","hit","localPoint","point","intersectMeshes","includeUV","includeNormal","closestFaceNormal","faceNormal","barycoord","uvA","uvB","uvC","closestA","closestB","closestC","end","ai","bi","ci","intersectTriangle","localFaceNormal","localNormal","getBarycoord","sphere","ray","tca","d2","radius2","thc","t0","t1","box","tmin","tmax","tYmin","tYmax","tZmin","tZmax","invdirx","invdiry","invdirz","backfaceCulling","edge1","edge2","diff","DdN","DdQxE2","DdE1xQ","QdN","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","denom","invDenom","CATMULLROM","CUBICBEZIER","QUADRATICBEZIER","_a0","_a1","_a2","_a3","getCtrlPoint","points","last","getQuadraticBezierPoint","p0","c0","p1","ret","getCubicBezierPoint","c1","Curve","divisions","_getQuadraticBezierPoints","p","_getCubicBezierPoints","_getCatmullRomPoints","pop","getPoints","Post","targetOnly","options","passes","fbo","read","write","swap","resize","addPass","defaultVertex","defaultFragment","textureUniform","pass","floor","enabledPasses","filter","prevPos","prevRot","prevScl","nextPos","nextRot","nextScl","Animation","objects","elapsed","weight","duration","frames","totalWeight","isSet","floorFrame","blend","prevKey","nextKey","Skin","rig","createBones","createBoneTexture","animations","boneTexture","boneTextureSize","root","bones","bone","bindPose","bindInverse","LN2","boneMatrices","RGBA32F","addAnimation","animation","total","Text","font","text","align","letterSpacing","lineHeight","wordSpacing","wordBreak","_this","glyphs","buffers","fontHeight","baseline","newline","whitespace","parseFont","createGeometry","chars","char","common","base","replace","numChars","layout","cursor","wordCursor","wordWidth","line","newLine","maxTimes","test","glyph","prevGlyph","kern","getKernPairOffset","advance","xadvance","numGlyphs","populateBuffers","texW","scaleW","texH","scaleH","lineIndex","xoffset","yoffset","h","uw","vh","numLines","map","id1","id2","kernings","first","second","amount","NormalProgram","Flowmap","falloff","dissipation","mask","createFBOs","velocity","initProgram","HALF_FLOAT","HALF_FLOAT_OES","RGBA16F","tMap","uFalloff","uAlpha","uDissipation","uAspect","uMouse","uVelocity","GPGPU","initialData","dataLength","coords","floatArray","tmp","Polyline","prev","next","side","ind","updateGeometry","uResolution","resolution","uDPR","uThickness","thickness","uColor","uMiter","miter","Shadow","light","depthProgram","castMeshes","receive","cast","uniformProjection","uniformView","uniformTexture","colorProgram","isForceVisibility","KTXTexture","parseBuffer","ktx","KhronosTextureContainer","mipmaps","glInternalFormat","numberOfMipmapLevels","idCheck","head","DataView","littleEndian","getUint32","glType","numberOfFaces","bytesOfKeyValueData","levelSize","Int32Array","face","cache","supportedExtensions","TextureLoader","support","getSupportedExtensions","ext","prop","includes","cacheID","loaded","loadKTX","loadImage","pvrtc","s3tc","etc1","astc","bc7","detectWebP","fetch","then","res","arrayBuffer","decodeImage","imgBmp","powerOfTwo","close","clearCache","toDataURL","log2","Promise","resolve","isChrome","createImageBitmap","blob","imageOrientation","img","Image","crossOrigin","onload","tmpVec3A","tmpVec3B","tmpVec3C","tmpVec3D","tmpQuatA","tmpQuatB","tmpQuatC","tmpQuatD","GLTFAnimation","loop","startTime","reduce","times","endTime","transform","interpolation","values","val","prevIndex","findIndex","nextIndex","prevVal","prevTan","nextTan","nextVal","cubicSplineInterpolate","t2","t3","s2","s3","s0","s1","GLTFSkin","skeleton","joints","updateUniforms","_worldMatrix","TYPE_ARRAY","Int16Array","TYPE_SIZE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","ATTRIBUTES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","TRANSFORMS","translation","GLTFLoader","setBasisManager","manager","basisManager","dir","desc","parseDesc","parse","asset","version","extensionsRequired","loadBuffers","bufferViews","parseBufferViews","images","parseImages","parseTextures","materials","parseMaterials","skins","parseSkins","parseMeshes","nodes","parseNodes","populateSkins","parseAnimations","scenes","parseScenes","lights","parseLights","json","glb","unpackGLB","header","Error","jsonChunkHeader","jsonByteOffset","jsonByteLength","jsonText","TextDecoder","decode","JSON","binaryChunkHeader","binaryByteOffset","binaryByteLength","binary","resolveURI","uri","all","primitives","accessors","bufferView","isAttribute","componentType","mimeType","bufferIndex","byteOffset","byteStride","extras","TypeArray","elementBytes","originalBuffer","bufferViewIndex","parseTexture","Blob","URL","createObjectURL","ready","textureInfo","sampler","samplerIndex","source","sourceIndex","KHR_texture_basisu","samplers","isBasis","pbrMetallicRoughness","normalTexture","occlusionTexture","emissiveTexture","emissiveFactor","alphaMode","alphaCutoff","doubleSided","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","inverseBindMatrices","parseAccessor","weights","meshIndex","numInstances","skinIndex","isLightmap","skin","lightmap_scale_offset","parsePrimitives","material","materialIndex","targets","gltfMaterial","sparse","bufferByteOffset","componentOffset","componentStride","isInterleaved","newData","lightmapTexture","isFirstInstance","instanceCount","instanceMatrix","lightmapScaleOffset","childIndex","joint","channels","input","inputIndex","outputIndex","nodeIndex","path","nodesIndices","directional","spot","lightsDescArray","KHR_lights_punctual","lightIndex","lightDesc","intensity","range","decay","supportedFormat","BasisManager","workerSrc","getSupportedFormat","onMessage","queue","initWorker","worker","Worker","onmessage","textureResolve","delete","postMessage","promise","Thing","loadShaders","vert","frag","appendChild","clearColor","innerWidth","innerHeight","uTime","requestAnimationFrame","app","init","thing","thingA","bundleURL","getBundleURLCached","getBundleURL","err","stack","getBaseURL","url","bundle","updateLink","link","newLink","cloneNode","href","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","querySelectorAll","OVERLAY_ID","OldModule","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","handled","assets","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","overlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","some","cb"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9DA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;;ACLAD,MAAM,CAACC,OAAP,GAAiBE,OAAO,CAAC,2CAAD,CAAxB;;ACAA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,uDAAD,CAApC;;AAEA,SAASE,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AACxC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AACAE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AACAD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AACA,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;;AAE3BT,IAAAA,sBAAsB,CAACE,MAAD,EAASI,UAAU,CAACI,GAApB,EAAyBJ,UAAzB,CAAtB;AACD;AACF;;AAED,SAASK,YAAT,CAAsBjB,WAAtB,EAAmCkB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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var core = module.exports = { version: '2.6.12' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","module.exports = require(\"core-js/library/fn/object/define-property\");","var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n\n  _Object$defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","const Navbar =()=>{\n    const template = `\n        <nav>\n            <button id=\"home\">About Me </button>\n            <button id=\"experiment\">Experiments</button> \n        </nav>\n       \n    `;\n    return template;\n}\nexport default Navbar;\n","const Contact = () => {\n\n\tconst template = `\n\n        <ul id=\"links\">\n            <a href =\"https://www.instagram.com/cyrstem/\"target=\"_blank\"><img src=\"insta.png\"></a>\n                <a href =\"http://ec.linkedin.com/in/jacobohz\" target=\"_blank\"><img src=\"in.png\"></a>\n            <a href =\"https://github.com/cyrstem/\" target=\"_blank\"><img src=\"git.png\"></a>\n        </ul>\n    `;\n\treturn template;\n    \n};\nexport default Contact;\n","const Home = () => {\n    const template = `\n    <main>\n        <div id=\"content\">\n            <p>Hello...</p>\n            <p>I'm <b>Jacob</b> a <b>Creative Developer</b> and <b>Front-End Developer</b> based in Quito - Ecuador, specialize on building custom digital or physical experiences.</p> \n            <p><b>Self-taught</b> developer, <b>fast learner</b> that works with<b> WebGL, JS, C++, OpenGL, GLSL </b>and recently curious about <b>Machine Learning.</b></p>\n            <div id =\"sites\"> \n            <p> I have worked for:</p>\n            <ul>\n            <li>\n             <a href=\"https://activetheory.net/\" target=\"_blank\">\n               <span>Active Theory</span> \n               <span>WebGL Developer</span>\n               <span>2021</span>\n             </a>\n            </li>\n            <li>\n               <a href=\"https://myuniguru.com/\" target=\"_blank\">\n                 <span>My Uniguru</span>\n                 <span>FullStack Developer</span>\n                 <span class=\"number\">2020</span>\n               </a>\n             </li>\n             <li>\n             <a href=\"https://smartco.com.ec\" target=\"_blank\"> \n               <span>Smartco </span>\n               <span>Unity Developer</span>\n               <span class=\"number\">2019 - 2020</span>\n             </a>\n           </li>\n             <li>\n               <a href=\"https://www.yaesta.com\" target=\"_blank\">\n                 <span> YaEsta </span>\n                 <span> Front-end  & Designer</span> \n                 <span class=\"number\">2016 - 2018</span>\n               </a>\n             </li>\n            </ul>\n         </div>\n         <p>Contact me at <b>cyrstem[at]gmail[dot]com</b></p>  \n        </div>\n    </main>\n    `;\n    return template;\n};\nexport default Home;\n","const Portafolio = () => {\n  const template = `\n      <div class =\"sites\"> \n         <ul>\n         <li>\n          <a href=\"https://activetheory.net/\" target=\"_blank\">\n            <span>Active Theory</span> \n            <span>WebGL Developer</span>\n            <span>2021</span>\n          </a>\n         </li>\n         <li>\n            <a href=\"https://myuniguru.com/\" target=\"_blank\">\n              <span>My Uniguru</span>\n              <span>FullStack Developer</span>\n              <span class=\"number\">2020</span>\n            </a>\n          </li>\n          <li>\n          <a href=\"https://smartco.com.ec\" target=\"_blank\"> \n            <span>Smartco </span>\n            <span>Unity Developer</span>\n            <span class=\"number\">2019 - 2020</span>\n          </a>\n        </li>\n          <li>\n            <a href=\"https://www.yaesta.com\" target=\"_blank\">\n              <span> YaEsta </span>\n              <span> Front-end  & Designer</span> \n              <span class=\"number\">2016 - 2018</span>\n            </a>\n          </li>\n          \n      \n          <li>\n            <a href=\"https://www.pachamama.org.ec/en/\" target=\"_blank\">\n              <span> Pachamama</span>\n              <span> Front-end Developer</span>\n              <span class=\"number\">2010 – 2013</span>\n            </a>\n          </li>\n         </ul>\n      </div>\n    `;\n  return template;\n};\n\nexport default Portafolio;\n","module.exports = {\n    \"projects\": [\n        {\n            \"title\": \"Moving Photon\",\n            \"description\": \"I Help develop and deploy the Virtual Experience for Moving Photon an interactive installation/performance created by installation artistFriendred Peng. Participation in Moving Photon can be in 5 different ways, including a Phantom performance, interactive installation, interactive performance,interactive performance with EEG and a remote performance.\"\n        },\n        {\n            \"title\": \"Glitch Machine\",\n            \"description\": \"   as\"\n        },\n        {\n            \"title\": \"Noizu\",\n            \"description\": \"   as\"\n        }\n    ]\n}\n;","\nimport data from '/data.json';\n\n//console.log(data.projects[0])\n\n\n\nconst Experiments = () => {\n\tconst template = `\n   <div id=\"portafolio\">\n    <section class=\"proj\">\n        <a href=\"https://movingphoton.friendred.studio/\" target=\"_blank\"> <img src=\"poster4.jpg\" width=\"500\" /></a>\n    </section>\n    <section class=\"info\">\n        <h2>Moving Photon</h2>\n        <p>I Help develop and deploy the Virtual Experience for\n            <a href=\"https://friendred.studio/2021/10/07/moving-photon/\" target=\"_blank\"> Moving Photon</a> an\n            interactive installation/performance\n            created by installation artist<a href=\"https://friendred.studio\" target=\"_blank\"> Friendred Peng.</a>\n            Participation in Moving Photon can be in 5 different ways, including a Phantom performance,\n            interactive installation, interactive performance,interactive performance with EEG and a <a\n                href=\"https://movingphoton.friendred.studio/\" target=\"_blank\"> remote performance.</a>\n    </section>\n    <section class=\"info\">\n    <h2>Glitch MAchine</h2>\n        <p>A custom Glitch App build for<a href=\"https://www.instagram.com/jenna___marsh/ target=\"_blank\"> Jenna Marsh </a>, it lets you play with a image applying different filters and export the resulting image for printing</p>\n    </section>\n    <section class=\"proj\">\n        <a href=\"https://www.instagram.com/p/CNRC1QZHf66/\"> <img src= \"insta-0.jpg\" width=\"500\"/></a>\n     </section>\n     <section class=\"proj\">\n       <a href=\"https://onesimpleidea.itch.io/noizu\" target=\"_blank\"><img src= \"noizu.png\" width=\"500\"/></a>\n    </section>\n    <section class=\"info\">\n    <h2>Noizu</h2>\n        <p>Custom build a Audio player for Linux and mac. on building a light and simple player for linux, based on my old love to sonique and winamp i do miss those programs when ui and ux was actually interesting and different every time this is a preview</p>\n     </section>\n     <section class=\"info\">\n     <h2>PACMan YaEsta.com</h2>\n     <p>Develop a Physical installation with Mapping and live interaction  for the launch of the e-commerce site YaEsta.com back in the day</p>\n      </section>\n    <section class=\"proj\">\n       <a href=\"https://www.youtube.com/watch?v=YHZd0TxPMkY\"> <img src= \"insta-3.jpg\" width=\"500\"/></a>  \n    </section>\n   \n</div>\n    `;\n\treturn template;\n};\n\nexport default Experiments;\n","export default class Stage {\n    constructor({scene = 'scene', active =false}){\n        this.scene = scene\n        this.active = true\n        console.log(this.scene, \"|\", this.active)\n    }\n    init(){\n        //something\n    }\n    load(){\n        //something\n    }\n    remove(){\n        //something\n    }\n    drar(){\n        //soemthign\n\n    }\n    addEventListener(something){\n        \n    }\n}","import Navbar from \"./interface/Nav\";\nimport Contact from \"./interface/Contact\";\nimport Home from \"./pages/Home\";\nimport Portafolio from \"./pages/Portafolio\";\nimport Experiments from \"./pages/Experiments\";\nimport Stage  from \"./Stage\"\n\n\nlet stage = null\nexport default class GUIView{\n    constructor(){}\n\n    init(){\n        this.load();\n        this.addListeners();\n        this.simpleSign();\n        \n        //this.responsive();\n    }\n    load(){\n        \t//load UI and socials media  plus main content\n        document.getElementById(\"ui\").innerHTML = Navbar();\n        document.getElementById(\"container\").innerHTML = Home();\n        document.getElementById(\"contact\").innerHTML = Contact();\n\n    }\n    addListeners(){\n        window.addEventListener(\"click\", (event) => {\n            let links = event.target.id;\n           \n            switch (links) {\n                case 'home':\n                    document.getElementById(\"container\").innerHTML = Home();\n                     stage = new Stage({scene:\"sectionA\",active:true})\n                    break;\n                case 'experiment':\n                    document.getElementById(\"container\").innerHTML = Experiments();\n                    stage = new Stage({scene:\"sectionB\",active:false})\n                    break;\n                case 'project':\n                    document.getElementById(\"container\").innerHTML = Portafolio();\n                    stage = new Stage({scene:\"sectionC\",active:true})\n                    break;\n            }\n        \n        }, false);\n        \n    }\n    responsive(){\n        \t//responsive screens\n        var x = window.matchMedia(\"(max-width: 700px)\");\n        if (x.matches) {\n            //console.log(\"responsive biatch\");\n            document.addEventListener(\"click\", function (event) {\n                if (event.target.id !== \"experiment\") return;\n                document.getElementById(\"container\").innerHTML = Experiments();\n                document.getElementById(\"ui\").style.top = \"10vh\";\n            });\n        }\n    }\n\n    simpleSign(){\n        if (window.navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\n            const args = [\n                \"\\n %c ->> created by cyrstem more info on onesimpleidea.xyz\\n\",\n                \"border: 1px solid #000;color: #fff; background: #171717; padding:5px 0;\",\n            ];\n            window.console.log.apply(console, args);\n        } else if (window.console) {\n            window.console.log(\"-created by cyrstem  -\");\n        }\n    }\n}","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data - although needs position data for bounds calculation\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n        this.getExtension('WEBGL_compressed_texture_astc');\n        this.getExtension('EXT_texture_compression_bptc');\n        this.getExtension('WEBGL_compressed_texture_s3tc');\n        this.getExtension('WEBGL_compressed_texture_etc1');\n        this.getExtension('WEBGL_compressed_texture_pvrtc');\n        this.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","// TODO: test stencil and depth\nimport { Texture } from './Texture.js';\n\nexport class RenderTarget {\n    constructor(\n        gl,\n        {\n            width = gl.canvas.width,\n            height = gl.canvas.height,\n            target = gl.FRAMEBUFFER,\n            color = 1, // number of color attachments\n            depth = true,\n            stencil = false,\n            depthTexture = false, // note - stencil breaks\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = minFilter,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            unpackAlignment,\n            premultiplyAlpha,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.buffer = this.gl.createFramebuffer();\n        this.target = target;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        this.textures = [];\n        const drawBuffers = [];\n\n        // create and attach required num of color textures\n        for (let i = 0; i < color; i++) {\n            this.textures.push(\n                new Texture(gl, {\n                    width,\n                    height,\n                    wrapS,\n                    wrapT,\n                    minFilter,\n                    magFilter,\n                    type,\n                    format,\n                    internalFormat,\n                    unpackAlignment,\n                    premultiplyAlpha,\n                    flipY: false,\n                    generateMipmaps: false,\n                })\n            );\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        // For multi-render targets shader access\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n        // alias for majority of use cases\n        this.texture = this.textures[0];\n\n        // note depth textures break stencil - so can't use together\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n            this.depthTexture = new Texture(gl, {\n                width,\n                height,\n                minFilter: this.gl.NEAREST,\n                magFilter: this.gl.NEAREST,\n                format: this.gl.DEPTH_COMPONENT,\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n                type: this.gl.UNSIGNED_INT,\n            });\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            // Render buffers\n            if (depth && !stencil) {\n                this.depthBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n            }\n\n            if (stencil && !depth) {\n                this.stencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n            }\n\n            if (depth && stencil) {\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n\n    setSize(width, height) {\n        if (this.width === width && this.height === height) return;\n\n        this.width = width;\n        this.height = height;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        for (let i = 0; i < this.textures.length; i++) {\n            this.textures[i].width = width;\n            this.textures[i].height = height;\n            this.textures[i].needsUpdate = true;\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n        }\n\n        if (this.depthTexture) {\n            this.depthTexture.width = width;\n            this.depthTexture.height = height;\n            this.depthTexture.needsUpdate = true;\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            if (this.depthBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n            }\n\n            if (this.stencilBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n            }\n\n            if (this.depthStencilBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n}\n","const NAMES = {\n    black: '#000000',\n    white: '#ffffff',\n    red: '#ff0000',\n    green: '#00ff00',\n    blue: '#0000ff',\n    fuchsia: '#ff00ff',\n    cyan: '#00ffff',\n    yellow: '#ffff00',\n    orange: '#ff8000',\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\n}\n\nexport function parseColor(color) {\n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n\n    // Hex\n    if (color[0] === '#') return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","import * as Vec4Func from './functions/Vec4Func.js';\n\nexport class Vec4 extends Array {\n    constructor(x = 0, y = x, z = x, w = x) {\n        super(x, y, z, w);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set w(v) {\n        this[3] = v;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        Vec4Func.set(this, x, y, z, w);\n        return this;\n    }\n\n    copy(v) {\n        Vec4Func.copy(this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec4Func.normalize(this, this);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = numIndices > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Plane } from './Plane.js';\n\nexport class Box extends Geometry {\n    constructor(gl, { width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const dSegs = depthSegments;\n\n        const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n        const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n\n        // left, right\n        Plane.buildPlane(position, normal, uv, index, depth, height, width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, depth, height, -width, dSegs, hSegs, 2, 1, 0, 1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        // top, bottom\n        Plane.buildPlane(position, normal, uv, index, width, depth, height, dSegs, wSegs, 0, 2, 1, 1, 1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, depth, -height, dSegs, wSegs, 0, 2, 1, 1, -1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        // front, back\n        Plane.buildPlane(position, normal, uv, index, width, height, -depth, wSegs, hSegs, 0, 1, 2, -1, -1, i, ii);\n        i += (wSegs + 1) * (hSegs + 1);\n        ii += wSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, 0, 1, 2, 1, -1, i, ii);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(\n        gl,\n        {\n            radius = 0.5,\n            widthSegments = 16,\n            heightSegments = Math.ceil(widthSegments * 0.5),\n            phiStart = 0,\n            phiLength = Math.PI * 2,\n            thetaStart = 0,\n            thetaLength = Math.PI,\n            attributes = {},\n        } = {}\n    ) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3] = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3] = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2] = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3] = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3] = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Cylinder extends Geometry {\n    constructor(\n        gl,\n        {\n            radiusTop = 0.5,\n            radiusBottom = 0.5,\n            height = 1,\n            radialSegments = 8,\n            heightSegments = 1,\n            openEnded = false,\n            thetaStart = 0,\n            thetaLength = Math.PI * 2,\n            attributes = {},\n        } = {}\n    ) {\n        const rSegs = radialSegments;\n        const hSegs = heightSegments;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const numCaps = openEnded ? 0 : radiusBottom && radiusTop ? 2 : 1;\n        const num = (rSegs + 1) * (hSegs + 1 + numCaps) + numCaps;\n        const numIndices = rSegs * hSegs * 6 + numCaps * rSegs * 3;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n        const indexArray = [];\n\n        addHeight();\n        if (!openEnded) {\n            if (radiusTop) addCap(true);\n            if (radiusBottom) addCap(false);\n        }\n\n        function addHeight() {\n            let x, y;\n            const n = new Vec3();\n            const slope = (radiusBottom - radiusTop) / height;\n\n            for (y = 0; y <= hSegs; y++) {\n                const indexRow = [];\n                const v = y / hSegs;\n\n                const r = v * (radiusBottom - radiusTop) + radiusTop;\n                for (x = 0; x <= rSegs; x++) {\n                    const u = x / rSegs;\n                    const theta = u * tLength + tStart;\n                    const sinTheta = Math.sin(theta);\n                    const cosTheta = Math.cos(theta);\n\n                    position.set([r * sinTheta, (0.5 - v) * height, r * cosTheta], i * 3);\n                    n.set(sinTheta, slope, cosTheta).normalize();\n                    normal.set([n.x, n.y, n.z], i * 3);\n                    uv.set([u, 1 - v], i * 2);\n                    indexRow.push(i++);\n                }\n                indexArray.push(indexRow);\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                for (y = 0; y < hSegs; y++) {\n                    const a = indexArray[y][x];\n                    const b = indexArray[y + 1][x];\n                    const c = indexArray[y + 1][x + 1];\n                    const d = indexArray[y][x + 1];\n\n                    index.set([a, b, d, b, c, d], ii * 3);\n                    ii += 2;\n                }\n            }\n        }\n\n        function addCap(isTop) {\n            let x;\n            const r = isTop === true ? radiusTop : radiusBottom;\n            const sign = isTop === true ? 1 : -1;\n\n            const centerIndex = i;\n            position.set([0, 0.5 * height * sign, 0], i * 3);\n            normal.set([0, sign, 0], i * 3);\n            uv.set([0.5, 0.5], i * 2);\n            i++;\n\n            for (x = 0; x <= rSegs; x++) {\n                const u = x / rSegs;\n                const theta = u * tLength + tStart;\n                const cosTheta = Math.cos(theta);\n                const sinTheta = Math.sin(theta);\n\n                position.set([r * sinTheta, 0.5 * height * sign, r * cosTheta], i * 3);\n                normal.set([0, sign, 0], i * 3);\n                uv.set([cosTheta * 0.5 + 0.5, sinTheta * 0.5 * sign + 0.5], i * 2);\n                i++;\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                const j = centerIndex + x + 1;\n                if (isTop) {\n                    index.set([j, j + 1, centerIndex], ii * 3);\n                } else {\n                    index.set([j + 1, j, centerIndex], ii * 3);\n                }\n                ii++;\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Triangle extends Geometry {\n    constructor(gl, { attributes = {} } = {}) {\n        Object.assign(attributes, {\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// https://github.com/mrdoob/three.js/blob/master/src/geometries/TorusGeometry.js\n\nimport { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Torus extends Geometry {\n    constructor(gl, { radius = 0.5, tube = 0.2, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2, attributes = {} } = {}) {\n        const num = (radialSegments + 1) * (tubularSegments + 1);\n        const numIndices = radialSegments * tubularSegments * 6;\n\n        const vertices = new Float32Array(num * 3);\n        const normals = new Float32Array(num * 3);\n        const uvs = new Float32Array(num * 2);\n        const indices = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        const center = new Vec3();\n        const vertex = new Vec3();\n        const normal = new Vec3();\n\n        // generate vertices, normals and uvs\n        let idx = 0;\n        for (let j = 0; j <= radialSegments; j++) {\n            for (let i = 0; i <= tubularSegments; i++, idx++) {\n                const u = (i / tubularSegments) * arc;\n                const v = (j / radialSegments) * Math.PI * 2;\n\n                // vertex\n                vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n                vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n                vertex.z = tube * Math.sin(v);\n\n                vertices.set([vertex.x, vertex.y, vertex.z], idx * 3);\n\n                // normal\n                center.x = radius * Math.cos(u);\n                center.y = radius * Math.sin(u);\n                normal.sub(vertex, center).normalize();\n\n                normals.set([normal.x, normal.y, normal.z], idx * 3);\n\n                // uv\n                uvs.set([i / tubularSegments, j / radialSegments], idx * 2);\n            }\n        }\n\n        // generate indices\n        idx = 0;\n        for (let j = 1; j <= radialSegments; j++) {\n            for (let i = 1; i <= tubularSegments; i++, idx++) {\n                // indices\n                const a = (tubularSegments + 1) * j + i - 1;\n                const b = (tubularSegments + 1) * (j - 1) + i - 1;\n                const c = (tubularSegments + 1) * (j - 1) + i;\n                const d = (tubularSegments + 1) * j + i;\n\n                // faces\n                indices.set([a, b, d, b, c, d], idx * 6);\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: vertices },\n            normal: { size: 3, data: normals },\n            uv: { size: 2, data: uvs },\n            index: { data: indices },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        zoomStyle = 'dolly',\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n    this.zoomStyle = zoomStyle;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    const dolly = (dollyScale) => {\n        if (this.zoomStyle === 'dolly') sphericalDelta.radius /= dollyScale;\n        else {\n            object.fov /= dollyScale;\n            if (object.type === 'orthographic') object.orthographic();\n            else object.perspective();\n        }\n    };\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","// TODO: barycentric code shouldn't be here, but where?\n// TODO: SphereCast?\n\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\nconst tempVec2c = new Vec2();\n\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\nconst tempVec3c = new Vec3();\nconst tempVec3d = new Vec3();\nconst tempVec3e = new Vec3();\nconst tempVec3f = new Vec3();\nconst tempVec3g = new Vec3();\nconst tempVec3h = new Vec3();\nconst tempVec3i = new Vec3();\nconst tempVec3j = new Vec3();\nconst tempVec3k = new Vec3();\n\nconst tempMat4 = new Mat4();\n\nexport class Raycast {\n    constructor() {\n        this.origin = new Vec3();\n        this.direction = new Vec3();\n    }\n\n    // Set ray from mouse unprojection\n    castMouse(camera, mouse = [0, 0]) {\n        if (camera.type === 'orthographic') {\n            // Set origin\n            // Since camera is orthographic, origin is not the camera position\n            const { left, right, bottom, top, zoom } = camera;\n            const x = left / zoom + ((right - left) / zoom) * (mouse[0] * 0.5 + 0.5);\n            const y = bottom / zoom + ((top - bottom) / zoom) * (mouse[1] * 0.5 + 0.5);\n            this.origin.set(x, y, 0);\n            this.origin.applyMatrix4(camera.worldMatrix);\n\n            // Set direction\n            // https://community.khronos.org/t/get-direction-from-transformation-matrix-or-quat/65502/2\n            this.direction.x = -camera.worldMatrix[8];\n            this.direction.y = -camera.worldMatrix[9];\n            this.direction.z = -camera.worldMatrix[10];\n        } else {\n            // Set origin\n            camera.worldMatrix.getTranslation(this.origin);\n\n            // Set direction\n            this.direction.set(mouse[0], mouse[1], 0.5);\n            camera.unproject(this.direction);\n            this.direction.sub(this.origin).normalize();\n        }\n    }\n\n    intersectBounds(meshes, { maxDistance, output = [] } = {}) {\n        if (!Array.isArray(meshes)) meshes = [meshes];\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n\n        const hits = output;\n        hits.length = 0;\n\n        meshes.forEach((mesh) => {\n            // Create bounds\n            if (!mesh.geometry.bounds || mesh.geometry.bounds.radius === Infinity) mesh.geometry.computeBoundingSphere();\n            const bounds = mesh.geometry.bounds;\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            // Break out early if bounds too far away from origin\n            if (maxDistance) {\n                if (origin.distance(bounds.center) - bounds.radius > localMaxDistance) return;\n            }\n\n            let localDistance = 0;\n\n            // Check origin isn't inside bounds before testing intersection\n            if (mesh.geometry.raycast === 'sphere') {\n                if (origin.distance(bounds.center) > bounds.radius) {\n                    localDistance = this.intersectSphere(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            } else {\n                if (\n                    origin.x < bounds.min.x ||\n                    origin.x > bounds.max.x ||\n                    origin.y < bounds.min.y ||\n                    origin.y > bounds.max.y ||\n                    origin.z < bounds.min.z ||\n                    origin.z > bounds.max.z\n                ) {\n                    localDistance = this.intersectBox(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            }\n\n            if (maxDistance && localDistance > localMaxDistance) return;\n\n            // Create object on mesh to avoid generating lots of objects\n            if (!mesh.hit) mesh.hit = { localPoint: new Vec3(), point: new Vec3() };\n\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            hits.push(mesh);\n        });\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectMeshes(meshes, { cullFace = true, maxDistance, includeUV = true, includeNormal = true, output = [] } = {}) {\n        // Test bounds first before testing geometry\n        const hits = this.intersectBounds(meshes, { maxDistance, output });\n        if (!hits.length) return hits;\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n        const a = tempVec3c;\n        const b = tempVec3d;\n        const c = tempVec3e;\n        const closestFaceNormal = tempVec3f;\n        const faceNormal = tempVec3g;\n        const barycoord = tempVec3h;\n        const uvA = tempVec2a;\n        const uvB = tempVec2b;\n        const uvC = tempVec2c;\n\n        for (let i = hits.length - 1; i >= 0; i--) {\n            const mesh = hits[i];\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            let localDistance = 0;\n            let closestA, closestB, closestC;\n\n            const geometry = mesh.geometry;\n            const attributes = geometry.attributes;\n            const index = attributes.index;\n            const position = attributes.position;\n\n            const start = Math.max(0, geometry.drawRange.start);\n            const end = Math.min(index ? index.count : position.count, geometry.drawRange.start + geometry.drawRange.count);\n            const stride = position.stride ? position.stride / position.data.BYTES_PER_ELEMENT : position.size;\n\n            for (let j = start; j < end; j += 3) {\n                // Position attribute indices for each triangle\n                const ai = index ? index.data[j] : j;\n                const bi = index ? index.data[j + 1] : j + 1;\n                const ci = index ? index.data[j + 2] : j + 2;\n\n                a.fromArray(position.data, ai * stride);\n                b.fromArray(position.data, bi * stride);\n                c.fromArray(position.data, ci * stride);\n\n                const distance = this.intersectTriangle(a, b, c, cullFace, origin, direction, faceNormal);\n                if (!distance) continue;\n\n                // Too far away\n                if (maxDistance && distance > localMaxDistance) continue;\n\n                if (!localDistance || distance < localDistance) {\n                    localDistance = distance;\n                    closestA = ai;\n                    closestB = bi;\n                    closestC = ci;\n                    closestFaceNormal.copy(faceNormal);\n                }\n            }\n\n            if (!localDistance) hits.splice(i, 1);\n\n            // Update hit values from bounds-test\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            // Add unique hit objects on mesh to avoid generating lots of objects\n            if (!mesh.hit.faceNormal) {\n                mesh.hit.localFaceNormal = new Vec3();\n                mesh.hit.faceNormal = new Vec3();\n                mesh.hit.uv = new Vec2();\n                mesh.hit.localNormal = new Vec3();\n                mesh.hit.normal = new Vec3();\n            }\n\n            // Add face normal data which is already computed\n            mesh.hit.localFaceNormal.copy(closestFaceNormal);\n            mesh.hit.faceNormal.copy(mesh.hit.localFaceNormal).transformDirection(mesh.worldMatrix);\n\n            // Optional data, opt out to optimise a bit if necessary\n            if (includeUV || includeNormal) {\n                // Calculate barycoords to find uv values at hit point\n                a.fromArray(position.data, closestA * 3);\n                b.fromArray(position.data, closestB * 3);\n                c.fromArray(position.data, closestC * 3);\n                this.getBarycoord(mesh.hit.localPoint, a, b, c, barycoord);\n            }\n\n            if (includeUV && attributes.uv) {\n                uvA.fromArray(attributes.uv.data, closestA * 2);\n                uvB.fromArray(attributes.uv.data, closestB * 2);\n                uvC.fromArray(attributes.uv.data, closestC * 2);\n                mesh.hit.uv.set(\n                    uvA.x * barycoord.x + uvB.x * barycoord.y + uvC.x * barycoord.z,\n                    uvA.y * barycoord.x + uvB.y * barycoord.y + uvC.y * barycoord.z\n                );\n            }\n\n            if (includeNormal && attributes.normal) {\n                a.fromArray(attributes.normal.data, closestA * 3);\n                b.fromArray(attributes.normal.data, closestB * 3);\n                c.fromArray(attributes.normal.data, closestC * 3);\n                mesh.hit.localNormal.set(\n                    a.x * barycoord.x + b.x * barycoord.y + c.x * barycoord.z,\n                    a.y * barycoord.x + b.y * barycoord.y + c.y * barycoord.z,\n                    a.z * barycoord.x + b.z * barycoord.y + c.z * barycoord.z\n                );\n\n                mesh.hit.normal.copy(mesh.hit.localNormal).transformDirection(mesh.worldMatrix);\n            }\n        }\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectSphere(sphere, origin = this.origin, direction = this.direction) {\n        const ray = tempVec3c;\n        ray.sub(sphere.center, origin);\n        const tca = ray.dot(direction);\n        const d2 = ray.dot(ray) - tca * tca;\n        const radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return 0;\n        const thc = Math.sqrt(radius2 - d2);\n        const t0 = tca - thc;\n        const t1 = tca + thc;\n        if (t0 < 0 && t1 < 0) return 0;\n        if (t0 < 0) return t1;\n        return t0;\n    }\n\n    // Ray AABB - Ray Axis aligned bounding box testing\n    intersectBox(box, origin = this.origin, direction = this.direction) {\n        let tmin, tmax, tYmin, tYmax, tZmin, tZmax;\n        const invdirx = 1 / direction.x;\n        const invdiry = 1 / direction.y;\n        const invdirz = 1 / direction.z;\n        const min = box.min;\n        const max = box.max;\n        tmin = ((invdirx >= 0 ? min.x : max.x) - origin.x) * invdirx;\n        tmax = ((invdirx >= 0 ? max.x : min.x) - origin.x) * invdirx;\n        tYmin = ((invdiry >= 0 ? min.y : max.y) - origin.y) * invdiry;\n        tYmax = ((invdiry >= 0 ? max.y : min.y) - origin.y) * invdiry;\n        if (tmin > tYmax || tYmin > tmax) return 0;\n        if (tYmin > tmin) tmin = tYmin;\n        if (tYmax < tmax) tmax = tYmax;\n        tZmin = ((invdirz >= 0 ? min.z : max.z) - origin.z) * invdirz;\n        tZmax = ((invdirz >= 0 ? max.z : min.z) - origin.z) * invdirz;\n        if (tmin > tZmax || tZmin > tmax) return 0;\n        if (tZmin > tmin) tmin = tZmin;\n        if (tZmax < tmax) tmax = tZmax;\n        if (tmax < 0) return 0;\n        return tmin >= 0 ? tmin : tmax;\n    }\n\n    intersectTriangle(a, b, c, backfaceCulling = true, origin = this.origin, direction = this.direction, normal = tempVec3g) {\n        // from https://github.com/mrdoob/three.js/blob/master/src/math/Ray.js\n        // which is from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        const edge1 = tempVec3h;\n        const edge2 = tempVec3i;\n        const diff = tempVec3j;\n        edge1.sub(b, a);\n        edge2.sub(c, a);\n        normal.cross(edge1, edge2);\n        let DdN = direction.dot(normal);\n        if (!DdN) return 0;\n        let sign;\n        if (DdN > 0) {\n            if (backfaceCulling) return 0;\n            sign = 1;\n        } else {\n            sign = -1;\n            DdN = -DdN;\n        }\n        diff.sub(origin, a);\n        let DdQxE2 = sign * direction.dot(edge2.cross(diff, edge2));\n        if (DdQxE2 < 0) return 0;\n        let DdE1xQ = sign * direction.dot(edge1.cross(diff));\n        if (DdE1xQ < 0) return 0;\n        if (DdQxE2 + DdE1xQ > DdN) return 0;\n        let QdN = -sign * diff.dot(normal);\n        if (QdN < 0) return 0;\n        return QdN / DdN;\n    }\n\n    getBarycoord(point, a, b, c, target = tempVec3h) {\n        // From https://github.com/mrdoob/three.js/blob/master/src/math/Triangle.js\n        // static/instance method to calculate barycentric coordinates\n        // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n        const v0 = tempVec3i;\n        const v1 = tempVec3j;\n        const v2 = tempVec3k;\n        v0.sub(c, a);\n        v1.sub(b, a);\n        v2.sub(point, a);\n        const dot00 = v0.dot(v0);\n        const dot01 = v0.dot(v1);\n        const dot02 = v0.dot(v2);\n        const dot11 = v1.dot(v1);\n        const dot12 = v1.dot(v2);\n        const denom = dot00 * dot11 - dot01 * dot01;\n        if (denom === 0) return target.set(-2, -1, -1);\n        const invDenom = 1 / denom;\n        const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n        return target.set(1 - u - v, v, u);\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\nconst CATMULLROM = 'catmullrom';\nconst CUBICBEZIER = 'cubicbezier';\nconst QUADRATICBEZIER = 'quadraticbezier';\n\n// temp\nconst _a0 = new Vec3(),\n    _a1 = new Vec3(),\n    _a2 = new Vec3(),\n    _a3 = new Vec3();\n\n/**\n * Get the control points of cubic bezier curve.\n * @param {*} i\n * @param {*} a\n * @param {*} b\n */\nfunction getCtrlPoint(points, i, a = 0.168, b = 0.168) {\n    if (i < 1) {\n        _a0.sub(points[1], points[0]).scale(a).add(points[0]);\n    } else {\n        _a0.sub(points[i + 1], points[i - 1])\n            .scale(a)\n            .add(points[i]);\n    }\n    if (i > points.length - 3) {\n        const last = points.length - 1;\n        _a1.sub(points[last - 1], points[last])\n            .scale(b)\n            .add(points[last]);\n    } else {\n        _a1.sub(points[i], points[i + 2])\n            .scale(b)\n            .add(points[i + 1]);\n    }\n    return [_a0.clone(), _a1.clone()];\n}\n\nfunction getQuadraticBezierPoint(t, p0, c0, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 2);\n    _a1.copy(c0).scale(2 * k * t);\n    _a2.copy(p1).scale(t ** 2);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2);\n    return ret;\n}\n\nfunction getCubicBezierPoint(t, p0, c0, c1, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 3);\n    _a1.copy(c0).scale(3 * k ** 2 * t);\n    _a2.copy(c1).scale(3 * k * t ** 2);\n    _a3.copy(p1).scale(t ** 3);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2).add(_a3);\n    return ret;\n}\n\nexport class Curve {\n    constructor({ points = [new Vec3(0, 0, 0), new Vec3(0, 1, 0), new Vec3(1, 1, 0), new Vec3(1, 0, 0)], divisions = 12, type = CATMULLROM } = {}) {\n        this.points = points;\n        this.divisions = divisions;\n        this.type = type;\n    }\n\n    _getQuadraticBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 3) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        const p0 = this.points[0];\n        let c0 = this.points[1],\n            p1 = this.points[2];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n            points.push(p);\n        }\n\n        let offset = 3;\n        while (count - offset > 0) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c0);\n            p1 = this.points[offset];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n                points.push(p);\n            }\n            offset++;\n        }\n\n        return points;\n    }\n\n    _getCubicBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 4) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        let p0 = this.points[0],\n            c0 = this.points[1],\n            c1 = this.points[2],\n            p1 = this.points[3];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n            points.push(p);\n        }\n\n        let offset = 4;\n        while (count - offset > 1) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c1);\n            c1 = this.points[offset];\n            p1 = this.points[offset + 1];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n                points.push(p);\n            }\n            offset += 2;\n        }\n\n        return points;\n    }\n\n    _getCatmullRomPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count <= 2) {\n            return this.points;\n        }\n\n        let p0;\n        this.points.forEach((p, i) => {\n            if (i === 0) {\n                p0 = p;\n            } else {\n                const [c0, c1] = getCtrlPoint(this.points, i - 1, a, b);\n                const c = new Curve({\n                    points: [p0, c0, c1, p],\n                    type: CUBICBEZIER,\n                });\n                points.pop();\n                points.push(...c.getPoints(divisions));\n                p0 = p;\n            }\n        });\n\n        return points;\n    }\n\n    getPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const type = this.type;\n\n        if (type === QUADRATICBEZIER) {\n            return this._getQuadraticBezierPoints(divisions);\n        }\n\n        if (type === CUBICBEZIER) {\n            return this._getCubicBezierPoints(divisions);\n        }\n\n        if (type === CATMULLROM) {\n            return this._getCatmullRomPoints(divisions, a, b);\n        }\n\n        return this.points;\n    }\n}\n\nCurve.CATMULLROM = CATMULLROM;\nCurve.CUBICBEZIER = CUBICBEZIER;\nCurve.QUADRATICBEZIER = QUADRATICBEZIER;\n","// TODO: Destroy render targets if size changed and exists\n\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Post {\n    constructor(\n        gl,\n        {\n            width,\n            height,\n            dpr,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = gl.LINEAR,\n            geometry = new Triangle(gl),\n            targetOnly = null,\n        } = {}\n    ) {\n        this.gl = gl;\n\n        this.options = { wrapS, wrapT, minFilter, magFilter };\n\n        this.passes = [];\n\n        this.geometry = geometry;\n\n        this.uniform = { value: null };\n        this.targetOnly = targetOnly;\n\n        const fbo = (this.fbo = {\n            read: null,\n            write: null,\n            swap: () => {\n                let temp = fbo.read;\n                fbo.read = fbo.write;\n                fbo.write = temp;\n            },\n        });\n\n        this.resize({ width, height, dpr });\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = { value: this.fbo.read.texture };\n\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    resize({ width, height, dpr } = {}) {\n        if (dpr) this.dpr = dpr;\n        if (width) {\n            this.width = width;\n            this.height = height || width;\n        }\n\n        dpr = this.dpr || this.gl.renderer.dpr;\n        width = Math.floor((this.width || this.gl.renderer.width) * dpr);\n        height = Math.floor((this.height || this.gl.renderer.height) * dpr);\n\n        this.options.width = width;\n        this.options.height = height;\n\n        this.fbo.read = new RenderTarget(this.gl, this.options);\n        this.fbo.write = new RenderTarget(this.gl, this.options);\n    }\n\n    // Uses same arguments as renderer.render, with addition of optional texture passed in to avoid scene render\n    render({ scene, camera, texture, target = null, update = true, sort = true, frustumCull = true }) {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        if (!texture) {\n            this.gl.renderer.render({\n                scene,\n                camera,\n                target: enabledPasses.length || (!target && this.targetOnly) ? this.fbo.write : target,\n                update,\n                sort,\n                frustumCull,\n            });\n            this.fbo.swap();\n        }\n\n        enabledPasses.forEach((pass, i) => {\n            pass.mesh.program.uniforms[pass.textureUniform].value = !i && texture ? texture : this.fbo.read.texture;\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: i === enabledPasses.length - 1 && (target || !this.targetOnly) ? target : this.fbo.write,\n                clear: true,\n            });\n            this.fbo.swap();\n        });\n\n        this.uniform.value = this.fbo.read.texture;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst prevPos = new Vec3();\nconst prevRot = new Quat();\nconst prevScl = new Vec3();\n\nconst nextPos = new Vec3();\nconst nextRot = new Quat();\nconst nextScl = new Vec3();\n\nexport class Animation {\n    constructor({ objects, data }) {\n        this.objects = objects;\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = 1;\n        this.duration = data.frames.length - 1;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = this.elapsed % this.duration;\n\n        const floorFrame = Math.floor(elapsed);\n        const blend = elapsed - floorFrame;\n        const prevKey = this.data.frames[floorFrame];\n        const nextKey = this.data.frames[(floorFrame + 1) % this.duration];\n\n        this.objects.forEach((object, i) => {\n            prevPos.fromArray(prevKey.position, i * 3);\n            prevRot.fromArray(prevKey.quaternion, i * 4);\n            prevScl.fromArray(prevKey.scale, i * 3);\n\n            nextPos.fromArray(nextKey.position, i * 3);\n            nextRot.fromArray(nextKey.quaternion, i * 4);\n            nextScl.fromArray(nextKey.scale, i * 3);\n\n            prevPos.lerp(nextPos, blend);\n            prevRot.slerp(nextRot, blend);\n            prevScl.lerp(nextScl, blend);\n\n            object.position.lerp(prevPos, weight);\n            object.quaternion.slerp(prevRot, weight);\n            object.scale.lerp(prevScl, weight);\n        });\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Transform } from '../core/Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\nimport { Animation } from './Animation.js';\n\nconst tempMat4 = new Mat4();\n\nexport class Skin extends Mesh {\n    constructor(gl, { rig, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n\n        this.createBones(rig);\n        this.createBoneTexture();\n        this.animations = [];\n\n        Object.assign(this.program.uniforms, {\n            boneTexture: { value: this.boneTexture },\n            boneTextureSize: { value: this.boneTextureSize },\n        });\n    }\n\n    createBones(rig) {\n        // Create root so that can simply update world matrix of whole skeleton\n        this.root = new Transform();\n\n        // Create bones\n        this.bones = [];\n        if (!rig.bones || !rig.bones.length) return;\n        for (let i = 0; i < rig.bones.length; i++) {\n            const bone = new Transform();\n\n            // Set initial values (bind pose)\n            bone.position.fromArray(rig.bindPose.position, i * 3);\n            bone.quaternion.fromArray(rig.bindPose.quaternion, i * 4);\n            bone.scale.fromArray(rig.bindPose.scale, i * 3);\n\n            this.bones.push(bone);\n        }\n\n        // Once created, set the hierarchy\n        rig.bones.forEach((data, i) => {\n            this.bones[i].name = data.name;\n            if (data.parent === -1) return this.bones[i].setParent(this.root);\n            this.bones[i].setParent(this.bones[data.parent]);\n        });\n\n        // Then update to calculate world matrices\n        this.root.updateMatrixWorld(true);\n\n        // Store inverse of bind pose to calculate differences\n        this.bones.forEach((bone) => {\n            bone.bindInverse = new Mat4(...bone.worldMatrix).inverse();\n        });\n    }\n\n    createBoneTexture() {\n        if (!this.bones.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.bones.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    addAnimation(data) {\n        const animation = new Animation({ objects: this.bones, data });\n        this.animations.push(animation);\n        return animation;\n    }\n\n    update() {\n        // Calculate combined animation weight\n        let total = 0;\n        this.animations.forEach((animation) => (total += animation.weight));\n\n        this.animations.forEach((animation, i) => {\n            // force first animation to set in order to reset frame\n            animation.update(total, i === 0);\n        });\n    }\n\n    draw({ camera } = {}) {\n        // Update world matrices manually, as not part of scene graph\n        this.root.updateMatrixWorld(true);\n\n        // Update bone texture\n        this.bones.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n\n        super.draw({ camera });\n    }\n}\n","export function Text({\n    font,\n    text,\n    width = Infinity,\n    align = 'left',\n    size = 1,\n    letterSpacing = 0,\n    lineHeight = 1.4,\n    wordSpacing = 0,\n    wordBreak = false,\n}) {\n    const _this = this;\n    let glyphs, buffers;\n    let fontHeight, baseline, scale;\n\n    const newline = /\\n/;\n    const whitespace = /\\s/;\n\n    {\n        parseFont();\n        createGeometry();\n    }\n\n    function parseFont() {\n        glyphs = {};\n        font.chars.forEach((d) => (glyphs[d.char] = d));\n    }\n\n    function createGeometry() {\n        fontHeight = font.common.lineHeight;\n        baseline = font.common.base;\n\n        // Use baseline so that actual text height is as close to 'size' value as possible\n        scale = size / baseline;\n\n        // Strip spaces and newlines to get actual character length for buffers\n        let chars = text.replace(/[ \\n]/g, '');\n        let numChars = chars.length;\n\n        // Create output buffers\n        buffers = {\n            position: new Float32Array(numChars * 4 * 3),\n            uv: new Float32Array(numChars * 4 * 2),\n            id: new Float32Array(numChars * 4),\n            index: new Uint16Array(numChars * 6),\n        };\n\n        // Set values for buffers that don't require calculation\n        for (let i = 0; i < numChars; i++) {\n            buffers.id[i] = i;\n            buffers.index.set([i * 4, i * 4 + 2, i * 4 + 1, i * 4 + 1, i * 4 + 2, i * 4 + 3], i * 6);\n        }\n\n        layout();\n    }\n\n    function layout() {\n        const lines = [];\n\n        let cursor = 0;\n\n        let wordCursor = 0;\n        let wordWidth = 0;\n        let line = newLine();\n\n        function newLine() {\n            const line = {\n                width: 0,\n                glyphs: [],\n            };\n            lines.push(line);\n            wordCursor = cursor;\n            wordWidth = 0;\n            return line;\n        }\n\n        let maxTimes = 100;\n        let count = 0;\n        while (cursor < text.length && count < maxTimes) {\n            count++;\n\n            const char = text[cursor];\n\n            // Skip whitespace at start of line\n            if (!line.width && whitespace.test(char)) {\n                cursor++;\n                wordCursor = cursor;\n                wordWidth = 0;\n                continue;\n            }\n\n            // If newline char, skip to next line\n            if (newline.test(char)) {\n                cursor++;\n                line = newLine();\n                continue;\n            }\n\n            const glyph = glyphs[char] || glyphs[' '];\n\n            // Find any applicable kern pairs\n            if (line.glyphs.length) {\n                const prevGlyph = line.glyphs[line.glyphs.length - 1][0];\n                let kern = getKernPairOffset(glyph.id, prevGlyph.id) * scale;\n                line.width += kern;\n                wordWidth += kern;\n            }\n\n            // add char to line\n            line.glyphs.push([glyph, line.width]);\n\n            // calculate advance for next glyph\n            let advance = 0;\n\n            // If whitespace, update location of current word for line breaks\n            if (whitespace.test(char)) {\n                wordCursor = cursor;\n                wordWidth = 0;\n\n                // Add wordspacing\n                advance += wordSpacing * size;\n            } else {\n                // Add letterspacing\n                advance += letterSpacing * size;\n            }\n\n            advance += glyph.xadvance * scale;\n\n            line.width += advance;\n            wordWidth += advance;\n\n            // If width defined\n            if (line.width > width) {\n                // If can break words, undo latest glyph if line not empty and create new line\n                if (wordBreak && line.glyphs.length > 1) {\n                    line.width -= advance;\n                    line.glyphs.pop();\n                    line = newLine();\n                    continue;\n\n                    // If not first word, undo current word and cursor and create new line\n                } else if (!wordBreak && wordWidth !== line.width) {\n                    let numGlyphs = cursor - wordCursor + 1;\n                    line.glyphs.splice(-numGlyphs, numGlyphs);\n                    cursor = wordCursor;\n                    line.width -= wordWidth;\n                    line = newLine();\n                    continue;\n                }\n            }\n\n            cursor++;\n            // Reset infinite loop catch\n            count = 0;\n        }\n\n        // Remove last line if empty\n        if (!line.width) lines.pop();\n\n        populateBuffers(lines);\n    }\n\n    function populateBuffers(lines) {\n        const texW = font.common.scaleW;\n        const texH = font.common.scaleH;\n\n        // For all fonts tested, a little offset was needed to be right on the baseline, hence 0.07.\n        let y = 0.07 * size;\n        let j = 0;\n\n        for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n            let line = lines[lineIndex];\n\n            for (let i = 0; i < line.glyphs.length; i++) {\n                const glyph = line.glyphs[i][0];\n                let x = line.glyphs[i][1];\n\n                if (align === 'center') {\n                    x -= line.width * 0.5;\n                } else if (align === 'right') {\n                    x -= line.width;\n                }\n\n                // If space, don't add to geometry\n                if (whitespace.test(glyph.char)) continue;\n\n                // Apply char sprite offsets\n                x += glyph.xoffset * scale;\n                y -= glyph.yoffset * scale;\n\n                // each letter is a quad. axis bottom left\n                let w = glyph.width * scale;\n                let h = glyph.height * scale;\n                buffers.position.set([x, y - h, 0, x, y, 0, x + w, y - h, 0, x + w, y, 0], j * 4 * 3);\n\n                let u = glyph.x / texW;\n                let uw = glyph.width / texW;\n                let v = 1.0 - glyph.y / texH;\n                let vh = glyph.height / texH;\n                buffers.uv.set([u, v - vh, u, v, u + uw, v - vh, u + uw, v], j * 4 * 2);\n\n                // Reset cursor to baseline\n                y += glyph.yoffset * scale;\n\n                j++;\n            }\n\n            y -= size * lineHeight;\n        }\n\n        _this.buffers = buffers;\n        _this.numLines = lines.length;\n        _this.height = _this.numLines * size * lineHeight;\n        _this.width = Math.max(...lines.map((line) => line.width));\n    }\n\n    function getKernPairOffset(id1, id2) {\n        for (let i = 0; i < font.kernings.length; i++) {\n            let k = font.kernings[i];\n            if (k.first < id1) continue;\n            if (k.second < id2) continue;\n            if (k.first > id1) return 0;\n            if (k.first === id1 && k.second > id2) return 0;\n            return k.amount;\n        }\n        return 0;\n    }\n\n    // Update buffers to layout with new layout\n    this.resize = function (options) {\n        ({ width } = options);\n        layout();\n    };\n\n    // Completely change text (like creating new Text)\n    this.update = function (options) {\n        ({ text } = options);\n        createGeometry();\n    };\n}\n","import { Program } from '../core/Program.js';\n\nconst vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat3 normalMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vNormal = normalize(normalMatrix * normal);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    varying vec3 vNormal;\n\n    void main() {\n        gl_FragColor.rgb = normalize(vNormal);\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nexport function NormalProgram(gl) {\n    return new Program(gl, {\n        vertex: vertex,\n        fragment: fragment,\n        cullFace: null,\n    });\n}\n","import { RenderTarget } from '../core/RenderTarget.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Flowmap {\n    constructor(\n        gl,\n        {\n            size = 128, // default size of the render targets\n            falloff = 0.3, // size of the stamp, percentage of the size\n            alpha = 1, // opacity of the stamp\n            dissipation = 0.98, // affects the speed that the stamp fades. Closer to 1 is slower\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        } = {}\n    ) {\n        const _this = this;\n        this.gl = gl;\n\n        // output uniform containing render target textures\n        this.uniform = { value: null };\n\n        this.mask = {\n            read: null,\n            write: null,\n\n            // Helper function to ping pong the render targets and update the uniform\n            swap: () => {\n                let temp = _this.mask.read;\n                _this.mask.read = _this.mask.write;\n                _this.mask.write = temp;\n                _this.uniform.value = _this.mask.read.texture;\n            },\n        };\n\n        {\n            createFBOs();\n\n            this.aspect = 1;\n            this.mouse = new Vec2();\n            this.velocity = new Vec2();\n\n            this.mesh = initProgram();\n        }\n\n        function createFBOs() {\n            // Requested type not supported, fall back to half float\n            if (!type) type = gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES;\n\n            let minFilter = (() => {\n                if (gl.renderer.isWebgl2) return gl.LINEAR;\n                if (gl.renderer.extensions[`OES_texture_${type === gl.FLOAT ? '' : 'half_'}float_linear`]) return gl.LINEAR;\n                return gl.NEAREST;\n            })();\n\n            const options = {\n                width: size,\n                height: size,\n                type,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n                minFilter,\n                depth: false,\n            };\n\n            _this.mask.read = new RenderTarget(gl, options);\n            _this.mask.write = new RenderTarget(gl, options);\n            _this.mask.swap();\n        }\n\n        function initProgram() {\n            return new Mesh(gl, {\n                // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n                geometry: new Triangle(gl),\n\n                program: new Program(gl, {\n                    vertex,\n                    fragment,\n                    uniforms: {\n                        tMap: _this.uniform,\n\n                        uFalloff: { value: falloff * 0.5 },\n                        uAlpha: { value: alpha },\n                        uDissipation: { value: dissipation },\n\n                        // User needs to update these\n                        uAspect: { value: 1 },\n                        uMouse: { value: _this.mouse },\n                        uVelocity: { value: _this.velocity },\n                    },\n                    depthTest: false,\n                }),\n            });\n        }\n    }\n\n    update() {\n        this.mesh.program.uniforms.uAspect.value = this.aspect;\n\n        this.gl.renderer.render({\n            scene: this.mesh,\n            target: this.mask.write,\n            clear: false,\n        });\n        this.mask.swap();\n    }\n}\n\nconst vertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n\n    uniform float uFalloff;\n    uniform float uAlpha;\n    uniform float uDissipation;\n    \n    uniform float uAspect;\n    uniform vec2 uMouse;\n    uniform vec2 uVelocity;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec4 color = texture2D(tMap, vUv) * uDissipation;\n\n        vec2 cursor = vUv - uMouse;\n        cursor.x *= uAspect;\n\n        vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\n        float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\n\n        color.rgb = mix(color.rgb, stamp, vec3(falloff));\n\n        gl_FragColor = color;\n    }\n`;\n","import { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Texture } from '../core/Texture.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class GPGPU {\n    constructor(\n        gl,\n        {\n            // Always pass in array of vec4s (RGBA values within texture)\n            data = new Float32Array(16),\n            geometry = new Triangle(gl),\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        }\n    ) {\n        this.gl = gl;\n        const initialData = data;\n        this.passes = [];\n        this.geometry = geometry;\n        this.dataLength = initialData.length / 4;\n\n        // Windows and iOS only like power of 2 textures\n        // Find smallest PO2 that fits data\n        this.size = Math.pow(2, Math.ceil(Math.log(Math.ceil(Math.sqrt(this.dataLength))) / Math.LN2));\n\n        // Create coords for output texture\n        this.coords = new Float32Array(this.dataLength * 2);\n        for (let i = 0; i < this.dataLength; i++) {\n            const x = (i % this.size) / this.size; // to add 0.5 to be center pixel ?\n            const y = Math.floor(i / this.size) / this.size;\n            this.coords.set([x, y], i * 2);\n        }\n\n        // Use original data if already correct length of PO2 texture, else copy to new array of correct length\n        const floatArray = (() => {\n            if (initialData.length === this.size * this.size * 4) {\n                return initialData;\n            } else {\n                const a = new Float32Array(this.size * this.size * 4);\n                a.set(initialData);\n                return a;\n            }\n        })();\n\n        // Create output texture uniform using input float texture with initial data\n        this.uniform = {\n            value: new Texture(gl, {\n                image: floatArray,\n                target: gl.TEXTURE_2D,\n                type: gl.FLOAT,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? gl.RGBA32F : gl.RGBA,\n                wrapS: gl.CLAMP_TO_EDGE,\n                wrapT: gl.CLAMP_TO_EDGE,\n                generateMipmaps: false,\n                minFilter: gl.NEAREST,\n                magFilter: gl.NEAREST,\n                width: this.size,\n                flipY: false,\n            }),\n        };\n\n        // Create FBOs\n        const options = {\n            width: this.size,\n            height: this.size,\n            type: type || gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES,\n            format: gl.RGBA,\n            internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n            minFilter: gl.NEAREST,\n            depth: false,\n            unpackAlignment: 1,\n        };\n\n        this.fbo = {\n            read: new RenderTarget(gl, options),\n            write: new RenderTarget(gl, options),\n            swap: () => {\n                let temp = this.fbo.read;\n                this.fbo.read = this.fbo.write;\n                this.fbo.write = temp;\n                this.uniform.value = this.fbo.read.texture;\n            },\n        };\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = this.uniform;\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    render() {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        enabledPasses.forEach((pass, i) => {\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: this.fbo.write,\n                clear: false,\n            });\n            this.fbo.swap();\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Geometry } from '../core/Geometry.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Color } from '../math/Color.js';\n\nconst tmp = new Vec3();\n\nexport class Polyline {\n    constructor(\n        gl,\n        {\n            points, // Array of Vec3s\n            vertex = defaultVertex,\n            fragment = defaultFragment,\n            uniforms = {},\n            attributes = {}, // For passing in custom attribs\n        }\n    ) {\n        this.gl = gl;\n        this.points = points;\n        this.count = points.length;\n\n        // Create buffers\n        this.position = new Float32Array(this.count * 3 * 2);\n        this.prev = new Float32Array(this.count * 3 * 2);\n        this.next = new Float32Array(this.count * 3 * 2);\n        const side = new Float32Array(this.count * 1 * 2);\n        const uv = new Float32Array(this.count * 2 * 2);\n        const index = new Uint16Array((this.count - 1) * 3 * 2);\n\n        // Set static buffers\n        for (let i = 0; i < this.count; i++) {\n            side.set([-1, 1], i * 2);\n            const v = i / (this.count - 1);\n            uv.set([0, v, 1, v], i * 4);\n\n            if (i === this.count - 1) continue;\n            const ind = i * 2;\n            index.set([ind + 0, ind + 1, ind + 2], (ind + 0) * 3);\n            index.set([ind + 2, ind + 1, ind + 3], (ind + 1) * 3);\n        }\n\n        const geometry = (this.geometry = new Geometry(\n            gl,\n            Object.assign(attributes, {\n                position: { size: 3, data: this.position },\n                prev: { size: 3, data: this.prev },\n                next: { size: 3, data: this.next },\n                side: { size: 1, data: side },\n                uv: { size: 2, data: uv },\n                index: { size: 1, data: index },\n            })\n        ));\n\n        // Populate dynamic buffers\n        this.updateGeometry();\n\n        if (!uniforms.uResolution) this.resolution = uniforms.uResolution = { value: new Vec2() };\n        if (!uniforms.uDPR) this.dpr = uniforms.uDPR = { value: 1 };\n        if (!uniforms.uThickness) this.thickness = uniforms.uThickness = { value: 1 };\n        if (!uniforms.uColor) this.color = uniforms.uColor = { value: new Color('#000') };\n        if (!uniforms.uMiter) this.miter = uniforms.uMiter = { value: 1 };\n\n        // Set size uniforms' values\n        this.resize();\n\n        const program = (this.program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms,\n        }));\n\n        this.mesh = new Mesh(gl, { geometry, program });\n    }\n\n    updateGeometry() {\n        this.points.forEach((p, i) => {\n            p.toArray(this.position, i * 3 * 2);\n            p.toArray(this.position, i * 3 * 2 + 3);\n\n            if (!i) {\n                // If first point, calculate prev using the distance to 2nd point\n                tmp.copy(p)\n                    .sub(this.points[i + 1])\n                    .add(p);\n                tmp.toArray(this.prev, i * 3 * 2);\n                tmp.toArray(this.prev, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.next, (i - 1) * 3 * 2);\n                p.toArray(this.next, (i - 1) * 3 * 2 + 3);\n            }\n\n            if (i === this.points.length - 1) {\n                // If last point, calculate next using distance to 2nd last point\n                tmp.copy(p)\n                    .sub(this.points[i - 1])\n                    .add(p);\n                tmp.toArray(this.next, i * 3 * 2);\n                tmp.toArray(this.next, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.prev, (i + 1) * 3 * 2);\n                p.toArray(this.prev, (i + 1) * 3 * 2 + 3);\n            }\n        });\n\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.prev.needsUpdate = true;\n        this.geometry.attributes.next.needsUpdate = true;\n    }\n\n    // Only need to call if not handling resolution uniforms manually\n    resize() {\n        // Update automatic uniforms if not overridden\n        if (this.resolution) this.resolution.value.set(this.gl.canvas.width, this.gl.canvas.height);\n        if (this.dpr) this.dpr.value = this.gl.renderer.dpr;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    precision highp float;\n\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    uniform float uMiter;\n\n    varying vec2 vUv;\n\n    vec4 getPosition() {\n        mat4 mvp = projectionMatrix * modelViewMatrix;\n        vec4 current = mvp * vec4(position, 1);\n        vec4 nextPos = mvp * vec4(next, 1);\n        vec4 prevPos = mvp * vec4(prev, 1);\n\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);    \n        vec2 currentScreen = current.xy / current.w * aspect;\n        vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n        vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n    \n        vec2 dir1 = normalize(currentScreen - prevScreen);\n        vec2 dir2 = normalize(nextScreen - currentScreen);\n        vec2 dir = normalize(dir1 + dir2);\n    \n        vec2 normal = vec2(-dir.y, dir.x);\n        normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n        normal /= aspect;\n\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w * pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n\n    void main() {\n        vUv = uv;\n        gl_Position = getPosition();\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform vec3 uColor;\n    \n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor.rgb = uColor;\n        gl_FragColor.a = 1.0;\n    }\n`;\n","import { Camera } from '../core/Camera.js';\nimport { Program } from '../core/Program.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\n\nexport class Shadow {\n    constructor(gl, { light = new Camera(gl), width = 1024, height = width }) {\n        this.gl = gl;\n\n        this.light = light;\n\n        this.target = new RenderTarget(gl, { width, height });\n\n        this.depthProgram = new Program(gl, {\n            vertex: defaultVertex,\n            fragment: defaultFragment,\n            cullFace: null,\n        });\n\n        this.castMeshes = [];\n    }\n\n    add({\n        mesh,\n        receive = true,\n        cast = true,\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniformProjection = 'shadowProjectionMatrix',\n        uniformView = 'shadowViewMatrix',\n        uniformTexture = 'tShadow',\n    }) {\n        // Add uniforms to existing program\n        if (receive && !mesh.program.uniforms[uniformProjection]) {\n            mesh.program.uniforms[uniformProjection] = { value: this.light.projectionMatrix };\n            mesh.program.uniforms[uniformView] = { value: this.light.viewMatrix };\n            mesh.program.uniforms[uniformTexture] = { value: this.target.texture };\n        }\n\n        if (!cast) return;\n        this.castMeshes.push(mesh);\n\n        // Store program for when switching between depth override\n        mesh.colorProgram = mesh.program;\n\n        // Check if depth program already attached\n        if (mesh.depthProgram) return;\n\n        // Use global depth override if nothing custom passed in\n        if (vertex === defaultVertex && fragment === defaultFragment) {\n            mesh.depthProgram = this.depthProgram;\n            return;\n        }\n\n        // Create custom override program\n        mesh.depthProgram = new Program(this.gl, {\n            vertex,\n            fragment,\n            cullFace: null,\n        });\n    }\n\n    render({ scene }) {\n        // For depth render, replace program with depth override.\n        // Hide meshes not casting shadows.\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.depthProgram;\n            } else {\n                node.isForceVisibility = node.visible;\n                node.visible = false;\n            }\n        });\n\n        // Render the depth shadow map using the light as the camera\n        this.gl.renderer.render({\n            scene,\n            camera: this.light,\n            target: this.target,\n        });\n\n        // Then switch the program back to the normal one\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.colorProgram;\n            } else {\n                node.visible = node.isForceVisibility;\n            }\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    vec4 packRGBA (float v) {\n        vec4 pack = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);\n        pack -= pack.yzww * vec2(1.0 / 255.0, 0.0).xxxy;\n        return pack;\n    }\n\n    void main() {\n        gl_FragColor = packRGBA(gl_FragCoord.z);\n    }\n`;\n","import { Texture } from '../core/Texture.js';\n\n// TODO: Support cubemaps\n// Generate textures using https://github.com/TimvanScherpenzeel/texture-compressor\n\nexport class KTXTexture extends Texture {\n    constructor(gl, { buffer, wrapS = gl.CLAMP_TO_EDGE, wrapT = gl.CLAMP_TO_EDGE, anisotropy = 0, minFilter, magFilter } = {}) {\n        super(gl, {\n            generateMipmaps: false,\n            wrapS,\n            wrapT,\n            anisotropy,\n            minFilter,\n            magFilter,\n        });\n\n        if (buffer) return this.parseBuffer(buffer);\n    }\n\n    parseBuffer(buffer) {\n        const ktx = new KhronosTextureContainer(buffer);\n        ktx.mipmaps.isCompressedTexture = true;\n\n        // Update texture\n        this.image = ktx.mipmaps;\n        this.internalFormat = ktx.glInternalFormat;\n        if (ktx.numberOfMipmapLevels > 1) {\n            if (this.minFilter === this.gl.LINEAR) this.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        } else {\n            if (this.minFilter === this.gl.NEAREST_MIPMAP_LINEAR) this.minFilter = this.gl.LINEAR;\n        }\n\n        // TODO: support cube maps\n        // ktx.numberOfFaces\n    }\n}\n\nfunction KhronosTextureContainer(buffer) {\n    const idCheck = [0xab, 0x4b, 0x54, 0x58, 0x20, 0x31, 0x31, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\n    const id = new Uint8Array(buffer, 0, 12);\n    for (let i = 0; i < id.length; i++) if (id[i] !== idCheck[i]) return console.error('File missing KTX identifier');\n\n    // TODO: Is this always 4? Tested: [android, macos]\n    const size = Uint32Array.BYTES_PER_ELEMENT;\n    const head = new DataView(buffer, 12, 13 * size);\n    const littleEndian = head.getUint32(0, true) === 0x04030201;\n    const glType = head.getUint32(1 * size, littleEndian);\n    if (glType !== 0) return console.warn('only compressed formats currently supported');\n    this.glInternalFormat = head.getUint32(4 * size, littleEndian);\n    let width = head.getUint32(6 * size, littleEndian);\n    let height = head.getUint32(7 * size, littleEndian);\n    this.numberOfFaces = head.getUint32(10 * size, littleEndian);\n    this.numberOfMipmapLevels = Math.max(1, head.getUint32(11 * size, littleEndian));\n    const bytesOfKeyValueData = head.getUint32(12 * size, littleEndian);\n\n    this.mipmaps = [];\n    let offset = 12 + 13 * 4 + bytesOfKeyValueData;\n    for (let level = 0; level < this.numberOfMipmapLevels; level++) {\n        const levelSize = new Int32Array(buffer, offset, 1)[0]; // size per face, since not supporting array cubemaps\n        offset += 4; // levelSize field\n        for (let face = 0; face < this.numberOfFaces; face++) {\n            const data = new Uint8Array(buffer, offset, levelSize);\n            this.mipmaps.push({ data, width, height });\n            offset += levelSize;\n            offset += 3 - ((levelSize + 3) % 4); // add padding for odd sized image\n        }\n        width = width >> 1;\n        height = height >> 1;\n    }\n}\n","import { Texture } from '../core/Texture.js';\nimport { KTXTexture } from './KTXTexture.js';\n\n// For compressed textures, generate using https://github.com/TimvanScherpenzeel/texture-compressor\n\nlet cache = {};\nconst supportedExtensions = [];\n\nexport class TextureLoader {\n    static load(\n        gl,\n        {\n            src, // string or object of extension:src key-values\n            // {\n            //     pvrtc: '...ktx',\n            //     s3tc: '...ktx',\n            //     etc: '...ktx',\n            //     etc1: '...ktx',\n            //     astc: '...ktx',\n            //     webp: '...webp',\n            //     jpg: '...jpg',\n            //     png: '...png',\n            // }\n\n            // Only props relevant to KTXTexture\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            anisotropy = 0,\n\n            // For regular images\n            format = gl.RGBA,\n            internalFormat = format,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = true,\n        } = {}\n    ) {\n        const support = this.getSupportedExtensions(gl);\n        let ext = 'none';\n\n        // If src is string, determine which format from the extension\n        if (typeof src === 'string') {\n            ext = src.split('.').pop().split('?')[0].toLowerCase();\n        }\n\n        // If src is object, use supported extensions and provided list to choose best option\n        // Get first supported match, so put in order of preference\n        if (typeof src === 'object') {\n            for (const prop in src) {\n                if (support.includes(prop.toLowerCase())) {\n                    ext = prop.toLowerCase();\n                    src = src[prop];\n                    break;\n                }\n            }\n        }\n\n        // Stringify props\n        const cacheID =\n            src +\n            wrapS +\n            wrapT +\n            anisotropy +\n            format +\n            internalFormat +\n            generateMipmaps +\n            minFilter +\n            magFilter +\n            premultiplyAlpha +\n            unpackAlignment +\n            flipY +\n            gl.renderer.id;\n\n        // Check cache for existing texture\n        if (cache[cacheID]) return cache[cacheID];\n\n        let texture;\n        switch (ext) {\n            case 'ktx':\n            case 'pvrtc':\n            case 's3tc':\n            case 'etc':\n            case 'etc1':\n            case 'astc':\n                // Load compressed texture using KTX format\n                texture = new KTXTexture(gl, {\n                    src,\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    minFilter,\n                    magFilter,\n                });\n                texture.loaded = this.loadKTX(src, texture);\n                break;\n            case 'webp':\n            case 'jpg':\n            case 'jpeg':\n            case 'png':\n                texture = new Texture(gl, {\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    format,\n                    internalFormat,\n                    generateMipmaps,\n                    minFilter,\n                    magFilter,\n                    premultiplyAlpha,\n                    unpackAlignment,\n                    flipY,\n                });\n                texture.loaded = this.loadImage(gl, src, texture, flipY);\n                break;\n            default:\n                console.warn('No supported format supplied');\n                texture = new Texture(gl);\n        }\n\n        texture.ext = ext;\n        cache[cacheID] = texture;\n        return texture;\n    }\n\n    static getSupportedExtensions(gl) {\n        if (supportedExtensions.length) return supportedExtensions;\n\n        const extensions = {\n            pvrtc: gl.renderer.getExtension('WEBGL_compressed_texture_pvrtc') || gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'),\n            s3tc: gl.renderer.getExtension('WEBGL_compressed_texture_s3tc'),\n            // etc: gl.renderer.getExtension('WEBGL_compressed_texture_etc'),\n            etc1: gl.renderer.getExtension('WEBGL_compressed_texture_etc1'),\n            astc: gl.renderer.getExtension('WEBGL_compressed_texture_astc'),\n            bc7: gl.renderer.getExtension('EXT_texture_compression_bptc'),\n        };\n\n        for (const ext in extensions) if (extensions[ext]) supportedExtensions.push(ext);\n\n        // Check for WebP support\n        if (detectWebP()) supportedExtensions.push('webp');\n\n        // Formats supported by all\n        supportedExtensions.push('png', 'jpg');\n\n        return supportedExtensions;\n    }\n\n    static loadKTX(src, texture) {\n        return fetch(src)\n            .then((res) => res.arrayBuffer())\n            .then((buffer) => texture.parseBuffer(buffer));\n    }\n\n    static loadImage(gl, src, texture, flipY) {\n        return decodeImage(src, flipY).then((imgBmp) => {\n            // Catch non POT textures and update params to avoid errors\n            if (!powerOfTwo(imgBmp.width) || !powerOfTwo(imgBmp.height)) {\n                if (texture.generateMipmaps) texture.generateMipmaps = false;\n                if (texture.minFilter === gl.NEAREST_MIPMAP_LINEAR) texture.minFilter = gl.LINEAR;\n                if (texture.wrapS === gl.REPEAT) texture.wrapS = texture.wrapT = gl.CLAMP_TO_EDGE;\n            }\n\n            texture.image = imgBmp;\n\n            // For createImageBitmap, close once uploaded\n            texture.onUpdate = () => {\n                if (imgBmp.close) imgBmp.close();\n                texture.onUpdate = null;\n            };\n\n            return imgBmp;\n        });\n    }\n\n    static clearCache() {\n        cache = {};\n    }\n}\n\nfunction detectWebP() {\n    return document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') == 0;\n}\n\nfunction powerOfTwo(value) {\n    // (width & (width - 1)) !== 0\n    return Math.log2(value) % 1 === 0;\n}\n\nfunction decodeImage(src, flipY) {\n    return new Promise((resolve) => {\n        // Only chrome's implementation of createImageBitmap is fully supported\n        const isChrome = navigator.userAgent.toLowerCase().includes('chrome');\n        if (!!window.createImageBitmap && isChrome) {\n            fetch(src, { mode: 'cors' })\n                .then(r => r.blob())\n                .then(b => createImageBitmap(b, { imageOrientation: flipY ? 'flipY' : 'none', premultiplyAlpha: 'none' }))\n                .then(resolve);\n        } else {\n            const img = new Image();\n\n            img.crossOrigin = '';\n            img.src = src;\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst tmpVec3A = new Vec3();\nconst tmpVec3B = new Vec3();\nconst tmpVec3C = new Vec3();\nconst tmpVec3D = new Vec3();\n\nconst tmpQuatA = new Quat();\nconst tmpQuatB = new Quat();\nconst tmpQuatC = new Quat();\nconst tmpQuatD = new Quat();\n\nexport class GLTFAnimation {\n    constructor(data, weight = 1) {\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = weight;\n\n        // Set to false to not apply modulo to elapsed against duration\n        this.loop = true;\n\n        // Find starting time as exports from blender (perhaps others too) don't always start from 0\n        this.startTime = data.reduce((a, { times }) => Math.min(a, times[0]), Infinity);\n        // Get largest final time in all channels to calculate duration\n        this.endTime = data.reduce((a, { times }) => Math.max(a, times[times.length - 1]), 0);\n        this.duration = this.endTime - this.startTime;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = !this.duration\n            ? 0\n            : (this.loop ? this.elapsed % this.duration : Math.min(this.elapsed, this.duration - 0.001)) + this.startTime;\n\n        this.data.forEach(({ node, transform, interpolation, times, values }) => {\n            if (!this.duration) {\n                let val = tmpVec3A;\n                let size = 3;\n                if (transform === 'quaternion') {\n                    val = tmpQuatA;\n                    size = 4;\n                }\n                val.fromArray(values, 0);\n                if (size === 4) node[transform].slerp(val, weight);\n                else node[transform].lerp(val, weight);\n                return;\n            }\n\n            // Get index of two time values elapsed is between\n            const prevIndex =\n                Math.max(\n                    1,\n                    times.findIndex((t) => t > elapsed)\n                ) - 1;\n            const nextIndex = prevIndex + 1;\n\n            // Get linear blend/alpha between the two\n            let alpha = (elapsed - times[prevIndex]) / (times[nextIndex] - times[prevIndex]);\n            if (interpolation === 'STEP') alpha = 0;\n\n            let prevVal = tmpVec3A;\n            let prevTan = tmpVec3B;\n            let nextTan = tmpVec3C;\n            let nextVal = tmpVec3D;\n            let size = 3;\n\n            if (transform === 'quaternion') {\n                prevVal = tmpQuatA;\n                prevTan = tmpQuatB;\n                nextTan = tmpQuatC;\n                nextVal = tmpQuatD;\n                size = 4;\n            }\n\n            if (interpolation === 'CUBICSPLINE') {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size * 3 + size * 1);\n                prevTan.fromArray(values, prevIndex * size * 3 + size * 2);\n                nextTan.fromArray(values, nextIndex * size * 3 + size * 0);\n                nextVal.fromArray(values, nextIndex * size * 3 + size * 1);\n\n                // interpolate for final value\n                prevVal = this.cubicSplineInterpolate(alpha, prevVal, prevTan, nextTan, nextVal);\n                if (size === 4) prevVal.normalize();\n            } else {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size);\n                nextVal.fromArray(values, nextIndex * size);\n\n                // interpolate for final value\n                if (size === 4) prevVal.slerp(nextVal, alpha);\n                else prevVal.lerp(nextVal, alpha);\n            }\n\n            // interpolate between multiple possible animations\n            if (size === 4) node[transform].slerp(prevVal, weight);\n            else node[transform].lerp(prevVal, weight);\n        });\n    }\n\n    cubicSplineInterpolate(t, prevVal, prevTan, nextTan, nextVal) {\n        const t2 = t * t;\n        const t3 = t2 * t;\n\n        const s2 = 3 * t2 - 2 * t3;\n        const s3 = t3 - t2;\n        const s0 = 1 - s2;\n        const s1 = s3 - t2 + t;\n\n        for (let i = 0; i < prevVal.length; i++) {\n            prevVal[i] = s0 * prevVal[i] + s1 * (1 - t) * prevTan[i] + s2 * nextVal[i] + s3 * t * nextTan[i];\n        }\n\n        return prevVal;\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\n\nconst tempMat4 = new Mat4();\nconst identity = new Mat4();\n\nexport class GLTFSkin extends Mesh {\n    constructor(gl, { skeleton, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n        this.skeleton = skeleton;\n        this.program = program;\n        this.createBoneTexture();\n        this.animations = [];\n    }\n\n    createBoneTexture() {\n        if (!this.skeleton.joints.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.skeleton.joints.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    // addAnimation(data) {\n    //     const animation = new Animation({ objects: this.bones, data });\n    //     this.animations.push(animation);\n    //     return animation;\n    // }\n\n    // updateAnimations() {\n    //     // Calculate combined animation weight\n    //     let total = 0;\n    //     this.animations.forEach((animation) => (total += animation.weight));\n\n    //     this.animations.forEach((animation, i) => {\n    //         // force first animation to set in order to reset frame\n    //         animation.update(total, i === 0);\n    //     });\n    // }\n\n    updateUniforms() {\n        // Update bone texture\n        this.skeleton.joints.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n    }\n\n    draw({ camera } = {}) {\n        if (!this.program.uniforms.boneTexture) {\n            Object.assign(this.program.uniforms, {\n                boneTexture: { value: this.boneTexture },\n                boneTextureSize: { value: this.boneTextureSize },\n            });\n        }\n\n        this.updateUniforms();\n\n        // Switch the world matrix with identity to ignore any transforms\n        // on the mesh itself - only use skeleton's transforms\n        const _worldMatrix = this.worldMatrix;\n        this.worldMatrix = identity;\n\n        super.draw({ camera });\n\n        // Switch back to leave identity untouched\n        this.worldMatrix = _worldMatrix;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Transform } from '../core/Transform.js';\nimport { Texture } from '../core/Texture.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { GLTFAnimation } from './GLTFAnimation.js';\nimport { GLTFSkin } from './GLTFSkin.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { NormalProgram } from './NormalProgram.js';\n\n// Supports\n// [x] glb\n// [x] Geometry\n// [x] Nodes and Hierarchy\n// [x] Instancing\n// [x] Skins\n// [x] Textures\n// [x] Animation\n// [x] GLB support\n// [x] Basis/ktx2\n// [x] KHR_lights_punctual lights\n// [ ] Morph Targets\n// [ ] Materials\n// [ ] Cameras\n\n// TODO: Sparse accessor packing? For morph targets basically\n// TODO: init accessor missing bufferView with 0s\n// TODO: morph target animations\n// TODO: option to turn off GPU instancing\n\nconst TYPE_ARRAY = {\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array,\n    'image/jpeg': Uint8Array,\n    'image/png': Uint8Array,\n};\n\nconst TYPE_SIZE = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16,\n};\n\nconst ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex',\n};\n\nconst TRANSFORMS = {\n    translation: 'position',\n    rotation: 'quaternion',\n    scale: 'scale',\n};\n\nexport class GLTFLoader {\n    static setBasisManager(manager) {\n        this.basisManager = manager;\n    }\n\n    static async load(gl, src) {\n        const dir = src.split('/').slice(0, -1).join('/') + '/';\n\n        // load main description json\n        const desc = await this.parseDesc(src);\n\n        return await this.parse(gl, desc, dir);\n    }\n\n    static async parse(gl, desc, dir) {\n        if (desc.asset === undefined || desc.asset.version[0] < 2) console.warn('Only GLTF >=2.0 supported. Attempting to parse.');\n\n        if (desc.extensionsRequired?.includes('KHR_texture_basisu') && !this.basisManager)\n            console.warn('KHR_texture_basisu extension required but no manager supplied. Use .setBasisManager()');\n\n        // Load buffers async\n        const buffers = await this.loadBuffers(desc, dir);\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        gl.renderer.bindVertexArray(null);\n\n        // Create gl buffers from bufferViews\n        const bufferViews = this.parseBufferViews(gl, desc, buffers);\n\n        // Create images from either bufferViews or separate image files\n        const images = await this.parseImages(gl, desc, dir, bufferViews);\n\n        const textures = this.parseTextures(gl, desc, images);\n\n        // Just pass through material data for now\n        const materials = this.parseMaterials(gl, desc, textures);\n\n        // Fetch the inverse bind matrices for skeleton joints\n        const skins = this.parseSkins(gl, desc, bufferViews);\n\n        // Create geometries for each mesh primitive\n        const meshes = this.parseMeshes(gl, desc, bufferViews, materials, skins);\n\n        // Create transforms, meshes and hierarchy\n        const nodes = this.parseNodes(gl, desc, meshes, skins, images);\n\n        // Place nodes in skeletons\n        this.populateSkins(skins, nodes);\n\n        // Create animation handlers\n        const animations = this.parseAnimations(gl, desc, nodes, bufferViews);\n\n        // Get top level nodes for each scene\n        const scenes = this.parseScenes(desc, nodes);\n        const scene = scenes[desc.scene];\n\n        // Create uniforms for scene lights (TODO: light linking?)\n        const lights = this.parseLights(gl, desc, nodes, scenes);\n\n        // Remove null nodes (instanced transforms)\n        for (let i = nodes.length; i >= 0; i--) if (!nodes[i]) nodes.splice(i, 1);\n\n        return {\n            json: desc,\n            buffers,\n            bufferViews,\n            images,\n            textures,\n            materials,\n            meshes,\n            nodes,\n            lights,\n            animations,\n            scenes,\n            scene,\n        };\n    }\n\n    static async parseDesc(src) {\n        if (!src.match(/\\.glb/)) {\n            return await fetch(src).then((res) => res.json());\n        } else {\n            return await fetch(src)\n                .then((res) => res.arrayBuffer())\n                .then((glb) => this.unpackGLB(glb));\n        }\n    }\n\n    // From https://github.com/donmccurdy/glTF-Transform/blob/e4108cc/packages/core/src/io/io.ts#L32\n    static unpackGLB(glb) {\n        // Decode and verify GLB header.\n        const header = new Uint32Array(glb, 0, 3);\n        if (header[0] !== 0x46546c67) {\n            throw new Error('Invalid glTF asset.');\n        } else if (header[1] !== 2) {\n            throw new Error(`Unsupported glTF binary version, \"${header[1]}\".`);\n        }\n        // Decode and verify chunk headers.\n        const jsonChunkHeader = new Uint32Array(glb, 12, 2);\n        const jsonByteOffset = 20;\n        const jsonByteLength = jsonChunkHeader[0];\n        if (jsonChunkHeader[1] !== 0x4e4f534a) {\n            throw new Error('Unexpected GLB layout.');\n        }\n\n        // Decode JSON.\n        const jsonText = new TextDecoder().decode(glb.slice(jsonByteOffset, jsonByteOffset + jsonByteLength));\n        const json = JSON.parse(jsonText);\n        // JSON only\n        if (jsonByteOffset + jsonByteLength === glb.byteLength) return json;\n\n        const binaryChunkHeader = new Uint32Array(glb, jsonByteOffset + jsonByteLength, 2);\n        if (binaryChunkHeader[1] !== 0x004e4942) {\n            throw new Error('Unexpected GLB layout.');\n        }\n        // Decode content.\n        const binaryByteOffset = jsonByteOffset + jsonByteLength + 8;\n        const binaryByteLength = binaryChunkHeader[0];\n        const binary = glb.slice(binaryByteOffset, binaryByteOffset + binaryByteLength);\n        // Attach binary to buffer\n        json.buffers[0].binary = binary;\n        return json;\n    }\n\n    // Threejs GLTF Loader https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/GLTFLoader.js#L1085\n    static resolveURI(uri, dir) {\n        // Invalid URI\n        if (typeof uri !== 'string' || uri === '') return '';\n\n        // Host Relative URI\n        if (/^https?:\\/\\//i.test(dir) && /^\\//.test(uri)) {\n            dir = dir.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URI http://, https://, //\n        if (/^(https?:)?\\/\\//i.test(uri)) return uri;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(uri)) return uri;\n\n        // Blob URI\n        if (/^blob:.*$/i.test(uri)) return uri;\n\n        // Relative URI\n        return dir + uri;\n    }\n\n    static async loadBuffers(desc, dir) {\n        if (!desc.buffers) return null;\n        return await Promise.all(\n            desc.buffers.map((buffer) => {\n                // For GLB, binary buffer ready to go\n                if (buffer.binary) return buffer.binary;\n                const uri = this.resolveURI(buffer.uri, dir);\n                return fetch(uri).then((res) => res.arrayBuffer());\n            })\n        );\n    }\n\n    static parseBufferViews(gl, desc, buffers) {\n        if (!desc.bufferViews) return null;\n        // Clone to leave description pure\n        const bufferViews = desc.bufferViews.map((o) => Object.assign({}, o));\n\n        desc.meshes &&\n            desc.meshes.forEach(({ primitives }) => {\n                primitives.forEach(({ attributes, indices }) => {\n                    // Flag bufferView as an attribute, so it knows to create a gl buffer\n                    for (let attr in attributes) bufferViews[desc.accessors[attributes[attr]].bufferView].isAttribute = true;\n\n                    if (indices === undefined) return;\n                    bufferViews[desc.accessors[indices].bufferView].isAttribute = true;\n\n                    // Make sure indices bufferView have a target property for gl buffer binding\n                    bufferViews[desc.accessors[indices].bufferView].target = gl.ELEMENT_ARRAY_BUFFER;\n                });\n            });\n\n        // Get componentType of each bufferView from the accessors\n        desc.accessors.forEach(({ bufferView: i, componentType }) => {\n            bufferViews[i].componentType = componentType;\n        });\n\n        // Get mimetype of bufferView from images\n        desc.images &&\n            desc.images.forEach(({ uri, bufferView: i, mimeType }) => {\n                if (i === undefined) return;\n                bufferViews[i].mimeType = mimeType;\n            });\n\n        // Push each bufferView to the GPU as a separate buffer\n        bufferViews.forEach(\n            (\n                {\n                    buffer: bufferIndex, // required\n                    byteOffset = 0, // optional\n                    byteLength, // required\n                    byteStride, // optional\n                    target = gl.ARRAY_BUFFER, // optional, added above for elements\n                    name, // optional\n                    extensions, // optional\n                    extras, // optional\n\n                    componentType, // optional, added from accessor above\n                    mimeType, // optional, added from images above\n                    isAttribute,\n                },\n                i\n            ) => {\n                // For basis, just slice buffer\n                if (mimeType === 'image/ktx2') {\n                    bufferViews[i].data = buffers[bufferIndex].slice(byteOffset, byteOffset + byteLength);\n                    return;\n                }\n\n                const TypeArray = TYPE_ARRAY[componentType || mimeType];\n                const elementBytes = TypeArray.BYTES_PER_ELEMENT;\n\n                const data = new TypeArray(buffers[bufferIndex], byteOffset, byteLength / elementBytes);\n                bufferViews[i].data = data;\n                bufferViews[i].originalBuffer = buffers[bufferIndex];\n\n                if (!isAttribute) return;\n                // Create gl buffers for the bufferView, pushing it to the GPU\n                const buffer = gl.createBuffer();\n                gl.bindBuffer(target, buffer);\n                gl.renderer.state.boundBuffer = buffer;\n                gl.bufferData(target, data, gl.STATIC_DRAW);\n                bufferViews[i].buffer = buffer;\n            }\n        );\n\n        return bufferViews;\n    }\n\n    static async parseImages(gl, desc, dir, bufferViews) {\n        if (!desc.images) return null;\n        return await Promise.all(\n            desc.images.map(async ({ uri, bufferView: bufferViewIndex, mimeType, name }) => {\n                if (mimeType === 'image/ktx2') {\n                    const { data } = bufferViews[bufferViewIndex];\n                    const image = await this.basisManager.parseTexture(data);\n                    return image;\n                }\n\n                // jpg / png\n                const image = new Image();\n                image.name = name;\n                if (uri) {\n                    image.src = this.resolveURI(uri, dir);\n                } else if (bufferViewIndex !== undefined) {\n                    const { data } = bufferViews[bufferViewIndex];\n                    const blob = new Blob([data], { type: mimeType });\n                    image.src = URL.createObjectURL(blob);\n                }\n                image.ready = new Promise((res) => {\n                    image.onload = () => res();\n                });\n                return image;\n            })\n        );\n    }\n\n    static parseTextures(gl, desc, images) {\n        if (!desc.textures) return null;\n        return desc.textures.map((textureInfo) => this.createTexture(gl, desc, images, textureInfo));\n    }\n\n    static createTexture(gl, desc, images, { sampler: samplerIndex, source: sourceIndex, name, extensions, extras }) {\n        if (sourceIndex === undefined && !!extensions) {\n            // Basis extension source index\n            if (extensions.KHR_texture_basisu) sourceIndex = extensions.KHR_texture_basisu.source;\n        }\n\n        const image = images[sourceIndex];\n        if (image.texture) return image.texture;\n\n        const options = {\n            flipY: false,\n            wrapS: gl.REPEAT, // Repeat by default, opposed to OGL's clamp by default\n            wrapT: gl.REPEAT,\n        };\n        const sampler = samplerIndex !== undefined ? desc.samplers[samplerIndex] : null;\n        if (sampler) {\n            ['magFilter', 'minFilter', 'wrapS', 'wrapT'].forEach((prop) => {\n                if (sampler[prop]) options[prop] = sampler[prop];\n            });\n        }\n\n        // For compressed textures\n        if (image.isBasis) {\n            options.image = image;\n            options.internalFormat = image.internalFormat;\n            if (image.isCompressedTexture) {\n                options.generateMipmaps = false;\n                if (image.length > 1) this.minFilter = gl.NEAREST_MIPMAP_LINEAR;\n            }\n            const texture = new Texture(gl, options);\n            texture.name = name;\n            image.texture = texture;\n            return texture;\n        }\n\n        const texture = new Texture(gl, options);\n        texture.name = name;\n        image.texture = texture;\n        image.ready.then(() => {\n            texture.image = image;\n        });\n\n        return texture;\n    }\n\n    static parseMaterials(gl, desc, textures) {\n        if (!desc.materials) return null;\n        return desc.materials.map(\n            ({\n                name,\n                extensions,\n                extras,\n                pbrMetallicRoughness = {},\n                normalTexture,\n                occlusionTexture,\n                emissiveTexture,\n                emissiveFactor = [0, 0, 0],\n                alphaMode = 'OPAQUE',\n                alphaCutoff = 0.5,\n                doubleSided = false,\n            }) => {\n                const {\n                    baseColorFactor = [1, 1, 1, 1],\n                    baseColorTexture,\n                    metallicFactor = 1,\n                    roughnessFactor = 1,\n                    metallicRoughnessTexture,\n                    //   extensions,\n                    //   extras,\n                } = pbrMetallicRoughness;\n\n                if (baseColorTexture) {\n                    baseColorTexture.texture = textures[baseColorTexture.index];\n                    // texCoord\n                }\n                if (normalTexture) {\n                    normalTexture.texture = textures[normalTexture.index];\n                    // scale: 1\n                    // texCoord\n                }\n                if (metallicRoughnessTexture) {\n                    metallicRoughnessTexture.texture = textures[metallicRoughnessTexture.index];\n                    // texCoord\n                }\n                if (occlusionTexture) {\n                    occlusionTexture.texture = textures[occlusionTexture.index];\n                    // strength 1\n                    // texCoord\n                }\n                if (emissiveTexture) {\n                    emissiveTexture.texture = textures[emissiveTexture.index];\n                    // texCoord\n                }\n\n                return {\n                    name,\n                    extensions,\n                    extras,\n                    baseColorFactor,\n                    baseColorTexture,\n                    metallicFactor,\n                    roughnessFactor,\n                    metallicRoughnessTexture,\n                    normalTexture,\n                    occlusionTexture,\n                    emissiveTexture,\n                    emissiveFactor,\n                    alphaMode,\n                    alphaCutoff,\n                    doubleSided,\n                };\n            }\n        );\n    }\n\n    static parseSkins(gl, desc, bufferViews) {\n        if (!desc.skins) return null;\n        return desc.skins.map(\n            ({\n                inverseBindMatrices, // optional\n                skeleton, // optional\n                joints, // required\n                // name,\n                // extensions,\n                // extras,\n            }) => {\n                return {\n                    inverseBindMatrices: this.parseAccessor(inverseBindMatrices, desc, bufferViews),\n                    skeleton,\n                    joints,\n                };\n            }\n        );\n    }\n\n    static parseMeshes(gl, desc, bufferViews, materials, skins) {\n        if (!desc.meshes) return null;\n        return desc.meshes.map(\n            (\n                {\n                    primitives, // required\n                    weights, // optional\n                    name, // optional\n                    extensions, // optional\n                    extras, // optional\n                },\n                meshIndex\n            ) => {\n                // TODO: weights stuff ?\n                // Parse through nodes to see how many instances there are\n                // and if there is a skin attached\n                let numInstances = 0;\n                let skinIndex = false;\n                let isLightmap = false;\n                desc.nodes &&\n                    desc.nodes.forEach(({ mesh, skin, extras }) => {\n                        if (mesh === meshIndex) {\n                            numInstances++;\n                            if (skin !== undefined) skinIndex = skin;\n                            if (extras && extras.lightmap_scale_offset) isLightmap = true;\n                        }\n                    });\n\n                primitives = this.parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances, isLightmap).map(\n                    ({ geometry, program, mode }) => {\n                        // Create either skinned mesh or regular mesh\n                        const mesh =\n                            typeof skinIndex === 'number'\n                                ? new GLTFSkin(gl, { skeleton: skins[skinIndex], geometry, program, mode })\n                                : new Mesh(gl, { geometry, program, mode });\n                        mesh.name = name;\n                        if (mesh.geometry.isInstanced) {\n                            // Tag mesh so that nodes can add their transforms to the instance attribute\n                            mesh.numInstances = numInstances;\n                            // Avoid incorrect culling for instances\n                            mesh.frustumCulled = false;\n                        }\n                        return mesh;\n                    }\n                );\n\n                return {\n                    primitives,\n                    weights,\n                    name,\n                };\n            }\n        );\n    }\n\n    static parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances, isLightmap) {\n        return primitives.map(\n            ({\n                attributes, // required\n                indices, // optional\n                material: materialIndex, // optional\n                mode = 4, // optional\n                targets, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                // TODO: materials\n                const program = new NormalProgram(gl);\n                if (materialIndex !== undefined) {\n                    program.gltfMaterial = materials[materialIndex];\n                }\n\n                const geometry = new Geometry(gl);\n\n                // Add each attribute found in primitive\n                for (let attr in attributes) {\n                    geometry.addAttribute(ATTRIBUTES[attr], this.parseAccessor(attributes[attr], desc, bufferViews));\n                }\n\n                // Add index attribute if found\n                if (indices !== undefined) {\n                    geometry.addAttribute('index', this.parseAccessor(indices, desc, bufferViews));\n                }\n\n                // Add instanced transform attribute if multiple instances\n                if (numInstances > 1) {\n                    geometry.addAttribute('instanceMatrix', {\n                        instanced: 1,\n                        size: 16,\n                        data: new Float32Array(numInstances * 16),\n                    });\n\n                    if (isLightmap) {\n                        geometry.addAttribute('lightmapScaleOffset', {\n                            instanced: 1,\n                            size: 4,\n                            data: new Float32Array(numInstances * 4),\n                        });\n                    }\n                }\n\n                return {\n                    geometry,\n                    program,\n                    mode,\n                };\n            }\n        );\n    }\n\n    static parseAccessor(index, desc, bufferViews) {\n        // TODO: init missing bufferView with 0s\n        // TODO: support sparse\n\n        const {\n            bufferView: bufferViewIndex, // optional\n            byteOffset = 0, // optional\n            componentType, // required\n            normalized = false, // optional\n            count, // required\n            type, // required\n            min, // optional\n            max, // optional\n            sparse, // optional\n            // name, // optional\n            // extensions, // optional\n            // extras, // optional\n        } = desc.accessors[index];\n\n        const {\n            data, // attached in parseBufferViews\n            originalBuffer, // attached in parseBufferViews\n            buffer, // replaced to be the actual GL buffer\n            byteOffset: bufferByteOffset = 0,\n            // byteLength, // applied in parseBufferViews\n            byteStride = 0,\n            target,\n            // name,\n            // extensions,\n            // extras,\n        } = bufferViews[bufferViewIndex];\n\n        const size = TYPE_SIZE[type];\n\n        // Parse data from joined buffers\n        const TypeArray = TYPE_ARRAY[componentType];\n        const elementBytes = data.BYTES_PER_ELEMENT;\n        const componentOffset = byteOffset / elementBytes;\n        const componentStride = byteStride / elementBytes;\n        const isInterleaved = !!byteStride && componentStride !== size;\n\n        // TODO: interleaved\n        const newData = isInterleaved ? data : new TypeArray(originalBuffer, byteOffset + bufferByteOffset, count * size);\n\n        // Return attribute data\n        return {\n            data: newData,\n            size,\n            type: componentType,\n            normalized,\n            buffer,\n            stride: byteStride,\n            offset: byteOffset,\n            count,\n            min,\n            max,\n        };\n    }\n\n    static parseNodes(gl, desc, meshes, skins, images) {\n        if (!desc.nodes) return null;\n        const nodes = desc.nodes.map(\n            ({\n                camera, // optional\n                children, // optional\n                skin: skinIndex, // optional\n                matrix, // optional\n                mesh: meshIndex, // optional\n                rotation, // optional\n                scale, // optional\n                translation, // optional\n                weights, // optional\n                name, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                const node = new Transform();\n                if (name) node.name = name;\n                node.extras = extras;\n                node.extensions = extensions;\n\n                // Need to attach to node as may have same material but different lightmap\n                if (extras && extras.lightmapTexture !== undefined) {\n                    extras.lightmapTexture.texture = this.createTexture(gl, desc, images, { source: extras.lightmapTexture.index });\n                }\n\n                // Apply transformations\n                if (matrix) {\n                    node.matrix.copy(matrix);\n                    node.decompose();\n                } else {\n                    if (rotation) node.quaternion.copy(rotation);\n                    if (scale) node.scale.copy(scale);\n                    if (translation) node.position.copy(translation);\n                    node.updateMatrix();\n                }\n\n                // Flags for avoiding duplicate transforms and removing unused instance nodes\n                let isInstanced = false;\n                let isFirstInstance = true;\n\n                // add mesh if included\n                if (meshIndex !== undefined) {\n                    meshes[meshIndex].primitives.forEach((mesh) => {\n                        mesh.extras = extras;\n\n                        if (mesh.geometry.isInstanced) {\n                            isInstanced = true;\n                            if (!mesh.instanceCount) {\n                                mesh.instanceCount = 0;\n                            } else {\n                                isFirstInstance = false;\n                            }\n                            node.matrix.toArray(mesh.geometry.attributes.instanceMatrix.data, mesh.instanceCount * 16);\n\n                            if (mesh.geometry.attributes.lightmapScaleOffset && extras && extras.lightmap_scale_offset) {\n                                mesh.geometry.attributes.lightmapScaleOffset.data.set(extras.lightmap_scale_offset, mesh.instanceCount * 4);\n                            }\n\n                            mesh.instanceCount++;\n\n                            if (mesh.instanceCount === mesh.numInstances) {\n                                // Remove properties once all instances added\n                                delete mesh.numInstances;\n                                delete mesh.instanceCount;\n                                // Flag attribute as dirty\n                                mesh.geometry.attributes.instanceMatrix.needsUpdate = true;\n\n                                if (mesh.geometry.attributes.lightmapScaleOffset) {\n                                    mesh.geometry.attributes.lightmapScaleOffset.needsUpdate = true;\n                                }\n                            }\n                        }\n\n                        // For instances, only the first node will actually have the mesh\n                        if (isInstanced) {\n                            if (isFirstInstance) mesh.setParent(node);\n                        } else {\n                            mesh.setParent(node);\n                        }\n                    });\n                }\n\n                // Reset node if instanced to not duplicate transforms\n                if (isInstanced) {\n                    // Remove unused nodes just providing an instance transform\n                    if (!isFirstInstance) return null;\n                    // Avoid duplicate transform for node containing the instanced mesh\n                    node.matrix.identity();\n                    node.decompose();\n                }\n\n                return node;\n            }\n        );\n\n        desc.nodes.forEach(({ children = [] }, i) => {\n            // Set hierarchy now all nodes created\n            children.forEach((childIndex) => {\n                if (!nodes[childIndex]) return;\n                nodes[childIndex].setParent(nodes[i]);\n            });\n        });\n\n        return nodes;\n    }\n\n    static populateSkins(skins, nodes) {\n        if (!skins) return;\n        skins.forEach((skin) => {\n            skin.joints = skin.joints.map((i, index) => {\n                const joint = nodes[i];\n                joint.bindInverse = new Mat4(...skin.inverseBindMatrices.data.slice(index * 16, (index + 1) * 16));\n                return joint;\n            });\n            if (skin.skeleton) skin.skeleton = nodes[skin.skeleton];\n        });\n    }\n\n    static parseAnimations(gl, desc, nodes, bufferViews) {\n        if (!desc.animations) return null;\n        return desc.animations.map(\n            ({\n                channels, // required\n                samplers, // required\n                name, // optional\n                // extensions, // optional\n                // extras,  // optional\n            }) => {\n                const data = channels.map(\n                    ({\n                        sampler: samplerIndex, // required\n                        target, // required\n                        // extensions, // optional\n                        // extras, // optional\n                    }) => {\n                        const {\n                            input: inputIndex, // required\n                            interpolation = 'LINEAR',\n                            output: outputIndex, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = samplers[samplerIndex];\n\n                        const {\n                            node: nodeIndex, // optional - TODO: when is it not included?\n                            path, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = target;\n\n                        const node = nodes[nodeIndex];\n                        const transform = TRANSFORMS[path];\n                        const times = this.parseAccessor(inputIndex, desc, bufferViews).data;\n                        const values = this.parseAccessor(outputIndex, desc, bufferViews).data;\n\n                        return {\n                            node,\n                            transform,\n                            interpolation,\n                            times,\n                            values,\n                        };\n                    }\n                );\n\n                return {\n                    name,\n                    animation: new GLTFAnimation(data),\n                };\n            }\n        );\n    }\n\n    static parseScenes(desc, nodes) {\n        if (!desc.scenes) return null;\n        return desc.scenes.map(\n            ({\n                nodes: nodesIndices = [],\n                name, // optional\n                extensions,\n                extras,\n            }) => {\n                const scene = nodesIndices.reduce((map, i) => {\n                    // Don't add null nodes (instanced transforms)\n                    if (nodes[i]) map.push(nodes[i]);\n                    return map;\n                }, []);\n                scene.extras = extras;\n                return scene;\n            }\n        );\n    }\n\n    static parseLights(gl, desc, nodes, scenes) {\n        const lights = {\n            directional: [],\n            point: [],\n            spot: [],\n        };\n\n        // Update matrices on root nodes\n        scenes.forEach((scene) => scene.forEach((node) => node.updateMatrixWorld()));\n\n        // uses KHR_lights_punctual extension\n        const lightsDescArray = desc.extensions?.KHR_lights_punctual?.lights || [];\n\n        // Need nodes for transforms\n        nodes.forEach((node) => {\n            if (!node?.extensions?.KHR_lights_punctual) return;\n            const lightIndex = node.extensions.KHR_lights_punctual.light;\n            const lightDesc = lightsDescArray[lightIndex];\n            const light = {\n                name: lightDesc.name || '',\n                color: { value: new Vec3().set(lightDesc.color || 1) },\n            };\n            // Apply intensity directly to color\n            if (lightDesc.intensity !== undefined) light.color.value.multiply(lightDesc.intensity);\n\n            switch (lightDesc.type) {\n                case 'directional':\n                    light.direction = { value: new Vec3(0, 0, 1).transformDirection(node.worldMatrix) };\n                    break;\n                case 'point':\n                    light.position = { value: new Vec3().applyMatrix4(node.worldMatrix) };\n                    light.distance = { value: lightDesc.range };\n                    light.decay = { value: 2 };\n                    break;\n                case 'spot':\n                    // TODO: support spot uniforms\n                    Object.assign(light, lightDesc);\n                    break;\n            }\n\n            lights[lightDesc.type].push(light);\n        });\n\n        return lights;\n    }\n}\n","let supportedFormat;\nlet id = 0;\n\nexport class BasisManager {\n    constructor(workerSrc) {\n        if (!supportedFormat) supportedFormat = this.getSupportedFormat();\n        this.onMessage = this.onMessage.bind(this);\n        this.queue = new Map();\n        this.initWorker(workerSrc);\n    }\n\n    getSupportedFormat() {\n        const gl = document.createElement('canvas').getContext('webgl');\n        /* if (!!gl.getExtension('WEBGL_compressed_texture_etc')) {\n            return 'etc2';\n        } else  */\n        if (!!gl.getExtension('WEBGL_compressed_texture_astc')) {\n            return 'astc';\n        } else if (!!gl.getExtension('EXT_texture_compression_bptc')) {\n            return 'bptc';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_s3tc')) {\n            return 's3tc';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_etc1')) {\n            return 'etc1';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_pvrtc') || !!gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc')) {\n            return 'pvrtc';\n            // } else if (!!gl.getExtension('WEBGL_compressed_texture_atc')) {\n            //     return 'atc';\n        }\n        return 'none';\n    }\n\n    initWorker(workerSrc) {\n        this.worker = new Worker(workerSrc);\n        this.worker.onmessage = this.onMessage;\n    }\n\n    onMessage({ data }) {\n        const { id, error, image } = data;\n        if (error) {\n            console.log(error, id);\n            return;\n        }\n        const textureResolve = this.queue.get(id);\n        this.queue.delete(id);\n        image.isBasis = true;\n        textureResolve(image);\n    }\n\n    parseTexture(buffer) {\n        id++;\n        this.worker.postMessage({\n            id,\n            buffer,\n            supportedFormat,\n        });\n        let textureResolve;\n        const promise = new Promise((res) => (textureResolve = res));\n        this.queue.set(id, textureResolve);\n        return promise;\n    }\n}\n","// Core\nexport { Geometry } from './core/Geometry.js';\nexport { Program } from './core/Program.js';\nexport { Renderer } from './core/Renderer.js';\nexport { Camera } from './core/Camera.js';\nexport { Transform } from './core/Transform.js';\nexport { Mesh } from './core/Mesh.js';\nexport { Texture } from './core/Texture.js';\nexport { RenderTarget } from './core/RenderTarget.js';\n\n// Maths\nexport { Color } from './math/Color.js';\nexport { Euler } from './math/Euler.js';\nexport { Mat3 } from './math/Mat3.js';\nexport { Mat4 } from './math/Mat4.js';\nexport { Quat } from './math/Quat.js';\nexport { Vec2 } from './math/Vec2.js';\nexport { Vec3 } from './math/Vec3.js';\nexport { Vec4 } from './math/Vec4.js';\n\n// Extras\nexport { Plane } from './extras/Plane.js';\nexport { Box } from './extras/Box.js';\nexport { Sphere } from './extras/Sphere.js';\nexport { Cylinder } from './extras/Cylinder.js';\nexport { Triangle } from './extras/Triangle.js';\nexport { Torus } from './extras/Torus.js';\nexport { Orbit } from './extras/Orbit.js';\nexport { Raycast } from './extras/Raycast.js';\nexport { Curve } from './extras/Curve.js';\nexport { Post } from './extras/Post.js';\nexport { Skin } from './extras/Skin.js';\nexport { Animation } from './extras/Animation.js';\nexport { Text } from './extras/Text.js';\nexport { NormalProgram } from './extras/NormalProgram.js';\nexport { Flowmap } from './extras/Flowmap.js';\nexport { GPGPU } from './extras/GPGPU.js';\nexport { Polyline } from './extras/Polyline.js';\nexport { Shadow } from './extras/Shadow.js';\nexport { KTXTexture } from './extras/KTXTexture.js';\nexport { TextureLoader } from './extras/TextureLoader.js';\nexport { GLTFLoader } from './extras/GLTFLoader.js';\nexport { GLTFSkin } from './extras/GLTFSkin.js';\nexport { BasisManager } from './extras/BasisManager.js';\n","module.exports=\"precision highp float;\\n#define GLSLIFY 1\\n\\n        uniform float uTime;\\n        uniform vec3 uColor;\\n        varying vec2 vUv;\\n\\n        float random (vec2 st) {\\n            return fract(sin(dot(st.xy,\\n                                 vec2(12.9898,78.233)))*\\n                43758.5453123);\\n        }\\n\\n        void main() {\\n            vec2 st = gl_FragCoord.xy/vUv.xy;\\n            st *= 10.0;\\n            float rnd = random(st);\\n            // gl_FragColor.rgb = 0.1 + 1.5 * rnd * sin(vUv.xyx + uTime) * uColor;\\n            // gl_FragColor.a = 1.0;\\n            gl_FragColor = vec4(vec3(1),1);\\n        }\";","module.exports=\"#define GLSLIFY 1\\n  attribute vec2 uv;\\n        attribute vec2 position;\\n        varying vec2 vUv;\\n        void main() {\\n            vUv = uv;\\n            gl_Position = vec4(position, 0, 1);\\n        }\";","// import { Renderer, Camera, Transform, Program, Mesh, Sphere, Orbit } from \"ogl\";\n\nimport { Renderer, Program, Color, Mesh, Triangle } from 'ogl';\nimport frag from '../shaders/frag.glsl';\nimport vert from '../shaders/vert.glsl';\n\nlet vertex;\nlet fragment;\n\nexport default class Thing {\n    constructor({scene='something',active=false}) {\n        this.scene = scene\n        this.active = active\n\n        console.log(this.scene, \"|\",  this.active)\n        // this.vertex = null;\n        // this.fragment= null\n    }\n\n    init() {\n        //this.load();\n        //this.addListeners();\n        this.loadShaders();\n        // this.loadMeshes();\n        this.addListeners();\n        this.draw();\n\n    }\n\n    loadShaders() {\n\n\n    }\n    draw() {\n\n        vertex = vert;\n\n        fragment = frag;\n\n        console.log(\"draw\")\n        const renderer = new Renderer();\n        const gl = renderer.gl;\n        document.body.appendChild(gl.canvas);\n        gl.clearColor(1, 1, 1, 1);\n\n        function resize() {\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n        window.addEventListener('resize', resize, false);\n        resize();\n\n        // Rather than using a plane (two triangles) to cover the viewport here is a\n        // triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n        // Excess will be out of the viewport.\n\n        //         position                uv\n        //      (-1, 3)                  (0, 2)\n        //         |\\                      |\\\n        //         |__\\(1, 1)              |__\\(1, 1)\n        //         |__|_\\                  |__|_\\\n        //   (-1, -1)   (3, -1)        (0, 0)   (2, 0)\n\n        const geometry = new Triangle(gl);\n\n        const program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms: {\n                uTime: { value: 0 },\n                uColor: { value: new Color(0.3, 0.8, 0.5) },\n            },\n        });\n\n        const mesh = new Mesh(gl, { geometry, program });\n\n        requestAnimationFrame(update);\n        function update(t) {\n            requestAnimationFrame(update);\n\n            program.uniforms.uTime.value = t * 0.001;\n\n            // Don't need a camera if camera uniforms aren't required\n            renderer.render({ scene: mesh });\n        }\n    }\n\n}\n// const thingA = () => {\n//     const vertex = /* glsl */ `\n//     attribute vec3 position;\n//     attribute vec3 normal;\n//     uniform mat4 modelViewMatrix;\n//     uniform mat4 projectionMatrix;\n//     uniform mat3 normalMatrix;\n//     varying vec3 vNormal;\n//     void main() {\n//         vNormal = normalize(normalMatrix * normal);\n//         gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n//     }\n// `;\n\n//     const fragment = /* glsl */ `\n//     precision highp float;\n//     varying vec3 vNormal;\n//     void main() {\n//         vec3 normal = normalize(vNormal);\n//         float lighting = dot(normal, normalize(vec3(-0.3, 0.8, 0.6)));\n//         gl_FragColor.rgb = vec3(0.2, 0.8, 1.0) + lighting * 0.1;\n//         gl_FragColor.a = 1.0;\n//     }\n// `;\n\n//     {\n//         const renderer = new Renderer({ dpr: 2 });\n//         const gl = renderer.gl;\n//         document.body.appendChild(gl.canvas);\n//         gl.clearColor(1, 1, 1, 1);\n\n//         const camera = new Camera(gl, { fov: 35 });\n//         camera.position.set(0, 1, 7);\n//         camera.lookAt([0, 0, 0]);\n//         const controls = new Orbit(camera);\n\n//         function resize() {\n//             renderer.setSize(window.innerWidth, window.innerHeight);\n//             camera.perspective({ aspect: gl.canvas.width / gl.canvas.height });\n//         }\n//         window.addEventListener('resize', resize, false);\n//         resize();\n\n//         const scene = new Transform();\n\n//         const sphereGeometry = new Sphere(gl);\n\n//         const program = new Program(gl, {\n//             vertex,\n//             fragment,\n\n//             // Don't cull faces so that plane is double sided - default is gl.BACK\n//             cullFace: null,\n//         });\n\n\n\n//         const sphere = new Mesh(gl, { geometry: sphereGeometry, program });\n//         sphere.position.set(1.3, 0, 0);\n//         sphere.setParent(scene);\n\n//         requestAnimationFrame(update);\n//         function update() {\n//             requestAnimationFrame(update);\n//             controls.update();\n\n\n//             sphere.rotation.y -= 0.03;\n\n\n//             renderer.render({ scene, camera });\n//         }\n//     }\n// }\n\n// export default thingA;","\nimport \"./style/main.scss\";\n// import lines from \"./js/follow\";\nimport GUIView from \"./js/app\";\nimport thingA from \"./js/thingA\";\n\t\nconst app = () => {\n\tlet ui = new GUIView();\n\tui.init();\n\tlet thing = new thingA( {scene:'stateA', active: true} );\n\n\n\t//\t\tthing.draw()\n\t// lines();\n\n};\n\nwindow.onload = (event) => {\n\tapp();\n};\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}