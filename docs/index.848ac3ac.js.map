{"mappings":"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","sources":["src/data.json","src/js/pages/Experiments.js","src/js/Stage.js","src/js/app.js","src/js/interface/Nav.js","src/js/pages/Home.js","src/js/interface/Contact.js","src/js/pages/Portafolio.js","node_modules/ogl/src/core/Program.js","node_modules/ogl/src/math/functions/Vec3Func.js","node_modules/ogl/src/math/Vec3.js","node_modules/ogl/src/core/Renderer.js","node_modules/ogl/src/math/functions/QuatFunc.js","node_modules/ogl/src/math/functions/Vec4Func.js","node_modules/ogl/src/math/Quat.js","node_modules/ogl/src/math/functions/Mat4Func.js","node_modules/ogl/src/math/Mat4.js","node_modules/ogl/src/math/Euler.js","node_modules/ogl/src/math/functions/EulerFunc.js","node_modules/ogl/src/math/functions/Mat3Func.js","node_modules/ogl/src/math/Mat3.js","node_modules/ogl/src/core/Mesh.js","node_modules/ogl/src/core/Transform.js","node_modules/ogl/src/math/functions/ColorFunc.js","node_modules/ogl/src/math/Color.js","node_modules/ogl/src/core/Geometry.js","node_modules/ogl/src/extras/Triangle.js","src/js/thingA.js","src/shaders/vert.glsl","src/shaders/frag.glsl","src/main.js"],"sourcesContent":["{\n    \"projects\": [\n        {\n            \"title\": \"Moving Photon\",\n            \"description\": \"I Help develop and deploy the Virtual Experience for Moving Photon an interactive installation/performance created by installation artistFriendred Peng. Participation in Moving Photon can be in 5 different ways, including a Phantom performance, interactive installation, interactive performance,interactive performance with EEG and a remote performance.\"\n        },\n        {\n            \"title\": \"Glitch Machine\",\n            \"description\": \"   as\"\n        },\n        {\n            \"title\": \"Noizu\",\n            \"description\": \"   as\"\n        }\n    ]\n}\n","\nimport data from '../../data.json';\n\nconsole.log(data.projects[0])\n\n\n\nconst Experiments = () => {\n\tconst template = `\n<main>\n   <div id=\"portafolio\">\n    <section class=\"proj\">\n        <a href=\"https://movingphoton.friendred.studio/\" target=\"_blank\"> <img src=\"poster4.jpg\" width=\"500\" /></a>\n    </section>\n    <section class=\"info\">\n        <h2>Moving Photon</h2>\n        <p>I Help develop and deploy the Virtual Experience for\n            <a href=\"https://friendred.studio/2021/10/07/moving-photon/\" target=\"_blank\"> Moving Photon</a> an\n            interactive installation/performance\n            created by installation artist<a href=\"https://friendred.studio\" target=\"_blank\"> Friendred Peng.</a>\n            Participation in Moving Photon can be in 5 different ways, including a Phantom performance,\n            interactive installation, interactive performance,interactive performance with EEG and a <a\n                href=\"https://movingphoton.friendred.studio/\" target=\"_blank\"> remote performance.</a>\n    </section>\n    <section class=\"info\">\n    <h2>Glitch MAchine</h2>\n        <p>A custom Glitch App build for<a href=\"https://www.instagram.com/jenna___marsh/ target=\"_blank\"> Jenna Marsh </a>, it lets you play with a image applying different filters and export the resulting image for printing</p>\n    </section>\n    <section class=\"proj\">\n        <a href=\"https://www.instagram.com/p/CNRC1QZHf66/\"> <img src= \"insta-0.jpg\" width=\"500\"/></a>\n     </section>\n     <section class=\"proj\">\n       <a href=\"https://onesimpleidea.itch.io/noizu\" target=\"_blank\"><img src= \"noizu.png\" width=\"500\"/></a>\n    </section>\n    <section class=\"info\">\n    <h2>Noizu</h2>\n        <p>Custom build a Audio player for Linux and mac. on building a light and simple player for linux, based on my old love to sonique and winamp i do miss those programs when ui and ux was actually interesting and different every time this is a preview</p>\n     </section>\n     <section class=\"info\">\n     <h2>PACMan YaEsta.com</h2>\n     <p>Develop a Physical installation with Mapping and live interaction  for the launch of the e-commerce site YaEsta.com back in the day</p>\n      </section>\n    <section class=\"proj\">\n       <a href=\"https://www.youtube.com/watch?v=YHZd0TxPMkY\"> <img src= \"insta-3.jpg\" width=\"500\"/></a>  \n    </section>\n   \n</div>\n</main>\n    `;\n\treturn template;\n};\n\nexport default Experiments;\n","export default class Stage {\n    constructor({scene = 'scene', active =false}){\n        this.scene = scene\n        this.active = true\n        console.log(this.scene, \"|\", this.active)\n    }\n    init(){\n        //something\n    }\n    load(){\n        //something\n    }\n    remove(){\n        //something\n    }\n    drar(){\n        //soemthign\n\n    }\n    addEventListener(something){\n        \n    }\n}","import Navbar from \"./interface/Nav\";\nimport Contact from \"./interface/Contact\";\nimport Home from \"./pages/Home\";\nimport Portafolio from \"./pages/Portafolio\";\nimport Experiments from \"./pages/Experiments\";\nimport Stage  from \"./Stage\"\n\n\nlet stage = null\nexport default class GUIView{\n    constructor(){}\n\n    init(){\n        this.load();\n        this.addListeners();\n        this.simpleSign();\n        \n        //this.responsive();\n    }\n    load(){\n        \t//load UI and socials media  plus main content\n        document.getElementById(\"ui\").innerHTML = Navbar();\n        document.getElementById(\"container\").innerHTML = Home();\n        document.getElementById(\"contact\").innerHTML = Contact();\n\n    }\n    addListeners(){\n        window.addEventListener(\"click\", (event) => {\n            let links = event.target.id;\n           \n            switch (links) {\n                case 'home':\n                    document.getElementById(\"container\").innerHTML = Home();\n                     stage = new Stage({scene:\"sectionA\",active:true})\n                    break;\n                case 'experiment':\n                    document.getElementById(\"container\").innerHTML = Experiments();\n                    stage = new Stage({scene:\"sectionB\",active:false})\n                    break;\n                case 'project':\n                    document.getElementById(\"container\").innerHTML = Portafolio();\n                    stage = new Stage({scene:\"sectionC\",active:true})\n                    break;\n            }\n        \n        }, false);\n        \n    }\n    responsive(){\n        \t//responsive screens\n        var x = window.matchMedia(\"(max-width: 700px)\");\n        if (x.matches) {\n            //console.log(\"responsive biatch\");\n            document.addEventListener(\"click\", function (event) {\n                if (event.target.id !== \"experiment\") return;\n                document.getElementById(\"container\").innerHTML = Experiments();\n                document.getElementById(\"ui\").style.top = \"10vh\";\n            });\n        }\n    }\n\n    simpleSign(){\n        if (window.navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\n            const args = [\n                \"\\n %c ->> created by cyrstem more info on onesimpleidea.xyz\\n\",\n                \"border: 1px solid #000;color: #fff; background: #171717; padding:5px 0;\",\n            ];\n            window.console.log.apply(console, args);\n        } else if (window.console) {\n            window.console.log(\"-created by cyrstem  -\");\n        }\n    }\n}","const Navbar =()=>{\n    const template = `\n        <nav>\n            <button id=\"home\">About Me </button>\n            <button id=\"experiment\">Experiments</button> \n        </nav>\n       \n    `;\n    return template;\n}\nexport default Navbar;\n","const Home = () => {\n    const template = `\n    <main>\n        <div id=\"content\">\n            <p>Hello...</p>\n            <p>I'm <b>Jacob</b> a <b>Creative Developer</b> and <b>Front-End Developer</b> based in Quito - Ecuador, specialize on building custom digital or physical experiences.</p> \n            <p><b>Self-taught</b> developer, <b>fast learner</b> that works with<b> WebGL, JS, C++, OpenGL, GLSL </b>and recently curious about <b>Machine Learning.</b></p>\n            <div id =\"sites\"> \n            <p> I have worked for:</p>\n            <ul>\n            <li>\n             <a href=\"https://activetheory.net/\" target=\"_blank\">\n               <span>Active Theory</span> \n               <span>WebGL Developer</span>\n               <span>2021</span>\n             </a>\n            </li>\n            <li>\n               <a href=\"https://myuniguru.com/\" target=\"_blank\">\n                 <span>My Uniguru</span>\n                 <span>FullStack Developer</span>\n                 <span class=\"number\">2020</span>\n               </a>\n             </li>\n             <li>\n             <a href=\"https://smartco.com.ec\" target=\"_blank\"> \n               <span>Smartco </span>\n               <span>Unity Developer</span>\n               <span class=\"number\">2019 - 2020</span>\n             </a>\n           </li>\n             <li>\n               <a href=\"https://www.yaesta.com\" target=\"_blank\">\n                 <span> YaEsta </span>\n                 <span> Front-end  & Designer</span> \n                 <span class=\"number\">2016 - 2018</span>\n               </a>\n             </li>\n            </ul>\n         </div>\n         <p>Contact me at <b>cyrstem[at]gmail[dot]com</b></p>  \n        </div>\n    </main>\n    `;\n    return template;\n};\nexport default Home;\n","const Contact = () => {\n\n\tconst template = `\n\n        <ul id=\"links\">\n            <a href =\"https://www.instagram.com/cyrstem/\"target=\"_blank\"><img src=\"insta.png\"></a>\n                <a href =\"http://ec.linkedin.com/in/jacobohz\" target=\"_blank\"><img src=\"in.png\"></a>\n            <a href =\"https://github.com/cyrstem/\" target=\"_blank\"><img src=\"git.png\"></a>\n        </ul>\n    `;\n\treturn template;\n    \n};\nexport default Contact;\n","const Portafolio = () => {\n  const template = `\n      <div class =\"sites\"> \n         <ul>\n         <li>\n          <a href=\"https://activetheory.net/\" target=\"_blank\">\n            <span>Active Theory</span> \n            <span>WebGL Developer</span>\n            <span>2021</span>\n          </a>\n         </li>\n         <li>\n            <a href=\"https://myuniguru.com/\" target=\"_blank\">\n              <span>My Uniguru</span>\n              <span>FullStack Developer</span>\n              <span class=\"number\">2020</span>\n            </a>\n          </li>\n          <li>\n          <a href=\"https://smartco.com.ec\" target=\"_blank\"> \n            <span>Smartco </span>\n            <span>Unity Developer</span>\n            <span class=\"number\">2019 - 2020</span>\n          </a>\n        </li>\n          <li>\n            <a href=\"https://www.yaesta.com\" target=\"_blank\">\n              <span> YaEsta </span>\n              <span> Front-end  & Designer</span> \n              <span class=\"number\">2016 - 2018</span>\n            </a>\n          </li>\n          \n      \n          <li>\n            <a href=\"https://www.pachamama.org.ec/en/\" target=\"_blank\">\n              <span> Pachamama</span>\n              <span> Front-end Developer</span>\n              <span class=\"number\">2010 – 2013</span>\n            </a>\n          </li>\n         </ul>\n      </div>\n    `;\n  return template;\n};\n\nexport default Portafolio;\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.state.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.state.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec3Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n        this.state.currentProgram = null;\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n        this.getExtension('WEBGL_compressed_texture_astc');\n        this.getExtension('EXT_texture_compression_bptc');\n        this.getExtension('WEBGL_compressed_texture_s3tc');\n        this.getExtension('WEBGL_compressed_texture_etc1');\n        this.getExtension('WEBGL_compressed_texture_pvrtc');\n        this.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","const NAMES = {\n    black: '#000000',\n    white: '#ffffff',\n    red: '#ff0000',\n    green: '#00ff00',\n    blue: '#0000ff',\n    fuchsia: '#ff00ff',\n    cyan: '#00ffff',\n    yellow: '#ffff00',\n    orange: '#ff8000',\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\n}\n\nexport function parseColor(color) {\n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n\n    // Hex\n    if (color[0] === '#') return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data - although needs position data for bounds calculation\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n        attr.usage = attr.usage || this.gl.STATIC_DRAW;\n\n        if (!attr.buffer) {\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        const isNewBuffer = !attr.buffer;\n        if (isNewBuffer) attr.buffer = this.gl.createBuffer();\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        if (isNewBuffer) {\n            this.gl.bufferData(attr.target, attr.data, attr.usage);\n        } else {\n            this.gl.bufferSubData(attr.target, 0, attr.data);\n        }\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Triangle extends Geometry {\n    constructor(gl, { attributes = {} } = {}) {\n        Object.assign(attributes, {\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// import { Renderer, Camera, Transform, Program, Mesh, Sphere, Orbit } from \"ogl\";\n\nimport { Renderer, Program, Color, Mesh, Triangle } from 'ogl';\nimport frag from '../shaders/frag.glsl';\nimport vert from '../shaders/vert.glsl';\n\nlet vertex;\nlet fragment;\n\nexport default class Thing {\n    constructor({scene='something',active=false}) {\n        this.scene = scene\n        this.active = active\n\n        console.log(this.scene, \"|\",  this.active)\n        // this.vertex = null;\n        // this.fragment= null\n    }\n\n    init() {\n        //this.load();\n        //this.addListeners();\n        this.loadShaders();\n        // this.loadMeshes();\n        this.addListeners();\n        this.draw();\n\n    }\n\n    loadShaders() {\n\n\n    }\n    draw() {\n\n        vertex = vert;\n\n        fragment = frag;\n\n        console.log(\"draw\")\n        const renderer = new Renderer();\n        const gl = renderer.gl;\n        document.body.appendChild(gl.canvas);\n        gl.clearColor(1, 1, 1, 1);\n\n        function resize() {\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n        window.addEventListener('resize', resize, false);\n        resize();\n\n        // Rather than using a plane (two triangles) to cover the viewport here is a\n        // triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n        // Excess will be out of the viewport.\n\n        //         position                uv\n        //      (-1, 3)                  (0, 2)\n        //         |\\                      |\\\n        //         |__\\(1, 1)              |__\\(1, 1)\n        //         |__|_\\                  |__|_\\\n        //   (-1, -1)   (3, -1)        (0, 0)   (2, 0)\n\n        const geometry = new Triangle(gl);\n\n        const program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms: {\n                uTime: { value: 0 },\n                uColor: { value: new Color(0.3, 0.8, 0.5) },\n            },\n        });\n\n        const mesh = new Mesh(gl, { geometry, program });\n\n        requestAnimationFrame(update);\n        function update(t) {\n            requestAnimationFrame(update);\n\n            program.uniforms.uTime.value = t * 0.001;\n\n            // Don't need a camera if camera uniforms aren't required\n            renderer.render({ scene: mesh });\n        }\n    }\n\n}\n// const thingA = () => {\n//     const vertex = /* glsl */ `\n//     attribute vec3 position;\n//     attribute vec3 normal;\n//     uniform mat4 modelViewMatrix;\n//     uniform mat4 projectionMatrix;\n//     uniform mat3 normalMatrix;\n//     varying vec3 vNormal;\n//     void main() {\n//         vNormal = normalize(normalMatrix * normal);\n//         gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n//     }\n// `;\n\n//     const fragment = /* glsl */ `\n//     precision highp float;\n//     varying vec3 vNormal;\n//     void main() {\n//         vec3 normal = normalize(vNormal);\n//         float lighting = dot(normal, normalize(vec3(-0.3, 0.8, 0.6)));\n//         gl_FragColor.rgb = vec3(0.2, 0.8, 1.0) + lighting * 0.1;\n//         gl_FragColor.a = 1.0;\n//     }\n// `;\n\n//     {\n//         const renderer = new Renderer({ dpr: 2 });\n//         const gl = renderer.gl;\n//         document.body.appendChild(gl.canvas);\n//         gl.clearColor(1, 1, 1, 1);\n\n//         const camera = new Camera(gl, { fov: 35 });\n//         camera.position.set(0, 1, 7);\n//         camera.lookAt([0, 0, 0]);\n//         const controls = new Orbit(camera);\n\n//         function resize() {\n//             renderer.setSize(window.innerWidth, window.innerHeight);\n//             camera.perspective({ aspect: gl.canvas.width / gl.canvas.height });\n//         }\n//         window.addEventListener('resize', resize, false);\n//         resize();\n\n//         const scene = new Transform();\n\n//         const sphereGeometry = new Sphere(gl);\n\n//         const program = new Program(gl, {\n//             vertex,\n//             fragment,\n\n//             // Don't cull faces so that plane is double sided - default is gl.BACK\n//             cullFace: null,\n//         });\n\n\n\n//         const sphere = new Mesh(gl, { geometry: sphereGeometry, program });\n//         sphere.position.set(1.3, 0, 0);\n//         sphere.setParent(scene);\n\n//         requestAnimationFrame(update);\n//         function update() {\n//             requestAnimationFrame(update);\n//             controls.update();\n\n\n//             sphere.rotation.y -= 0.03;\n\n\n//             renderer.render({ scene, camera });\n//         }\n//     }\n// }\n\n// export default thingA;","  attribute vec2 uv;\n        attribute vec2 position;\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = vec4(position, 0, 1);\n        }","precision highp float;\n        uniform float uTime;\n        uniform vec3 uColor;\n        varying vec2 vUv;\n\n        float random (vec2 st) {\n            return fract(sin(dot(st.xy,\n                                 vec2(12.9898,78.233)))*\n                43758.5453123);\n        }\n\n        void main() {\n            vec2 st = gl_FragCoord.xy/vUv.xy;\n            st *= 10.0;\n            float rnd = random(st);\n            // gl_FragColor.rgb = 0.1 + 1.5 * rnd * sin(vUv.xyx + uTime) * uColor;\n            // gl_FragColor.a = 1.0;\n            gl_FragColor = vec4(vec3(1),1);\n        }","\nimport \"./style/main.scss\";\n// import lines from \"./js/follow\";\nimport GUIView from \"./js/app\";\nimport thingA from \"./js/thingA\";\n\t\nconst app = () => {\n\tlet ui = new GUIView();\n\tui.init();\n\tlet thing = new thingA( {scene:'stateA', active: true} );\n\n\n\t//\t\tthing.draw()\n\t// lines();\n\n};\n\nwindow.onload = (event) => {\n\tapp();\n};\n"],"names":["module","JSON","parse","console","log","data","projects","$87b6e40be5688bed$export$2e2bcd8739ae039","constructor","scene","active","this","init","load","remove","drar","addEventListener","something","stage","$388b617130f03bd4$export$2e2bcd8739ae039","addListeners","simpleSign","document","getElementById","innerHTML","window","event","target","id","Stage","responsive","matchMedia","matches","style","top","navigator","userAgent","toLowerCase","indexOf","args","apply","$5baeac5adaf115e1$var$ID","$5baeac5adaf115e1$var$arrayCacheF32","$5baeac5adaf115e1$export$b6c59b989905b650","gl","vertex","fragment","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","canvas","error","warn","blendFunc","blendEquation","src","renderer","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","$5baeac5adaf115e1$var$addLineNumbers","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","set","getUniformLocation","name","split","match","uniformName","length","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","attributeLocations","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","location","getAttribLocation","attributeOrder","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","state","currentProgram","useProgram","forEach","activeUniform","$5baeac5adaf115e1$var$warn","undefined","value","texture","update","$5baeac5adaf115e1$var$setUniform","type","textureUnits","push","CW","deleteProgram","a","arrayLen","valueLen","Float32Array","i","$5baeac5adaf115e1$var$flatten","setValue","get","slice","b","l","$5baeac5adaf115e1$var$arraysEqual","$5baeac5adaf115e1$var$setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","$5baeac5adaf115e1$var$warnCount","message","$fcf02a95a4622ee8$export$f24224f1c91d8156","x","y","z","Math","sqrt","$fcf02a95a4622ee8$export$784d13d8ee351f07","out","$fcf02a95a4622ee8$export$e16d8520af44a096","$fcf02a95a4622ee8$export$4e2d2ead65e5f7e3","$fcf02a95a4622ee8$export$dcdf75081b88279d","$fcf02a95a4622ee8$export$ab44e1323ffc8376","$fcf02a95a4622ee8$export$a3295358bff77e","len","$fcf02a95a4622ee8$export$94132a0e348806d4","$fcf02a95a4622ee8$export$bb646b20bb93d339","ax","ay","az","bx","by","bz","$fcf02a95a4622ee8$export$944b09d2ad10b378","tempA","tempB","cosine","PI","acos","$46d76f993ed555f5$export$838423f3adec30fa","Array","super","v","copy","$fcf02a95a4622ee8$export$adaa4cf7ef1b65be","add","va","vb","sub","multiply","divide","inverse","distance","$fcf02a95a4622ee8$export$9f17032d917177de","squaredLen","squaredDistance","$fcf02a95a4622ee8$export$88e6ebb4fe54f538","negate","cross","scale","normalize","dot","equals","applyMatrix3","mat3","m","$fcf02a95a4622ee8$export$f0bfa0a0024626ee","applyMatrix4","mat4","w","$fcf02a95a4622ee8$export$5ffbd13800309d59","scaleRotateMatrix4","$fcf02a95a4622ee8$export$58ce737ad0c12bc2","applyQuaternion","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","$fcf02a95a4622ee8$export$c32adef9e939ce85","angle","lerp","t","$fcf02a95a4622ee8$export$3a89f8d6f6bf6c9f","clone","fromArray","o","toArray","transformDirection","$b5a73110aaf50409$var$tempVec3","$b5a73110aaf50409$var$ID","$b5a73110aaf50409$export$88530751e3977073","createElement","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","attributes","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","boundBuffer","extensions","getExtension","vertexAttribDivisor","drawArraysInstanced","drawElementsInstanced","createVertexArray","bindVertexArray","deleteVertexArray","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","setViewport","setScissor","scissor","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","buffer","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","draw","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","$0b0b47b0a5724ccd$export$2060d2db72cce88f","aw","bw","$0b0b47b0a5724ccd$export$784d13d8ee351f07","$0b0b47b0a5724ccd$export$adaa4cf7ef1b65be","$0b0b47b0a5724ccd$export$94132a0e348806d4","$0b0b47b0a5724ccd$export$a3295358bff77e","$e4281cd166358a18$export$5edfe12bb88684c8","onChange","identity","rotateX","rad","sin","cos","$0b0b47b0a5724ccd$export$a59c8716592e09af","rotateY","$0b0b47b0a5724ccd$export$cf71e4d4ca4d1cfd","rotateZ","$0b0b47b0a5724ccd$export$ea6eae3365de5b9c","a0","a1","a2","a3","dot1","invDot","$0b0b47b0a5724ccd$export$6897c284b6f9f4dc","conjugate","qA","qB","fromMatrix3","matrix3","fRoot","fTrace","j","k","$0b0b47b0a5724ccd$export$272a1eb8e5a4b55b","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","$0b0b47b0a5724ccd$export$7a404a587ea85af","fromAxisAngle","axis","s","$0b0b47b0a5724ccd$export$4286ddefc8f49512","slerp","omega","cosom","sinom","scale0","scale1","$0b0b47b0a5724ccd$export$1544d9bc2995de08","$17e1720dd2981297$export$2060d2db72cce88f","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","$17e1720dd2981297$export$71dc54d92bd04b57","mat","m11","m12","m13","m21","m22","m23","m31","m32","m33","hypot","$17e1720dd2981297$export$df3937d3b537df0a","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","$4e21c701cd686be1$export$21c0e3d5e995d7e1","m00","m01","m02","m03","m10","m20","m30","$17e1720dd2981297$export$adaa4cf7ef1b65be","translate","$17e1720dd2981297$export$d73ee8ef04f5226a","rotate","c","b00","b01","b02","b10","b11","b12","b20","b21","b22","abs","$17e1720dd2981297$export$bb628a54ab399bc9","$17e1720dd2981297$export$dcdf75081b88279d","ma","mb","fromPerspective","fov","aspect","near","far","fovy","f","tan","nf","$17e1720dd2981297$export$541149539f3a4684","fromOrthogonal","left","right","bottom","lr","bt","$17e1720dd2981297$export$4f2167e613cfc87b","fromQuaternion","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","$17e1720dd2981297$export$2ff2bbe382249af7","setPosition","b03","b04","b05","b06","b07","b08","b09","det","$17e1720dd2981297$export$6897c284b6f9f4dc","compose","pos","xy","xz","yz","$17e1720dd2981297$export$ddf9c55c9f2be172","getRotation","getScaling","getMaxScaleOnAxis","max","$17e1720dd2981297$export$6276f53cd18ff805","lookAt","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","$17e1720dd2981297$export$aa67782f4dc9e52c","determinant","$17e1720dd2981297$export$a04698f914c55ed9","$5f514479e80f605c$var$tmpMat4","$5f514479e80f605c$export$d93cc409a0768c5f","reorder","fromRotationMatrix","asin","min","atan2","$ee536ae28bcc5e05$export$48889b85f55f068c","$f18166a0e0295852$export$2060d2db72cce88f","$5195651babd91a92$export$83f4edd572c84121","$f18166a0e0295852$export$adaa4cf7ef1b65be","$f18166a0e0295852$export$d73ee8ef04f5226a","$f18166a0e0295852$export$bb628a54ab399bc9","$f18166a0e0295852$export$dcdf75081b88279d","fromMatrix4","$f18166a0e0295852$export$2ff2bbe382249af7","fromBasis","vec3a","vec3b","vec3c","$f18166a0e0295852$export$6897c284b6f9f4dc","getNormalMatrix","$f18166a0e0295852$export$966b25ab6dc1b1f9","$81280ac60efc3984$var$ID","$81280ac60efc3984$export$e176487c05830cc5","parent","children","matrix","matrixAutoUpdate","position","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","splice","force","updateMatrix","worldMatrixNeedsUpdate","callback","decompose","invert","geometry","mode","TRIANGLES","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","viewMatrix","projectionMatrix","cameraPosition","worldPosition","$5fd82508fd9a96a0$var$NAMES","black","white","red","green","blue","fuchsia","cyan","yellow","orange","$5fd82508fd9a96a0$export$848d71df1f759bc","hex","rgb","exec","parseInt","$5fd82508fd9a96a0$export$a564e3eeccb7f9fa","num","$5fd82508fd9a96a0$export$6e865ea70d7724f","arguments","$8ff67d004e35b87a$export$892596cec99bc70e","isArray","r","g","$ba0ac60fd26b90a9$var$tempVec3","$ba0ac60fd26b90a9$var$ID","$ba0ac60fd26b90a9$var$ATTR_ID","$ba0ac60fd26b90a9$var$isBoundsWarned","$dcac7b87bd16eb0f$export$5a465592bfe74b48","VAOs","drawRange","start","count","instancedCount","currentGeometry","glState","key","addAttribute","attr","size","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","usage","STATIC_DRAW","updateAttribute","isInstanced","index","isNewBuffer","createBuffer","bindBuffer","bufferData","bufferSubData","setIndex","setDrawRange","setInstancedCount","createVAO","bindAttributes","numLoc","vertexAttribPointer","enableVertexAttribArray","drawElements","drawArrays","getPosition","computeBoundingBox","array","BYTES_PER_ELEMENT","bounds","center","radius","Infinity","computeBoundingSphere","maxRadiusSq","key1","deleteBuffer","uv","$8dc8aca8b9d05c75$export$2e2bcd8739ae039","loadShaders","vert","frag","Renderer","resize","innerWidth","innerHeight","body","appendChild","clearColor","Triangle","Program","uTime","uColor","Color","Mesh","requestAnimationFrame","onload","GUIView","thingA"],"version":3,"file":"index.848ac3ac.js.map"}