{"version":3,"sources":["../node_modules/ogl/src/math/functions/Vec3Func.js","../node_modules/ogl/src/math/Vec3.js","../node_modules/ogl/src/core/Geometry.js","../node_modules/ogl/src/core/Program.js","../node_modules/ogl/src/core/Renderer.js","../node_modules/ogl/src/math/functions/Vec4Func.js","../node_modules/ogl/src/math/functions/QuatFunc.js","../node_modules/ogl/src/math/Quat.js","../node_modules/ogl/src/math/functions/Mat4Func.js","../node_modules/ogl/src/math/Mat4.js","../node_modules/ogl/src/math/functions/EulerFunc.js","../node_modules/ogl/src/math/Euler.js","../node_modules/ogl/src/core/Transform.js","../node_modules/ogl/src/core/Camera.js","../node_modules/ogl/src/math/functions/Mat3Func.js","../node_modules/ogl/src/math/Mat3.js","../node_modules/ogl/src/core/Mesh.js","../node_modules/ogl/src/core/Texture.js","../node_modules/ogl/src/core/RenderTarget.js","../node_modules/ogl/src/math/functions/ColorFunc.js","../node_modules/ogl/src/math/Color.js","../node_modules/ogl/src/math/functions/Vec2Func.js","../node_modules/ogl/src/math/Vec2.js","../node_modules/ogl/src/math/Vec4.js","../node_modules/ogl/src/extras/Plane.js","../node_modules/ogl/src/extras/Box.js","../node_modules/ogl/src/extras/Sphere.js","../node_modules/ogl/src/extras/Cylinder.js","../node_modules/ogl/src/extras/Triangle.js","../node_modules/ogl/src/extras/Torus.js","../node_modules/ogl/src/extras/Orbit.js","../node_modules/ogl/src/extras/Raycast.js","../node_modules/ogl/src/extras/Curve.js","../node_modules/ogl/src/extras/Post.js","../node_modules/ogl/src/extras/Animation.js","../node_modules/ogl/src/extras/Skin.js","../node_modules/ogl/src/extras/Text.js","../node_modules/ogl/src/extras/NormalProgram.js","../node_modules/ogl/src/extras/Flowmap.js","../node_modules/ogl/src/extras/GPGPU.js","../node_modules/ogl/src/extras/Polyline.js","../node_modules/ogl/src/extras/Shadow.js","../node_modules/ogl/src/extras/KTXTexture.js","../node_modules/ogl/src/extras/TextureLoader.js","../node_modules/ogl/src/extras/GLTFSkin.js","../node_modules/ogl/src/extras/BasisManager.js","../node_modules/ogl/src/index.mjs","js/follow.js","../node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js","../node_modules/core-js/library/modules/_global.js","../node_modules/core-js/library/modules/_core.js","../node_modules/core-js/library/modules/_a-function.js","../node_modules/core-js/library/modules/_ctx.js","../node_modules/core-js/library/modules/_is-object.js","../node_modules/core-js/library/modules/_an-object.js","../node_modules/core-js/library/modules/_fails.js","../node_modules/core-js/library/modules/_descriptors.js","../node_modules/core-js/library/modules/_dom-create.js","../node_modules/core-js/library/modules/_ie8-dom-define.js","../node_modules/core-js/library/modules/_to-primitive.js","../node_modules/core-js/library/modules/_object-dp.js","../node_modules/core-js/library/modules/_property-desc.js","../node_modules/core-js/library/modules/_hide.js","../node_modules/core-js/library/modules/_has.js","../node_modules/core-js/library/modules/_export.js","../node_modules/core-js/library/modules/es6.object.define-property.js","../node_modules/core-js/library/fn/object/define-property.js","../node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","../node_modules/@babel/runtime-corejs2/helpers/createClass.js","js/interface/Nav.js","js/interface/Contact.js","js/pages/Home.js","js/pages/Portafolio.js","js/pages/Experiments.js","js/app.js","main.js"],"names":["EPSILON","length","a","x","y","z","Math","sqrt","copy","out","set","add","b","subtract","multiply","divide","scale","distance","squaredDistance","squaredLength","negate","inverse","normalize","len","dot","cross","ax","ay","az","bx","by","bz","lerp","t","transformMat4","m","w","scaleRotateMat4","transformMat3","transformQuat","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","tempA","tempB","cosine","PI","acos","exactEquals","Vec3","Array","constructor","v","Vec3Func","va","vb","sub","squaredLen","equals","applyMatrix4","mat4","scaleRotateMatrix4","applyQuaternion","clone","fromArray","o","toArray","transformDirection","tempVec3","ID","ATTR_ID","isBoundsWarned","Geometry","gl","attributes","canvas","console","error","id","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","key","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","target","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","buffer","createBuffer","updateAttribute","isInstanced","warn","min","index","max","boundBuffer","bindBuffer","bufferData","STATIC_DRAW","setIndex","value","setDrawRange","setInstancedCount","createVAO","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","name","numLoc","i","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","draw","mode","TRIANGLES","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","getPosition","position","computeBoundingBox","array","BYTES_PER_ELEMENT","bounds","center","radius","Infinity","l","computeBoundingSphere","maxRadiusSq","remove","deleteVertexArray","deleteBuffer","arrayCacheF32","Program","vertex","fragment","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","blendFunc","blendEquation","src","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","use","flipFaces","textureUnit","currentProgram","useProgram","activeUniform","undefined","texture","setUniform","update","textureUnits","push","CW","deleteProgram","flatten","setValue","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","arrayLen","valueLen","warnCount","message","Renderer","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","extensions","getExtension","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","style","setViewport","setScissor","scissor","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","bindFramebuffer","FRAMEBUFFER","extension","webgl2Func","extFunc","bind","sortOpaque","renderOrder","zDepth","sortTransparent","sortUI","getRenderList","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","projectionViewMatrix","concat","render","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","aw","identity","setAxisAngle","axis","rad","s","sin","cos","bw","rotateX","rotateY","rotateZ","slerp","omega","cosom","sinom","scale0","scale1","invert","a0","a1","a2","a3","invDot","conjugate","fromMat3","fTrace","fRoot","j","k","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","vec4","Quat","onChange","QuatFunc","qA","qB","fromMatrix3","matrix3","fromAxisAngle","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","transpose","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","determinant","b0","b1","b2","b3","translate","rotate","c","b12","b20","b21","b22","hypot","abs","mat","getScaling","getMaxScaleOnAxis","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","fromQuat","yx","zx","zy","perspective","fovy","aspect","near","far","f","tan","nf","ortho","left","right","bottom","top","lr","bt","targetTo","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","multiplyScalar","Mat4","Mat4Func","ma","mb","fromPerspective","fov","fromOrthogonal","fromQuaternion","setPosition","compose","pos","lookAt","fromRotationMatrix","asin","atan2","tmpMat4","Euler","reorder","EulerFunc","Transform","parent","children","matrix","matrixAutoUpdate","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","indexOf","splice","force","updateMatrix","worldMatrixNeedsUpdate","callback","decompose","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","project","unproject","frustum","constant","invLen","geometry","frustumIntersectsSphere","normal","plane","fromMat4","normalFromMat4","projection","Mat3","Mat3Func","fromMatrix4","fromBasis","vec3a","vec3b","vec3c","getNormalMatrix","Mesh","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","mesh","modelMatrix","cameraPosition","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","generateMipmap","onUpdate","RenderTarget","depthTexture","createFramebuffer","textures","framebufferTexture2D","COLOR_ATTACHMENT0","NEAREST","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_ATTACHMENT","depthBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","stencilBuffer","STENCIL_INDEX8","STENCIL_ATTACHMENT","depthStencilBuffer","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","NAMES","black","white","red","green","blue","fuchsia","cyan","yellow","orange","hexToRGB","hex","rgb","exec","parseInt","numberToRGB","num","parseColor","arguments","toLowerCase","Color","isArray","ColorFunc","r","g","transformMat2","transformMat2d","Vec2","Vec2Func","applyMatrix3","mat3","Vec4","Vec4Func","Plane","widthSegments","heightSegments","wSegs","hSegs","numIndices","uv","Uint32Array","buildPlane","u","uDir","vDir","ii","io","segW","segH","iy","ix","d","Box","depthSegments","dSegs","Sphere","ceil","phiStart","phiLength","thetaStart","thetaLength","pStart","pLength","tStart","tLength","iv","te","grid","n","vRow","Cylinder","radiusTop","radiusBottom","radialSegments","openEnded","rSegs","numCaps","indexArray","addCap","isTop","sign","centerIndex","theta","cosTheta","sinTheta","addHeight","slope","indexRow","Triangle","Torus","tube","tubularSegments","arc","vertices","normals","uvs","indices","idx","STATE","NONE","ROTATE","DOLLY","PAN","DOLLY_PAN","tempVec2a","tempVec2b","Orbit","object","element","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","zoomStyle","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","sphericalTarget","spherical","panDelta","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","getZoomScale","pow","mouseButtons","ORBIT","ZOOM","pan","deltaX","deltaY","el","body","targetDistance","panLeft","clientHeight","panUp","dolly","dollyScale","handleMoveRotate","handleMovePan","onMouseDown","e","button","clientX","clientY","window","addEventListener","onMouseMove","onMouseUp","handleMouseMoveDolly","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","touches","pageX","pageY","handleTouchStartDollyPan","dx","dy","onTouchMove","handleTouchMoveDollyPan","onTouchEnd","onContextMenu","passive","tempVec2c","tempVec3c","tempVec3d","tempVec3e","tempVec3f","tempVec3g","tempVec3h","tempVec3i","tempVec3j","tempVec3k","Raycast","origin","direction","castMouse","mouse","intersectBounds","meshes","output","invWorldMat4","hits","localMaxDistance","localDistance","raycast","intersectSphere","intersectBox","hit","localPoint","point","intersectMeshes","includeUV","includeNormal","closestFaceNormal","faceNormal","barycoord","uvA","uvB","uvC","closestA","closestB","closestC","end","ai","bi","ci","intersectTriangle","localFaceNormal","localNormal","getBarycoord","sphere","ray","tca","d2","radius2","thc","t0","t1","box","tmin","tmax","tYmin","tYmax","tZmin","tZmax","invdirx","invdiry","invdirz","backfaceCulling","edge1","edge2","diff","DdN","DdQxE2","DdE1xQ","QdN","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","denom","invDenom","CATMULLROM","CUBICBEZIER","QUADRATICBEZIER","_a0","_a1","_a2","_a3","getCtrlPoint","points","last","getQuadraticBezierPoint","p0","c0","p1","ret","getCubicBezierPoint","c1","Curve","divisions","_getQuadraticBezierPoints","p","_getCubicBezierPoints","_getCatmullRomPoints","pop","getPoints","Post","targetOnly","options","passes","fbo","read","write","swap","resize","addPass","defaultVertex","defaultFragment","textureUniform","pass","floor","enabledPasses","filter","prevPos","prevRot","prevScl","nextPos","nextRot","nextScl","Animation","objects","elapsed","weight","duration","frames","totalWeight","isSet","floorFrame","blend","prevKey","nextKey","Skin","rig","createBones","createBoneTexture","animations","boneTexture","boneTextureSize","root","bones","bone","bindPose","bindInverse","log","LN2","boneMatrices","RGBA32F","addAnimation","animation","total","Text","font","text","align","letterSpacing","lineHeight","wordSpacing","wordBreak","_this","glyphs","buffers","fontHeight","baseline","newline","whitespace","createGeometry","common","base","chars","numChars","replace","layout","cursor","wordCursor","wordWidth","line","newLine","maxTimes","char","test","glyph","prevGlyph","kern","getKernPairOffset","advance","xadvance","numGlyphs","populateBuffers","texW","scaleW","texH","scaleH","lineIndex","xoffset","yoffset","h","uw","vh","numLines","map","id1","id2","kernings","first","second","amount","NormalProgram","Flowmap","falloff","dissipation","mask","createFBOs","HALF_FLOAT","HALF_FLOAT_OES","RGBA16F","velocity","tMap","uFalloff","uAlpha","uDissipation","uAspect","uMouse","uVelocity","GPGPU","initialData","dataLength","coords","floatArray","tmp","Polyline","prev","next","side","ind","updateGeometry","uResolution","resolution","uDPR","uThickness","thickness","uColor","uMiter","miter","Shadow","light","depthProgram","castMeshes","receive","cast","uniformProjection","uniformView","uniformTexture","colorProgram","isForceVisibility","KTXTexture","parseBuffer","ktx","KhronosTextureContainer","mipmaps","glInternalFormat","numberOfMipmapLevels","idCheck","head","DataView","littleEndian","getUint32","glType","numberOfFaces","bytesOfKeyValueData","levelSize","Int32Array","face","cache","supportedExtensions","TextureLoader","load","support","getSupportedExtensions","ext","prop","includes","cacheID","loaded","loadKTX","loadImage","pvrtc","s3tc","etc1","astc","bc7","detectWebP","fetch","then","res","arrayBuffer","decodeImage","imgBmp","powerOfTwo","close","clearCache","toDataURL","log2","Promise","resolve","isChrome","navigator","userAgent","createImageBitmap","blob","imageOrientation","img","Image","crossOrigin","onload","GLTFSkin","skeleton","joints","updateUniforms","_worldMatrix","supportedFormat","BasisManager","workerSrc","getSupportedFormat","onMessage","queue","initWorker","worker","Worker","onmessage","textureResolve","delete","isBasis","parseTexture","postMessage","promise","innerWidth","innerHeight","polyline","random","updateMouse","changedTouches","appendChild","clearColor","spring","friction","mouseVelocity","mouseOffset","requestAnimationFrame","_classCallCheck","instance","Constructor","TypeError","module","exports","__esModule","require","_Object$defineProperty","_defineProperties","props","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","prototype","Navbar","template","Contact","Home","Portafolio","Experiments","GUIView","addListeners","simpleSign","getElementById","innerHTML","event","links","matchMedia","matches","apply","app","init"],"mappings":"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","file":"main.efa4c847.js","sourceRoot":"../src","sourcesContent":["const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data - although needs position data for bounds calculation\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n        this.getExtension('WEBGL_compressed_texture_astc');\n        this.getExtension('EXT_texture_compression_bptc');\n        this.getExtension('WEBGL_compressed_texture_s3tc');\n        this.getExtension('WEBGL_compressed_texture_etc1');\n        this.getExtension('WEBGL_compressed_texture_pvrtc');\n        this.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","// TODO: test stencil and depth\nimport { Texture } from './Texture.js';\n\nexport class RenderTarget {\n    constructor(\n        gl,\n        {\n            width = gl.canvas.width,\n            height = gl.canvas.height,\n            target = gl.FRAMEBUFFER,\n            color = 1, // number of color attachments\n            depth = true,\n            stencil = false,\n            depthTexture = false, // note - stencil breaks\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = minFilter,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            unpackAlignment,\n            premultiplyAlpha,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.buffer = this.gl.createFramebuffer();\n        this.target = target;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        this.textures = [];\n        const drawBuffers = [];\n\n        // create and attach required num of color textures\n        for (let i = 0; i < color; i++) {\n            this.textures.push(\n                new Texture(gl, {\n                    width,\n                    height,\n                    wrapS,\n                    wrapT,\n                    minFilter,\n                    magFilter,\n                    type,\n                    format,\n                    internalFormat,\n                    unpackAlignment,\n                    premultiplyAlpha,\n                    flipY: false,\n                    generateMipmaps: false,\n                })\n            );\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n            drawBuffers.push(this.gl.COLOR_ATTACHMENT0 + i);\n        }\n\n        // For multi-render targets shader access\n        if (drawBuffers.length > 1) this.gl.renderer.drawBuffers(drawBuffers);\n\n        // alias for majority of use cases\n        this.texture = this.textures[0];\n\n        // note depth textures break stencil - so can't use together\n        if (depthTexture && (this.gl.renderer.isWebgl2 || this.gl.renderer.getExtension('WEBGL_depth_texture'))) {\n            this.depthTexture = new Texture(gl, {\n                width,\n                height,\n                minFilter: this.gl.NEAREST,\n                magFilter: this.gl.NEAREST,\n                format: this.gl.DEPTH_COMPONENT,\n                internalFormat: gl.renderer.isWebgl2 ? this.gl.DEPTH_COMPONENT16 : this.gl.DEPTH_COMPONENT,\n                type: this.gl.UNSIGNED_INT,\n            });\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            // Render buffers\n            if (depth && !stencil) {\n                this.depthBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, this.depthBuffer);\n            }\n\n            if (stencil && !depth) {\n                this.stencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.stencilBuffer);\n            }\n\n            if (depth && stencil) {\n                this.depthStencilBuffer = this.gl.createRenderbuffer();\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n                this.gl.framebufferRenderbuffer(this.target, this.gl.DEPTH_STENCIL_ATTACHMENT, this.gl.RENDERBUFFER, this.depthStencilBuffer);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n\n    setSize(width, height) {\n        if (this.width === width && this.height === height) return;\n\n        this.width = width;\n        this.height = height;\n        this.gl.bindFramebuffer(this.target, this.buffer);\n\n        for (let i = 0; i < this.textures.length; i++) {\n            this.textures[i].width = width;\n            this.textures[i].height = height;\n            this.textures[i].needsUpdate = true;\n            this.textures[i].update();\n            this.gl.framebufferTexture2D(this.target, this.gl.COLOR_ATTACHMENT0 + i, this.gl.TEXTURE_2D, this.textures[i].texture, 0 /* level */);\n        }\n\n        if (this.depthTexture) {\n            this.depthTexture.width = width;\n            this.depthTexture.height = height;\n            this.depthTexture.needsUpdate = true;\n            this.depthTexture.update();\n            this.gl.framebufferTexture2D(this.target, this.gl.DEPTH_ATTACHMENT, this.gl.TEXTURE_2D, this.depthTexture.texture, 0 /* level */);\n        } else {\n            if (this.depthBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_COMPONENT16, width, height);\n            }\n\n            if (this.stencilBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.stencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.STENCIL_INDEX8, width, height);\n            }\n\n            if (this.depthStencilBuffer) {\n                this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, this.depthStencilBuffer);\n                this.gl.renderbufferStorage(this.gl.RENDERBUFFER, this.gl.DEPTH_STENCIL, width, height);\n            }\n        }\n\n        this.gl.bindFramebuffer(this.target, null);\n    }\n}\n","const NAMES = {\n    black: '#000000',\n    white: '#ffffff',\n    red: '#ff0000',\n    green: '#00ff00',\n    blue: '#0000ff',\n    fuchsia: '#ff00ff',\n    cyan: '#00ffff',\n    yellow: '#ffff00',\n    orange: '#ff8000',\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\n}\n\nexport function parseColor(color) {\n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n\n    // Hex\n    if (color[0] === '#') return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","import * as Vec4Func from './functions/Vec4Func.js';\n\nexport class Vec4 extends Array {\n    constructor(x = 0, y = x, z = x, w = x) {\n        super(x, y, z, w);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set w(v) {\n        this[3] = v;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        Vec4Func.set(this, x, y, z, w);\n        return this;\n    }\n\n    copy(v) {\n        Vec4Func.copy(this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec4Func.normalize(this, this);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = numIndices > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Plane } from './Plane.js';\n\nexport class Box extends Geometry {\n    constructor(gl, { width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const dSegs = depthSegments;\n\n        const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n        const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n\n        // left, right\n        Plane.buildPlane(position, normal, uv, index, depth, height, width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, depth, height, -width, dSegs, hSegs, 2, 1, 0, 1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        // top, bottom\n        Plane.buildPlane(position, normal, uv, index, width, depth, height, dSegs, wSegs, 0, 2, 1, 1, 1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, depth, -height, dSegs, wSegs, 0, 2, 1, 1, -1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        // front, back\n        Plane.buildPlane(position, normal, uv, index, width, height, -depth, wSegs, hSegs, 0, 1, 2, -1, -1, i, ii);\n        i += (wSegs + 1) * (hSegs + 1);\n        ii += wSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, 0, 1, 2, 1, -1, i, ii);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(\n        gl,\n        {\n            radius = 0.5,\n            widthSegments = 16,\n            heightSegments = Math.ceil(widthSegments * 0.5),\n            phiStart = 0,\n            phiLength = Math.PI * 2,\n            thetaStart = 0,\n            thetaLength = Math.PI,\n            attributes = {},\n        } = {}\n    ) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3] = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3] = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2] = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3] = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3] = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Cylinder extends Geometry {\n    constructor(\n        gl,\n        {\n            radiusTop = 0.5,\n            radiusBottom = 0.5,\n            height = 1,\n            radialSegments = 8,\n            heightSegments = 1,\n            openEnded = false,\n            thetaStart = 0,\n            thetaLength = Math.PI * 2,\n            attributes = {},\n        } = {}\n    ) {\n        const rSegs = radialSegments;\n        const hSegs = heightSegments;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const numCaps = openEnded ? 0 : radiusBottom && radiusTop ? 2 : 1;\n        const num = (rSegs + 1) * (hSegs + 1 + numCaps) + numCaps;\n        const numIndices = rSegs * hSegs * 6 + numCaps * rSegs * 3;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n        const indexArray = [];\n\n        addHeight();\n        if (!openEnded) {\n            if (radiusTop) addCap(true);\n            if (radiusBottom) addCap(false);\n        }\n\n        function addHeight() {\n            let x, y;\n            const n = new Vec3();\n            const slope = (radiusBottom - radiusTop) / height;\n\n            for (y = 0; y <= hSegs; y++) {\n                const indexRow = [];\n                const v = y / hSegs;\n\n                const r = v * (radiusBottom - radiusTop) + radiusTop;\n                for (x = 0; x <= rSegs; x++) {\n                    const u = x / rSegs;\n                    const theta = u * tLength + tStart;\n                    const sinTheta = Math.sin(theta);\n                    const cosTheta = Math.cos(theta);\n\n                    position.set([r * sinTheta, (0.5 - v) * height, r * cosTheta], i * 3);\n                    n.set(sinTheta, slope, cosTheta).normalize();\n                    normal.set([n.x, n.y, n.z], i * 3);\n                    uv.set([u, 1 - v], i * 2);\n                    indexRow.push(i++);\n                }\n                indexArray.push(indexRow);\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                for (y = 0; y < hSegs; y++) {\n                    const a = indexArray[y][x];\n                    const b = indexArray[y + 1][x];\n                    const c = indexArray[y + 1][x + 1];\n                    const d = indexArray[y][x + 1];\n\n                    index.set([a, b, d, b, c, d], ii * 3);\n                    ii += 2;\n                }\n            }\n        }\n\n        function addCap(isTop) {\n            let x;\n            const r = isTop === true ? radiusTop : radiusBottom;\n            const sign = isTop === true ? 1 : -1;\n\n            const centerIndex = i;\n            position.set([0, 0.5 * height * sign, 0], i * 3);\n            normal.set([0, sign, 0], i * 3);\n            uv.set([0.5, 0.5], i * 2);\n            i++;\n\n            for (x = 0; x <= rSegs; x++) {\n                const u = x / rSegs;\n                const theta = u * tLength + tStart;\n                const cosTheta = Math.cos(theta);\n                const sinTheta = Math.sin(theta);\n\n                position.set([r * sinTheta, 0.5 * height * sign, r * cosTheta], i * 3);\n                normal.set([0, sign, 0], i * 3);\n                uv.set([cosTheta * 0.5 + 0.5, sinTheta * 0.5 * sign + 0.5], i * 2);\n                i++;\n            }\n\n            for (x = 0; x < rSegs; x++) {\n                const j = centerIndex + x + 1;\n                if (isTop) {\n                    index.set([j, j + 1, centerIndex], ii * 3);\n                } else {\n                    index.set([j + 1, j, centerIndex], ii * 3);\n                }\n                ii++;\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Triangle extends Geometry {\n    constructor(gl, { attributes = {} } = {}) {\n        Object.assign(attributes, {\n            position: { size: 2, data: new Float32Array([-1, -1, 3, -1, -1, 3]) },\n            uv: { size: 2, data: new Float32Array([0, 0, 2, 0, 0, 2]) },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// https://github.com/mrdoob/three.js/blob/master/src/geometries/TorusGeometry.js\n\nimport { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Torus extends Geometry {\n    constructor(gl, { radius = 0.5, tube = 0.2, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2, attributes = {} } = {}) {\n        const num = (radialSegments + 1) * (tubularSegments + 1);\n        const numIndices = radialSegments * tubularSegments * 6;\n\n        const vertices = new Float32Array(num * 3);\n        const normals = new Float32Array(num * 3);\n        const uvs = new Float32Array(num * 2);\n        const indices = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        const center = new Vec3();\n        const vertex = new Vec3();\n        const normal = new Vec3();\n\n        // generate vertices, normals and uvs\n        let idx = 0;\n        for (let j = 0; j <= radialSegments; j++) {\n            for (let i = 0; i <= tubularSegments; i++, idx++) {\n                const u = (i / tubularSegments) * arc;\n                const v = (j / radialSegments) * Math.PI * 2;\n\n                // vertex\n                vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n                vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n                vertex.z = tube * Math.sin(v);\n\n                vertices.set([vertex.x, vertex.y, vertex.z], idx * 3);\n\n                // normal\n                center.x = radius * Math.cos(u);\n                center.y = radius * Math.sin(u);\n                normal.sub(vertex, center).normalize();\n\n                normals.set([normal.x, normal.y, normal.z], idx * 3);\n\n                // uv\n                uvs.set([i / tubularSegments, j / radialSegments], idx * 2);\n            }\n        }\n\n        // generate indices\n        idx = 0;\n        for (let j = 1; j <= radialSegments; j++) {\n            for (let i = 1; i <= tubularSegments; i++, idx++) {\n                // indices\n                const a = (tubularSegments + 1) * j + i - 1;\n                const b = (tubularSegments + 1) * (j - 1) + i - 1;\n                const c = (tubularSegments + 1) * (j - 1) + i;\n                const d = (tubularSegments + 1) * j + i;\n\n                // faces\n                indices.set([a, b, d, b, c, d], idx * 6);\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: vertices },\n            normal: { size: 3, data: normals },\n            uv: { size: 2, data: uvs },\n            index: { data: indices },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        zoomStyle = 'dolly',\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n    this.zoomStyle = zoomStyle;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    const dolly = (dollyScale) => {\n        if (this.zoomStyle === 'dolly') sphericalDelta.radius /= dollyScale;\n        else {\n            object.fov /= dollyScale;\n            if (object.type === 'orthographic') object.orthographic();\n            else object.perspective();\n        }\n    };\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","// TODO: barycentric code shouldn't be here, but where?\n// TODO: SphereCast?\n\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\nconst tempVec2c = new Vec2();\n\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\nconst tempVec3c = new Vec3();\nconst tempVec3d = new Vec3();\nconst tempVec3e = new Vec3();\nconst tempVec3f = new Vec3();\nconst tempVec3g = new Vec3();\nconst tempVec3h = new Vec3();\nconst tempVec3i = new Vec3();\nconst tempVec3j = new Vec3();\nconst tempVec3k = new Vec3();\n\nconst tempMat4 = new Mat4();\n\nexport class Raycast {\n    constructor() {\n        this.origin = new Vec3();\n        this.direction = new Vec3();\n    }\n\n    // Set ray from mouse unprojection\n    castMouse(camera, mouse = [0, 0]) {\n        if (camera.type === 'orthographic') {\n            // Set origin\n            // Since camera is orthographic, origin is not the camera position\n            const { left, right, bottom, top, zoom } = camera;\n            const x = left / zoom + ((right - left) / zoom) * (mouse[0] * 0.5 + 0.5);\n            const y = bottom / zoom + ((top - bottom) / zoom) * (mouse[1] * 0.5 + 0.5);\n            this.origin.set(x, y, 0);\n            this.origin.applyMatrix4(camera.worldMatrix);\n\n            // Set direction\n            // https://community.khronos.org/t/get-direction-from-transformation-matrix-or-quat/65502/2\n            this.direction.x = -camera.worldMatrix[8];\n            this.direction.y = -camera.worldMatrix[9];\n            this.direction.z = -camera.worldMatrix[10];\n        } else {\n            // Set origin\n            camera.worldMatrix.getTranslation(this.origin);\n\n            // Set direction\n            this.direction.set(mouse[0], mouse[1], 0.5);\n            camera.unproject(this.direction);\n            this.direction.sub(this.origin).normalize();\n        }\n    }\n\n    intersectBounds(meshes, { maxDistance, output = [] } = {}) {\n        if (!Array.isArray(meshes)) meshes = [meshes];\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n\n        const hits = output;\n        hits.length = 0;\n\n        meshes.forEach((mesh) => {\n            // Create bounds\n            if (!mesh.geometry.bounds || mesh.geometry.bounds.radius === Infinity) mesh.geometry.computeBoundingSphere();\n            const bounds = mesh.geometry.bounds;\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            // Break out early if bounds too far away from origin\n            if (maxDistance) {\n                if (origin.distance(bounds.center) - bounds.radius > localMaxDistance) return;\n            }\n\n            let localDistance = 0;\n\n            // Check origin isn't inside bounds before testing intersection\n            if (mesh.geometry.raycast === 'sphere') {\n                if (origin.distance(bounds.center) > bounds.radius) {\n                    localDistance = this.intersectSphere(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            } else {\n                if (\n                    origin.x < bounds.min.x ||\n                    origin.x > bounds.max.x ||\n                    origin.y < bounds.min.y ||\n                    origin.y > bounds.max.y ||\n                    origin.z < bounds.min.z ||\n                    origin.z > bounds.max.z\n                ) {\n                    localDistance = this.intersectBox(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            }\n\n            if (maxDistance && localDistance > localMaxDistance) return;\n\n            // Create object on mesh to avoid generating lots of objects\n            if (!mesh.hit) mesh.hit = { localPoint: new Vec3(), point: new Vec3() };\n\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            hits.push(mesh);\n        });\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectMeshes(meshes, { cullFace = true, maxDistance, includeUV = true, includeNormal = true, output = [] } = {}) {\n        // Test bounds first before testing geometry\n        const hits = this.intersectBounds(meshes, { maxDistance, output });\n        if (!hits.length) return hits;\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n        const a = tempVec3c;\n        const b = tempVec3d;\n        const c = tempVec3e;\n        const closestFaceNormal = tempVec3f;\n        const faceNormal = tempVec3g;\n        const barycoord = tempVec3h;\n        const uvA = tempVec2a;\n        const uvB = tempVec2b;\n        const uvC = tempVec2c;\n\n        for (let i = hits.length - 1; i >= 0; i--) {\n            const mesh = hits[i];\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            let localDistance = 0;\n            let closestA, closestB, closestC;\n\n            const geometry = mesh.geometry;\n            const attributes = geometry.attributes;\n            const index = attributes.index;\n            const position = attributes.position;\n\n            const start = Math.max(0, geometry.drawRange.start);\n            const end = Math.min(index ? index.count : position.count, geometry.drawRange.start + geometry.drawRange.count);\n            const stride = position.stride ? position.stride / position.data.BYTES_PER_ELEMENT : position.size;\n\n            for (let j = start; j < end; j += 3) {\n                // Position attribute indices for each triangle\n                const ai = index ? index.data[j] : j;\n                const bi = index ? index.data[j + 1] : j + 1;\n                const ci = index ? index.data[j + 2] : j + 2;\n\n                a.fromArray(position.data, ai * stride);\n                b.fromArray(position.data, bi * stride);\n                c.fromArray(position.data, ci * stride);\n\n                const distance = this.intersectTriangle(a, b, c, cullFace, origin, direction, faceNormal);\n                if (!distance) continue;\n\n                // Too far away\n                if (maxDistance && distance > localMaxDistance) continue;\n\n                if (!localDistance || distance < localDistance) {\n                    localDistance = distance;\n                    closestA = ai;\n                    closestB = bi;\n                    closestC = ci;\n                    closestFaceNormal.copy(faceNormal);\n                }\n            }\n\n            if (!localDistance) hits.splice(i, 1);\n\n            // Update hit values from bounds-test\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            // Add unique hit objects on mesh to avoid generating lots of objects\n            if (!mesh.hit.faceNormal) {\n                mesh.hit.localFaceNormal = new Vec3();\n                mesh.hit.faceNormal = new Vec3();\n                mesh.hit.uv = new Vec2();\n                mesh.hit.localNormal = new Vec3();\n                mesh.hit.normal = new Vec3();\n            }\n\n            // Add face normal data which is already computed\n            mesh.hit.localFaceNormal.copy(closestFaceNormal);\n            mesh.hit.faceNormal.copy(mesh.hit.localFaceNormal).transformDirection(mesh.worldMatrix);\n\n            // Optional data, opt out to optimise a bit if necessary\n            if (includeUV || includeNormal) {\n                // Calculate barycoords to find uv values at hit point\n                a.fromArray(position.data, closestA * 3);\n                b.fromArray(position.data, closestB * 3);\n                c.fromArray(position.data, closestC * 3);\n                this.getBarycoord(mesh.hit.localPoint, a, b, c, barycoord);\n            }\n\n            if (includeUV && attributes.uv) {\n                uvA.fromArray(attributes.uv.data, closestA * 2);\n                uvB.fromArray(attributes.uv.data, closestB * 2);\n                uvC.fromArray(attributes.uv.data, closestC * 2);\n                mesh.hit.uv.set(\n                    uvA.x * barycoord.x + uvB.x * barycoord.y + uvC.x * barycoord.z,\n                    uvA.y * barycoord.x + uvB.y * barycoord.y + uvC.y * barycoord.z\n                );\n            }\n\n            if (includeNormal && attributes.normal) {\n                a.fromArray(attributes.normal.data, closestA * 3);\n                b.fromArray(attributes.normal.data, closestB * 3);\n                c.fromArray(attributes.normal.data, closestC * 3);\n                mesh.hit.localNormal.set(\n                    a.x * barycoord.x + b.x * barycoord.y + c.x * barycoord.z,\n                    a.y * barycoord.x + b.y * barycoord.y + c.y * barycoord.z,\n                    a.z * barycoord.x + b.z * barycoord.y + c.z * barycoord.z\n                );\n\n                mesh.hit.normal.copy(mesh.hit.localNormal).transformDirection(mesh.worldMatrix);\n            }\n        }\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectSphere(sphere, origin = this.origin, direction = this.direction) {\n        const ray = tempVec3c;\n        ray.sub(sphere.center, origin);\n        const tca = ray.dot(direction);\n        const d2 = ray.dot(ray) - tca * tca;\n        const radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return 0;\n        const thc = Math.sqrt(radius2 - d2);\n        const t0 = tca - thc;\n        const t1 = tca + thc;\n        if (t0 < 0 && t1 < 0) return 0;\n        if (t0 < 0) return t1;\n        return t0;\n    }\n\n    // Ray AABB - Ray Axis aligned bounding box testing\n    intersectBox(box, origin = this.origin, direction = this.direction) {\n        let tmin, tmax, tYmin, tYmax, tZmin, tZmax;\n        const invdirx = 1 / direction.x;\n        const invdiry = 1 / direction.y;\n        const invdirz = 1 / direction.z;\n        const min = box.min;\n        const max = box.max;\n        tmin = ((invdirx >= 0 ? min.x : max.x) - origin.x) * invdirx;\n        tmax = ((invdirx >= 0 ? max.x : min.x) - origin.x) * invdirx;\n        tYmin = ((invdiry >= 0 ? min.y : max.y) - origin.y) * invdiry;\n        tYmax = ((invdiry >= 0 ? max.y : min.y) - origin.y) * invdiry;\n        if (tmin > tYmax || tYmin > tmax) return 0;\n        if (tYmin > tmin) tmin = tYmin;\n        if (tYmax < tmax) tmax = tYmax;\n        tZmin = ((invdirz >= 0 ? min.z : max.z) - origin.z) * invdirz;\n        tZmax = ((invdirz >= 0 ? max.z : min.z) - origin.z) * invdirz;\n        if (tmin > tZmax || tZmin > tmax) return 0;\n        if (tZmin > tmin) tmin = tZmin;\n        if (tZmax < tmax) tmax = tZmax;\n        if (tmax < 0) return 0;\n        return tmin >= 0 ? tmin : tmax;\n    }\n\n    intersectTriangle(a, b, c, backfaceCulling = true, origin = this.origin, direction = this.direction, normal = tempVec3g) {\n        // from https://github.com/mrdoob/three.js/blob/master/src/math/Ray.js\n        // which is from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        const edge1 = tempVec3h;\n        const edge2 = tempVec3i;\n        const diff = tempVec3j;\n        edge1.sub(b, a);\n        edge2.sub(c, a);\n        normal.cross(edge1, edge2);\n        let DdN = direction.dot(normal);\n        if (!DdN) return 0;\n        let sign;\n        if (DdN > 0) {\n            if (backfaceCulling) return 0;\n            sign = 1;\n        } else {\n            sign = -1;\n            DdN = -DdN;\n        }\n        diff.sub(origin, a);\n        let DdQxE2 = sign * direction.dot(edge2.cross(diff, edge2));\n        if (DdQxE2 < 0) return 0;\n        let DdE1xQ = sign * direction.dot(edge1.cross(diff));\n        if (DdE1xQ < 0) return 0;\n        if (DdQxE2 + DdE1xQ > DdN) return 0;\n        let QdN = -sign * diff.dot(normal);\n        if (QdN < 0) return 0;\n        return QdN / DdN;\n    }\n\n    getBarycoord(point, a, b, c, target = tempVec3h) {\n        // From https://github.com/mrdoob/three.js/blob/master/src/math/Triangle.js\n        // static/instance method to calculate barycentric coordinates\n        // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n        const v0 = tempVec3i;\n        const v1 = tempVec3j;\n        const v2 = tempVec3k;\n        v0.sub(c, a);\n        v1.sub(b, a);\n        v2.sub(point, a);\n        const dot00 = v0.dot(v0);\n        const dot01 = v0.dot(v1);\n        const dot02 = v0.dot(v2);\n        const dot11 = v1.dot(v1);\n        const dot12 = v1.dot(v2);\n        const denom = dot00 * dot11 - dot01 * dot01;\n        if (denom === 0) return target.set(-2, -1, -1);\n        const invDenom = 1 / denom;\n        const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n        return target.set(1 - u - v, v, u);\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\nconst CATMULLROM = 'catmullrom';\nconst CUBICBEZIER = 'cubicbezier';\nconst QUADRATICBEZIER = 'quadraticbezier';\n\n// temp\nconst _a0 = new Vec3(),\n    _a1 = new Vec3(),\n    _a2 = new Vec3(),\n    _a3 = new Vec3();\n\n/**\n * Get the control points of cubic bezier curve.\n * @param {*} i\n * @param {*} a\n * @param {*} b\n */\nfunction getCtrlPoint(points, i, a = 0.168, b = 0.168) {\n    if (i < 1) {\n        _a0.sub(points[1], points[0]).scale(a).add(points[0]);\n    } else {\n        _a0.sub(points[i + 1], points[i - 1])\n            .scale(a)\n            .add(points[i]);\n    }\n    if (i > points.length - 3) {\n        const last = points.length - 1;\n        _a1.sub(points[last - 1], points[last])\n            .scale(b)\n            .add(points[last]);\n    } else {\n        _a1.sub(points[i], points[i + 2])\n            .scale(b)\n            .add(points[i + 1]);\n    }\n    return [_a0.clone(), _a1.clone()];\n}\n\nfunction getQuadraticBezierPoint(t, p0, c0, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 2);\n    _a1.copy(c0).scale(2 * k * t);\n    _a2.copy(p1).scale(t ** 2);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2);\n    return ret;\n}\n\nfunction getCubicBezierPoint(t, p0, c0, c1, p1) {\n    const k = 1 - t;\n    _a0.copy(p0).scale(k ** 3);\n    _a1.copy(c0).scale(3 * k ** 2 * t);\n    _a2.copy(c1).scale(3 * k * t ** 2);\n    _a3.copy(p1).scale(t ** 3);\n    const ret = new Vec3();\n    ret.add(_a0, _a1).add(_a2).add(_a3);\n    return ret;\n}\n\nexport class Curve {\n    constructor({ points = [new Vec3(0, 0, 0), new Vec3(0, 1, 0), new Vec3(1, 1, 0), new Vec3(1, 0, 0)], divisions = 12, type = CATMULLROM } = {}) {\n        this.points = points;\n        this.divisions = divisions;\n        this.type = type;\n    }\n\n    _getQuadraticBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 3) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        const p0 = this.points[0];\n        let c0 = this.points[1],\n            p1 = this.points[2];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n            points.push(p);\n        }\n\n        let offset = 3;\n        while (count - offset > 0) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c0);\n            p1 = this.points[offset];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getQuadraticBezierPoint(i / divisions, p0, c0, p1);\n                points.push(p);\n            }\n            offset++;\n        }\n\n        return points;\n    }\n\n    _getCubicBezierPoints(divisions = this.divisions) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count < 4) {\n            console.warn('Not enough points provided.');\n            return [];\n        }\n\n        let p0 = this.points[0],\n            c0 = this.points[1],\n            c1 = this.points[2],\n            p1 = this.points[3];\n\n        for (let i = 0; i <= divisions; i++) {\n            const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n            points.push(p);\n        }\n\n        let offset = 4;\n        while (count - offset > 1) {\n            p0.copy(p1);\n            c0 = p1.scale(2).sub(c1);\n            c1 = this.points[offset];\n            p1 = this.points[offset + 1];\n            for (let i = 1; i <= divisions; i++) {\n                const p = getCubicBezierPoint(i / divisions, p0, c0, c1, p1);\n                points.push(p);\n            }\n            offset += 2;\n        }\n\n        return points;\n    }\n\n    _getCatmullRomPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const points = [];\n        const count = this.points.length;\n\n        if (count <= 2) {\n            return this.points;\n        }\n\n        let p0;\n        this.points.forEach((p, i) => {\n            if (i === 0) {\n                p0 = p;\n            } else {\n                const [c0, c1] = getCtrlPoint(this.points, i - 1, a, b);\n                const c = new Curve({\n                    points: [p0, c0, c1, p],\n                    type: CUBICBEZIER,\n                });\n                points.pop();\n                points.push(...c.getPoints(divisions));\n                p0 = p;\n            }\n        });\n\n        return points;\n    }\n\n    getPoints(divisions = this.divisions, a = 0.168, b = 0.168) {\n        const type = this.type;\n\n        if (type === QUADRATICBEZIER) {\n            return this._getQuadraticBezierPoints(divisions);\n        }\n\n        if (type === CUBICBEZIER) {\n            return this._getCubicBezierPoints(divisions);\n        }\n\n        if (type === CATMULLROM) {\n            return this._getCatmullRomPoints(divisions, a, b);\n        }\n\n        return this.points;\n    }\n}\n\nCurve.CATMULLROM = CATMULLROM;\nCurve.CUBICBEZIER = CUBICBEZIER;\nCurve.QUADRATICBEZIER = QUADRATICBEZIER;\n","// TODO: Destroy render targets if size changed and exists\n\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Post {\n    constructor(\n        gl,\n        {\n            width,\n            height,\n            dpr,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            minFilter = gl.LINEAR,\n            magFilter = gl.LINEAR,\n            geometry = new Triangle(gl),\n            targetOnly = null,\n        } = {}\n    ) {\n        this.gl = gl;\n\n        this.options = { wrapS, wrapT, minFilter, magFilter };\n\n        this.passes = [];\n\n        this.geometry = geometry;\n\n        this.uniform = { value: null };\n        this.targetOnly = targetOnly;\n\n        const fbo = (this.fbo = {\n            read: null,\n            write: null,\n            swap: () => {\n                let temp = fbo.read;\n                fbo.read = fbo.write;\n                fbo.write = temp;\n            },\n        });\n\n        this.resize({ width, height, dpr });\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = { value: this.fbo.read.texture };\n\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    resize({ width, height, dpr } = {}) {\n        if (dpr) this.dpr = dpr;\n        if (width) {\n            this.width = width;\n            this.height = height || width;\n        }\n\n        dpr = this.dpr || this.gl.renderer.dpr;\n        width = Math.floor((this.width || this.gl.renderer.width) * dpr);\n        height = Math.floor((this.height || this.gl.renderer.height) * dpr);\n\n        this.options.width = width;\n        this.options.height = height;\n\n        this.fbo.read = new RenderTarget(this.gl, this.options);\n        this.fbo.write = new RenderTarget(this.gl, this.options);\n    }\n\n    // Uses same arguments as renderer.render, with addition of optional texture passed in to avoid scene render\n    render({ scene, camera, texture, target = null, update = true, sort = true, frustumCull = true }) {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        if (!texture) {\n            this.gl.renderer.render({\n                scene,\n                camera,\n                target: enabledPasses.length || (!target && this.targetOnly) ? this.fbo.write : target,\n                update,\n                sort,\n                frustumCull,\n            });\n            this.fbo.swap();\n        }\n\n        enabledPasses.forEach((pass, i) => {\n            pass.mesh.program.uniforms[pass.textureUniform].value = !i && texture ? texture : this.fbo.read.texture;\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: i === enabledPasses.length - 1 && (target || !this.targetOnly) ? target : this.fbo.write,\n                clear: true,\n            });\n            this.fbo.swap();\n        });\n\n        this.uniform.value = this.fbo.read.texture;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst prevPos = new Vec3();\nconst prevRot = new Quat();\nconst prevScl = new Vec3();\n\nconst nextPos = new Vec3();\nconst nextRot = new Quat();\nconst nextScl = new Vec3();\n\nexport class Animation {\n    constructor({ objects, data }) {\n        this.objects = objects;\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = 1;\n        this.duration = data.frames.length - 1;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = this.elapsed % this.duration;\n\n        const floorFrame = Math.floor(elapsed);\n        const blend = elapsed - floorFrame;\n        const prevKey = this.data.frames[floorFrame];\n        const nextKey = this.data.frames[(floorFrame + 1) % this.duration];\n\n        this.objects.forEach((object, i) => {\n            prevPos.fromArray(prevKey.position, i * 3);\n            prevRot.fromArray(prevKey.quaternion, i * 4);\n            prevScl.fromArray(prevKey.scale, i * 3);\n\n            nextPos.fromArray(nextKey.position, i * 3);\n            nextRot.fromArray(nextKey.quaternion, i * 4);\n            nextScl.fromArray(nextKey.scale, i * 3);\n\n            prevPos.lerp(nextPos, blend);\n            prevRot.slerp(nextRot, blend);\n            prevScl.lerp(nextScl, blend);\n\n            object.position.lerp(prevPos, weight);\n            object.quaternion.slerp(prevRot, weight);\n            object.scale.lerp(prevScl, weight);\n        });\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Transform } from '../core/Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\nimport { Animation } from './Animation.js';\n\nconst tempMat4 = new Mat4();\n\nexport class Skin extends Mesh {\n    constructor(gl, { rig, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n\n        this.createBones(rig);\n        this.createBoneTexture();\n        this.animations = [];\n\n        Object.assign(this.program.uniforms, {\n            boneTexture: { value: this.boneTexture },\n            boneTextureSize: { value: this.boneTextureSize },\n        });\n    }\n\n    createBones(rig) {\n        // Create root so that can simply update world matrix of whole skeleton\n        this.root = new Transform();\n\n        // Create bones\n        this.bones = [];\n        if (!rig.bones || !rig.bones.length) return;\n        for (let i = 0; i < rig.bones.length; i++) {\n            const bone = new Transform();\n\n            // Set initial values (bind pose)\n            bone.position.fromArray(rig.bindPose.position, i * 3);\n            bone.quaternion.fromArray(rig.bindPose.quaternion, i * 4);\n            bone.scale.fromArray(rig.bindPose.scale, i * 3);\n\n            this.bones.push(bone);\n        }\n\n        // Once created, set the hierarchy\n        rig.bones.forEach((data, i) => {\n            this.bones[i].name = data.name;\n            if (data.parent === -1) return this.bones[i].setParent(this.root);\n            this.bones[i].setParent(this.bones[data.parent]);\n        });\n\n        // Then update to calculate world matrices\n        this.root.updateMatrixWorld(true);\n\n        // Store inverse of bind pose to calculate differences\n        this.bones.forEach((bone) => {\n            bone.bindInverse = new Mat4(...bone.worldMatrix).inverse();\n        });\n    }\n\n    createBoneTexture() {\n        if (!this.bones.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.bones.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    addAnimation(data) {\n        const animation = new Animation({ objects: this.bones, data });\n        this.animations.push(animation);\n        return animation;\n    }\n\n    update() {\n        // Calculate combined animation weight\n        let total = 0;\n        this.animations.forEach((animation) => (total += animation.weight));\n\n        this.animations.forEach((animation, i) => {\n            // force first animation to set in order to reset frame\n            animation.update(total, i === 0);\n        });\n    }\n\n    draw({ camera } = {}) {\n        // Update world matrices manually, as not part of scene graph\n        this.root.updateMatrixWorld(true);\n\n        // Update bone texture\n        this.bones.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n\n        super.draw({ camera });\n    }\n}\n","export function Text({\n    font,\n    text,\n    width = Infinity,\n    align = 'left',\n    size = 1,\n    letterSpacing = 0,\n    lineHeight = 1.4,\n    wordSpacing = 0,\n    wordBreak = false,\n}) {\n    const _this = this;\n    let glyphs, buffers;\n    let fontHeight, baseline, scale;\n\n    const newline = /\\n/;\n    const whitespace = /\\s/;\n\n    {\n        parseFont();\n        createGeometry();\n    }\n\n    function parseFont() {\n        glyphs = {};\n        font.chars.forEach((d) => (glyphs[d.char] = d));\n    }\n\n    function createGeometry() {\n        fontHeight = font.common.lineHeight;\n        baseline = font.common.base;\n\n        // Use baseline so that actual text height is as close to 'size' value as possible\n        scale = size / baseline;\n\n        // Strip spaces and newlines to get actual character length for buffers\n        let chars = text.replace(/[ \\n]/g, '');\n        let numChars = chars.length;\n\n        // Create output buffers\n        buffers = {\n            position: new Float32Array(numChars * 4 * 3),\n            uv: new Float32Array(numChars * 4 * 2),\n            id: new Float32Array(numChars * 4),\n            index: new Uint16Array(numChars * 6),\n        };\n\n        // Set values for buffers that don't require calculation\n        for (let i = 0; i < numChars; i++) {\n            buffers.id[i] = i;\n            buffers.index.set([i * 4, i * 4 + 2, i * 4 + 1, i * 4 + 1, i * 4 + 2, i * 4 + 3], i * 6);\n        }\n\n        layout();\n    }\n\n    function layout() {\n        const lines = [];\n\n        let cursor = 0;\n\n        let wordCursor = 0;\n        let wordWidth = 0;\n        let line = newLine();\n\n        function newLine() {\n            const line = {\n                width: 0,\n                glyphs: [],\n            };\n            lines.push(line);\n            wordCursor = cursor;\n            wordWidth = 0;\n            return line;\n        }\n\n        let maxTimes = 100;\n        let count = 0;\n        while (cursor < text.length && count < maxTimes) {\n            count++;\n\n            const char = text[cursor];\n\n            // Skip whitespace at start of line\n            if (!line.width && whitespace.test(char)) {\n                cursor++;\n                wordCursor = cursor;\n                wordWidth = 0;\n                continue;\n            }\n\n            // If newline char, skip to next line\n            if (newline.test(char)) {\n                cursor++;\n                line = newLine();\n                continue;\n            }\n\n            const glyph = glyphs[char] || glyphs[' '];\n\n            // Find any applicable kern pairs\n            if (line.glyphs.length) {\n                const prevGlyph = line.glyphs[line.glyphs.length - 1][0];\n                let kern = getKernPairOffset(glyph.id, prevGlyph.id) * scale;\n                line.width += kern;\n                wordWidth += kern;\n            }\n\n            // add char to line\n            line.glyphs.push([glyph, line.width]);\n\n            // calculate advance for next glyph\n            let advance = 0;\n\n            // If whitespace, update location of current word for line breaks\n            if (whitespace.test(char)) {\n                wordCursor = cursor;\n                wordWidth = 0;\n\n                // Add wordspacing\n                advance += wordSpacing * size;\n            } else {\n                // Add letterspacing\n                advance += letterSpacing * size;\n            }\n\n            advance += glyph.xadvance * scale;\n\n            line.width += advance;\n            wordWidth += advance;\n\n            // If width defined\n            if (line.width > width) {\n                // If can break words, undo latest glyph if line not empty and create new line\n                if (wordBreak && line.glyphs.length > 1) {\n                    line.width -= advance;\n                    line.glyphs.pop();\n                    line = newLine();\n                    continue;\n\n                    // If not first word, undo current word and cursor and create new line\n                } else if (!wordBreak && wordWidth !== line.width) {\n                    let numGlyphs = cursor - wordCursor + 1;\n                    line.glyphs.splice(-numGlyphs, numGlyphs);\n                    cursor = wordCursor;\n                    line.width -= wordWidth;\n                    line = newLine();\n                    continue;\n                }\n            }\n\n            cursor++;\n            // Reset infinite loop catch\n            count = 0;\n        }\n\n        // Remove last line if empty\n        if (!line.width) lines.pop();\n\n        populateBuffers(lines);\n    }\n\n    function populateBuffers(lines) {\n        const texW = font.common.scaleW;\n        const texH = font.common.scaleH;\n\n        // For all fonts tested, a little offset was needed to be right on the baseline, hence 0.07.\n        let y = 0.07 * size;\n        let j = 0;\n\n        for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n            let line = lines[lineIndex];\n\n            for (let i = 0; i < line.glyphs.length; i++) {\n                const glyph = line.glyphs[i][0];\n                let x = line.glyphs[i][1];\n\n                if (align === 'center') {\n                    x -= line.width * 0.5;\n                } else if (align === 'right') {\n                    x -= line.width;\n                }\n\n                // If space, don't add to geometry\n                if (whitespace.test(glyph.char)) continue;\n\n                // Apply char sprite offsets\n                x += glyph.xoffset * scale;\n                y -= glyph.yoffset * scale;\n\n                // each letter is a quad. axis bottom left\n                let w = glyph.width * scale;\n                let h = glyph.height * scale;\n                buffers.position.set([x, y - h, 0, x, y, 0, x + w, y - h, 0, x + w, y, 0], j * 4 * 3);\n\n                let u = glyph.x / texW;\n                let uw = glyph.width / texW;\n                let v = 1.0 - glyph.y / texH;\n                let vh = glyph.height / texH;\n                buffers.uv.set([u, v - vh, u, v, u + uw, v - vh, u + uw, v], j * 4 * 2);\n\n                // Reset cursor to baseline\n                y += glyph.yoffset * scale;\n\n                j++;\n            }\n\n            y -= size * lineHeight;\n        }\n\n        _this.buffers = buffers;\n        _this.numLines = lines.length;\n        _this.height = _this.numLines * size * lineHeight;\n        _this.width = Math.max(...lines.map((line) => line.width));\n    }\n\n    function getKernPairOffset(id1, id2) {\n        for (let i = 0; i < font.kernings.length; i++) {\n            let k = font.kernings[i];\n            if (k.first < id1) continue;\n            if (k.second < id2) continue;\n            if (k.first > id1) return 0;\n            if (k.first === id1 && k.second > id2) return 0;\n            return k.amount;\n        }\n        return 0;\n    }\n\n    // Update buffers to layout with new layout\n    this.resize = function (options) {\n        ({ width } = options);\n        layout();\n    };\n\n    // Completely change text (like creating new Text)\n    this.update = function (options) {\n        ({ text } = options);\n        createGeometry();\n    };\n}\n","import { Program } from '../core/Program.js';\n\nconst vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat3 normalMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vNormal = normalize(normalMatrix * normal);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    varying vec3 vNormal;\n\n    void main() {\n        gl_FragColor.rgb = normalize(vNormal);\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nexport function NormalProgram(gl) {\n    return new Program(gl, {\n        vertex: vertex,\n        fragment: fragment,\n        cullFace: null,\n    });\n}\n","import { RenderTarget } from '../core/RenderTarget.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Triangle } from './Triangle.js';\n\nexport class Flowmap {\n    constructor(\n        gl,\n        {\n            size = 128, // default size of the render targets\n            falloff = 0.3, // size of the stamp, percentage of the size\n            alpha = 1, // opacity of the stamp\n            dissipation = 0.98, // affects the speed that the stamp fades. Closer to 1 is slower\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        } = {}\n    ) {\n        const _this = this;\n        this.gl = gl;\n\n        // output uniform containing render target textures\n        this.uniform = { value: null };\n\n        this.mask = {\n            read: null,\n            write: null,\n\n            // Helper function to ping pong the render targets and update the uniform\n            swap: () => {\n                let temp = _this.mask.read;\n                _this.mask.read = _this.mask.write;\n                _this.mask.write = temp;\n                _this.uniform.value = _this.mask.read.texture;\n            },\n        };\n\n        {\n            createFBOs();\n\n            this.aspect = 1;\n            this.mouse = new Vec2();\n            this.velocity = new Vec2();\n\n            this.mesh = initProgram();\n        }\n\n        function createFBOs() {\n            // Requested type not supported, fall back to half float\n            if (!type) type = gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES;\n\n            let minFilter = (() => {\n                if (gl.renderer.isWebgl2) return gl.LINEAR;\n                if (gl.renderer.extensions[`OES_texture_${type === gl.FLOAT ? '' : 'half_'}float_linear`]) return gl.LINEAR;\n                return gl.NEAREST;\n            })();\n\n            const options = {\n                width: size,\n                height: size,\n                type,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n                minFilter,\n                depth: false,\n            };\n\n            _this.mask.read = new RenderTarget(gl, options);\n            _this.mask.write = new RenderTarget(gl, options);\n            _this.mask.swap();\n        }\n\n        function initProgram() {\n            return new Mesh(gl, {\n                // Triangle that includes -1 to 1 range for 'position', and 0 to 1 range for 'uv'.\n                geometry: new Triangle(gl),\n\n                program: new Program(gl, {\n                    vertex,\n                    fragment,\n                    uniforms: {\n                        tMap: _this.uniform,\n\n                        uFalloff: { value: falloff * 0.5 },\n                        uAlpha: { value: alpha },\n                        uDissipation: { value: dissipation },\n\n                        // User needs to update these\n                        uAspect: { value: 1 },\n                        uMouse: { value: _this.mouse },\n                        uVelocity: { value: _this.velocity },\n                    },\n                    depthTest: false,\n                }),\n            });\n        }\n    }\n\n    update() {\n        this.mesh.program.uniforms.uAspect.value = this.aspect;\n\n        this.gl.renderer.render({\n            scene: this.mesh,\n            target: this.mask.write,\n            clear: false,\n        });\n        this.mask.swap();\n    }\n}\n\nconst vertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n\n    uniform float uFalloff;\n    uniform float uAlpha;\n    uniform float uDissipation;\n    \n    uniform float uAspect;\n    uniform vec2 uMouse;\n    uniform vec2 uVelocity;\n\n    varying vec2 vUv;\n\n    void main() {\n        vec4 color = texture2D(tMap, vUv) * uDissipation;\n\n        vec2 cursor = vUv - uMouse;\n        cursor.x *= uAspect;\n\n        vec3 stamp = vec3(uVelocity * vec2(1, -1), 1.0 - pow(1.0 - min(1.0, length(uVelocity)), 3.0));\n        float falloff = smoothstep(uFalloff, 0.0, length(cursor)) * uAlpha;\n\n        color.rgb = mix(color.rgb, stamp, vec3(falloff));\n\n        gl_FragColor = color;\n    }\n`;\n","import { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Texture } from '../core/Texture.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\nimport { Triangle } from './Triangle.js';\n\nexport class GPGPU {\n    constructor(\n        gl,\n        {\n            // Always pass in array of vec4s (RGBA values within texture)\n            data = new Float32Array(16),\n            geometry = new Triangle(gl),\n            type, // Pass in gl.FLOAT to force it, defaults to gl.HALF_FLOAT\n        }\n    ) {\n        this.gl = gl;\n        const initialData = data;\n        this.passes = [];\n        this.geometry = geometry;\n        this.dataLength = initialData.length / 4;\n\n        // Windows and iOS only like power of 2 textures\n        // Find smallest PO2 that fits data\n        this.size = Math.pow(2, Math.ceil(Math.log(Math.ceil(Math.sqrt(this.dataLength))) / Math.LN2));\n\n        // Create coords for output texture\n        this.coords = new Float32Array(this.dataLength * 2);\n        for (let i = 0; i < this.dataLength; i++) {\n            const x = (i % this.size) / this.size; // to add 0.5 to be center pixel ?\n            const y = Math.floor(i / this.size) / this.size;\n            this.coords.set([x, y], i * 2);\n        }\n\n        // Use original data if already correct length of PO2 texture, else copy to new array of correct length\n        const floatArray = (() => {\n            if (initialData.length === this.size * this.size * 4) {\n                return initialData;\n            } else {\n                const a = new Float32Array(this.size * this.size * 4);\n                a.set(initialData);\n                return a;\n            }\n        })();\n\n        // Create output texture uniform using input float texture with initial data\n        this.uniform = {\n            value: new Texture(gl, {\n                image: floatArray,\n                target: gl.TEXTURE_2D,\n                type: gl.FLOAT,\n                format: gl.RGBA,\n                internalFormat: gl.renderer.isWebgl2 ? gl.RGBA32F : gl.RGBA,\n                wrapS: gl.CLAMP_TO_EDGE,\n                wrapT: gl.CLAMP_TO_EDGE,\n                generateMipmaps: false,\n                minFilter: gl.NEAREST,\n                magFilter: gl.NEAREST,\n                width: this.size,\n                flipY: false,\n            }),\n        };\n\n        // Create FBOs\n        const options = {\n            width: this.size,\n            height: this.size,\n            type: type || gl.HALF_FLOAT || gl.renderer.extensions['OES_texture_half_float'].HALF_FLOAT_OES,\n            format: gl.RGBA,\n            internalFormat: gl.renderer.isWebgl2 ? (type === gl.FLOAT ? gl.RGBA32F : gl.RGBA16F) : gl.RGBA,\n            minFilter: gl.NEAREST,\n            depth: false,\n            unpackAlignment: 1,\n        };\n\n        this.fbo = {\n            read: new RenderTarget(gl, options),\n            write: new RenderTarget(gl, options),\n            swap: () => {\n                let temp = this.fbo.read;\n                this.fbo.read = this.fbo.write;\n                this.fbo.write = temp;\n                this.uniform.value = this.fbo.read.texture;\n            },\n        };\n    }\n\n    addPass({ vertex = defaultVertex, fragment = defaultFragment, uniforms = {}, textureUniform = 'tMap', enabled = true } = {}) {\n        uniforms[textureUniform] = this.uniform;\n        const program = new Program(this.gl, { vertex, fragment, uniforms });\n        const mesh = new Mesh(this.gl, { geometry: this.geometry, program });\n\n        const pass = {\n            mesh,\n            program,\n            uniforms,\n            enabled,\n            textureUniform,\n        };\n\n        this.passes.push(pass);\n        return pass;\n    }\n\n    render() {\n        const enabledPasses = this.passes.filter((pass) => pass.enabled);\n\n        enabledPasses.forEach((pass, i) => {\n            this.gl.renderer.render({\n                scene: pass.mesh,\n                target: this.fbo.write,\n                clear: false,\n            });\n            this.fbo.swap();\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec2 uv;\n    attribute vec2 position;\n\n    varying vec2 vUv;\n\n    void main() {\n        vUv = uv;\n        gl_Position = vec4(position, 0, 1);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform sampler2D tMap;\n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor = texture2D(tMap, vUv);\n    }\n`;\n","import { Geometry } from '../core/Geometry.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Color } from '../math/Color.js';\n\nconst tmp = new Vec3();\n\nexport class Polyline {\n    constructor(\n        gl,\n        {\n            points, // Array of Vec3s\n            vertex = defaultVertex,\n            fragment = defaultFragment,\n            uniforms = {},\n            attributes = {}, // For passing in custom attribs\n        }\n    ) {\n        this.gl = gl;\n        this.points = points;\n        this.count = points.length;\n\n        // Create buffers\n        this.position = new Float32Array(this.count * 3 * 2);\n        this.prev = new Float32Array(this.count * 3 * 2);\n        this.next = new Float32Array(this.count * 3 * 2);\n        const side = new Float32Array(this.count * 1 * 2);\n        const uv = new Float32Array(this.count * 2 * 2);\n        const index = new Uint16Array((this.count - 1) * 3 * 2);\n\n        // Set static buffers\n        for (let i = 0; i < this.count; i++) {\n            side.set([-1, 1], i * 2);\n            const v = i / (this.count - 1);\n            uv.set([0, v, 1, v], i * 4);\n\n            if (i === this.count - 1) continue;\n            const ind = i * 2;\n            index.set([ind + 0, ind + 1, ind + 2], (ind + 0) * 3);\n            index.set([ind + 2, ind + 1, ind + 3], (ind + 1) * 3);\n        }\n\n        const geometry = (this.geometry = new Geometry(\n            gl,\n            Object.assign(attributes, {\n                position: { size: 3, data: this.position },\n                prev: { size: 3, data: this.prev },\n                next: { size: 3, data: this.next },\n                side: { size: 1, data: side },\n                uv: { size: 2, data: uv },\n                index: { size: 1, data: index },\n            })\n        ));\n\n        // Populate dynamic buffers\n        this.updateGeometry();\n\n        if (!uniforms.uResolution) this.resolution = uniforms.uResolution = { value: new Vec2() };\n        if (!uniforms.uDPR) this.dpr = uniforms.uDPR = { value: 1 };\n        if (!uniforms.uThickness) this.thickness = uniforms.uThickness = { value: 1 };\n        if (!uniforms.uColor) this.color = uniforms.uColor = { value: new Color('#000') };\n        if (!uniforms.uMiter) this.miter = uniforms.uMiter = { value: 1 };\n\n        // Set size uniforms' values\n        this.resize();\n\n        const program = (this.program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms,\n        }));\n\n        this.mesh = new Mesh(gl, { geometry, program });\n    }\n\n    updateGeometry() {\n        this.points.forEach((p, i) => {\n            p.toArray(this.position, i * 3 * 2);\n            p.toArray(this.position, i * 3 * 2 + 3);\n\n            if (!i) {\n                // If first point, calculate prev using the distance to 2nd point\n                tmp.copy(p)\n                    .sub(this.points[i + 1])\n                    .add(p);\n                tmp.toArray(this.prev, i * 3 * 2);\n                tmp.toArray(this.prev, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.next, (i - 1) * 3 * 2);\n                p.toArray(this.next, (i - 1) * 3 * 2 + 3);\n            }\n\n            if (i === this.points.length - 1) {\n                // If last point, calculate next using distance to 2nd last point\n                tmp.copy(p)\n                    .sub(this.points[i - 1])\n                    .add(p);\n                tmp.toArray(this.next, i * 3 * 2);\n                tmp.toArray(this.next, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.prev, (i + 1) * 3 * 2);\n                p.toArray(this.prev, (i + 1) * 3 * 2 + 3);\n            }\n        });\n\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.prev.needsUpdate = true;\n        this.geometry.attributes.next.needsUpdate = true;\n    }\n\n    // Only need to call if not handling resolution uniforms manually\n    resize() {\n        // Update automatic uniforms if not overridden\n        if (this.resolution) this.resolution.value.set(this.gl.canvas.width, this.gl.canvas.height);\n        if (this.dpr) this.dpr.value = this.gl.renderer.dpr;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    precision highp float;\n\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    uniform float uMiter;\n\n    varying vec2 vUv;\n\n    vec4 getPosition() {\n        mat4 mvp = projectionMatrix * modelViewMatrix;\n        vec4 current = mvp * vec4(position, 1);\n        vec4 nextPos = mvp * vec4(next, 1);\n        vec4 prevPos = mvp * vec4(prev, 1);\n\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);    \n        vec2 currentScreen = current.xy / current.w * aspect;\n        vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n        vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n    \n        vec2 dir1 = normalize(currentScreen - prevScreen);\n        vec2 dir2 = normalize(nextScreen - currentScreen);\n        vec2 dir = normalize(dir1 + dir2);\n    \n        vec2 normal = vec2(-dir.y, dir.x);\n        normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n        normal /= aspect;\n\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w * pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n\n    void main() {\n        vUv = uv;\n        gl_Position = getPosition();\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform vec3 uColor;\n    \n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor.rgb = uColor;\n        gl_FragColor.a = 1.0;\n    }\n`;\n","import { Camera } from '../core/Camera.js';\nimport { Program } from '../core/Program.js';\nimport { RenderTarget } from '../core/RenderTarget.js';\n\nexport class Shadow {\n    constructor(gl, { light = new Camera(gl), width = 1024, height = width }) {\n        this.gl = gl;\n\n        this.light = light;\n\n        this.target = new RenderTarget(gl, { width, height });\n\n        this.depthProgram = new Program(gl, {\n            vertex: defaultVertex,\n            fragment: defaultFragment,\n            cullFace: null,\n        });\n\n        this.castMeshes = [];\n    }\n\n    add({\n        mesh,\n        receive = true,\n        cast = true,\n        vertex = defaultVertex,\n        fragment = defaultFragment,\n        uniformProjection = 'shadowProjectionMatrix',\n        uniformView = 'shadowViewMatrix',\n        uniformTexture = 'tShadow',\n    }) {\n        // Add uniforms to existing program\n        if (receive && !mesh.program.uniforms[uniformProjection]) {\n            mesh.program.uniforms[uniformProjection] = { value: this.light.projectionMatrix };\n            mesh.program.uniforms[uniformView] = { value: this.light.viewMatrix };\n            mesh.program.uniforms[uniformTexture] = { value: this.target.texture };\n        }\n\n        if (!cast) return;\n        this.castMeshes.push(mesh);\n\n        // Store program for when switching between depth override\n        mesh.colorProgram = mesh.program;\n\n        // Check if depth program already attached\n        if (mesh.depthProgram) return;\n\n        // Use global depth override if nothing custom passed in\n        if (vertex === defaultVertex && fragment === defaultFragment) {\n            mesh.depthProgram = this.depthProgram;\n            return;\n        }\n\n        // Create custom override program\n        mesh.depthProgram = new Program(this.gl, {\n            vertex,\n            fragment,\n            cullFace: null,\n        });\n    }\n\n    render({ scene }) {\n        // For depth render, replace program with depth override.\n        // Hide meshes not casting shadows.\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.depthProgram;\n            } else {\n                node.isForceVisibility = node.visible;\n                node.visible = false;\n            }\n        });\n\n        // Render the depth shadow map using the light as the camera\n        this.gl.renderer.render({\n            scene,\n            camera: this.light,\n            target: this.target,\n        });\n\n        // Then switch the program back to the normal one\n        scene.traverse((node) => {\n            if (!node.draw) return;\n            if (!!~this.castMeshes.indexOf(node)) {\n                node.program = node.colorProgram;\n            } else {\n                node.visible = node.isForceVisibility;\n            }\n        });\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    attribute vec3 position;\n    attribute vec2 uv;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    void main() {\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    vec4 packRGBA (float v) {\n        vec4 pack = fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * v);\n        pack -= pack.yzww * vec2(1.0 / 255.0, 0.0).xxxy;\n        return pack;\n    }\n\n    void main() {\n        gl_FragColor = packRGBA(gl_FragCoord.z);\n    }\n`;\n","import { Texture } from '../core/Texture.js';\n\n// TODO: Support cubemaps\n// Generate textures using https://github.com/TimvanScherpenzeel/texture-compressor\n\nexport class KTXTexture extends Texture {\n    constructor(gl, { buffer, wrapS = gl.CLAMP_TO_EDGE, wrapT = gl.CLAMP_TO_EDGE, anisotropy = 0, minFilter, magFilter } = {}) {\n        super(gl, {\n            generateMipmaps: false,\n            wrapS,\n            wrapT,\n            anisotropy,\n            minFilter,\n            magFilter,\n        });\n\n        if (buffer) return this.parseBuffer(buffer);\n    }\n\n    parseBuffer(buffer) {\n        const ktx = new KhronosTextureContainer(buffer);\n        ktx.mipmaps.isCompressedTexture = true;\n\n        // Update texture\n        this.image = ktx.mipmaps;\n        this.internalFormat = ktx.glInternalFormat;\n        if (ktx.numberOfMipmapLevels > 1) {\n            if (this.minFilter === this.gl.LINEAR) this.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        } else {\n            if (this.minFilter === this.gl.NEAREST_MIPMAP_LINEAR) this.minFilter = this.gl.LINEAR;\n        }\n\n        // TODO: support cube maps\n        // ktx.numberOfFaces\n    }\n}\n\nfunction KhronosTextureContainer(buffer) {\n    const idCheck = [0xab, 0x4b, 0x54, 0x58, 0x20, 0x31, 0x31, 0xbb, 0x0d, 0x0a, 0x1a, 0x0a];\n    const id = new Uint8Array(buffer, 0, 12);\n    for (let i = 0; i < id.length; i++) if (id[i] !== idCheck[i]) return console.error('File missing KTX identifier');\n\n    // TODO: Is this always 4? Tested: [android, macos]\n    const size = Uint32Array.BYTES_PER_ELEMENT;\n    const head = new DataView(buffer, 12, 13 * size);\n    const littleEndian = head.getUint32(0, true) === 0x04030201;\n    const glType = head.getUint32(1 * size, littleEndian);\n    if (glType !== 0) return console.warn('only compressed formats currently supported');\n    this.glInternalFormat = head.getUint32(4 * size, littleEndian);\n    let width = head.getUint32(6 * size, littleEndian);\n    let height = head.getUint32(7 * size, littleEndian);\n    this.numberOfFaces = head.getUint32(10 * size, littleEndian);\n    this.numberOfMipmapLevels = Math.max(1, head.getUint32(11 * size, littleEndian));\n    const bytesOfKeyValueData = head.getUint32(12 * size, littleEndian);\n\n    this.mipmaps = [];\n    let offset = 12 + 13 * 4 + bytesOfKeyValueData;\n    for (let level = 0; level < this.numberOfMipmapLevels; level++) {\n        const levelSize = new Int32Array(buffer, offset, 1)[0]; // size per face, since not supporting array cubemaps\n        offset += 4; // levelSize field\n        for (let face = 0; face < this.numberOfFaces; face++) {\n            const data = new Uint8Array(buffer, offset, levelSize);\n            this.mipmaps.push({ data, width, height });\n            offset += levelSize;\n            offset += 3 - ((levelSize + 3) % 4); // add padding for odd sized image\n        }\n        width = width >> 1;\n        height = height >> 1;\n    }\n}\n","import { Texture } from '../core/Texture.js';\nimport { KTXTexture } from './KTXTexture.js';\n\n// For compressed textures, generate using https://github.com/TimvanScherpenzeel/texture-compressor\n\nlet cache = {};\nconst supportedExtensions = [];\n\nexport class TextureLoader {\n    static load(\n        gl,\n        {\n            src, // string or object of extension:src key-values\n            // {\n            //     pvrtc: '...ktx',\n            //     s3tc: '...ktx',\n            //     etc: '...ktx',\n            //     etc1: '...ktx',\n            //     astc: '...ktx',\n            //     webp: '...webp',\n            //     jpg: '...jpg',\n            //     png: '...png',\n            // }\n\n            // Only props relevant to KTXTexture\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            anisotropy = 0,\n\n            // For regular images\n            format = gl.RGBA,\n            internalFormat = format,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = true,\n        } = {}\n    ) {\n        const support = this.getSupportedExtensions(gl);\n        let ext = 'none';\n\n        // If src is string, determine which format from the extension\n        if (typeof src === 'string') {\n            ext = src.split('.').pop().split('?')[0].toLowerCase();\n        }\n\n        // If src is object, use supported extensions and provided list to choose best option\n        // Get first supported match, so put in order of preference\n        if (typeof src === 'object') {\n            for (const prop in src) {\n                if (support.includes(prop.toLowerCase())) {\n                    ext = prop.toLowerCase();\n                    src = src[prop];\n                    break;\n                }\n            }\n        }\n\n        // Stringify props\n        const cacheID =\n            src +\n            wrapS +\n            wrapT +\n            anisotropy +\n            format +\n            internalFormat +\n            generateMipmaps +\n            minFilter +\n            magFilter +\n            premultiplyAlpha +\n            unpackAlignment +\n            flipY +\n            gl.renderer.id;\n\n        // Check cache for existing texture\n        if (cache[cacheID]) return cache[cacheID];\n\n        let texture;\n        switch (ext) {\n            case 'ktx':\n            case 'pvrtc':\n            case 's3tc':\n            case 'etc':\n            case 'etc1':\n            case 'astc':\n                // Load compressed texture using KTX format\n                texture = new KTXTexture(gl, {\n                    src,\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    minFilter,\n                    magFilter,\n                });\n                texture.loaded = this.loadKTX(src, texture);\n                break;\n            case 'webp':\n            case 'jpg':\n            case 'jpeg':\n            case 'png':\n                texture = new Texture(gl, {\n                    wrapS,\n                    wrapT,\n                    anisotropy,\n                    format,\n                    internalFormat,\n                    generateMipmaps,\n                    minFilter,\n                    magFilter,\n                    premultiplyAlpha,\n                    unpackAlignment,\n                    flipY,\n                });\n                texture.loaded = this.loadImage(gl, src, texture, flipY);\n                break;\n            default:\n                console.warn('No supported format supplied');\n                texture = new Texture(gl);\n        }\n\n        texture.ext = ext;\n        cache[cacheID] = texture;\n        return texture;\n    }\n\n    static getSupportedExtensions(gl) {\n        if (supportedExtensions.length) return supportedExtensions;\n\n        const extensions = {\n            pvrtc: gl.renderer.getExtension('WEBGL_compressed_texture_pvrtc') || gl.renderer.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc'),\n            s3tc: gl.renderer.getExtension('WEBGL_compressed_texture_s3tc'),\n            // etc: gl.renderer.getExtension('WEBGL_compressed_texture_etc'),\n            etc1: gl.renderer.getExtension('WEBGL_compressed_texture_etc1'),\n            astc: gl.renderer.getExtension('WEBGL_compressed_texture_astc'),\n            bc7: gl.renderer.getExtension('EXT_texture_compression_bptc'),\n        };\n\n        for (const ext in extensions) if (extensions[ext]) supportedExtensions.push(ext);\n\n        // Check for WebP support\n        if (detectWebP()) supportedExtensions.push('webp');\n\n        // Formats supported by all\n        supportedExtensions.push('png', 'jpg');\n\n        return supportedExtensions;\n    }\n\n    static loadKTX(src, texture) {\n        return fetch(src)\n            .then((res) => res.arrayBuffer())\n            .then((buffer) => texture.parseBuffer(buffer));\n    }\n\n    static loadImage(gl, src, texture, flipY) {\n        return decodeImage(src, flipY).then((imgBmp) => {\n            // Catch non POT textures and update params to avoid errors\n            if (!powerOfTwo(imgBmp.width) || !powerOfTwo(imgBmp.height)) {\n                if (texture.generateMipmaps) texture.generateMipmaps = false;\n                if (texture.minFilter === gl.NEAREST_MIPMAP_LINEAR) texture.minFilter = gl.LINEAR;\n                if (texture.wrapS === gl.REPEAT) texture.wrapS = texture.wrapT = gl.CLAMP_TO_EDGE;\n            }\n\n            texture.image = imgBmp;\n\n            // For createImageBitmap, close once uploaded\n            texture.onUpdate = () => {\n                if (imgBmp.close) imgBmp.close();\n                texture.onUpdate = null;\n            };\n\n            return imgBmp;\n        });\n    }\n\n    static clearCache() {\n        cache = {};\n    }\n}\n\nfunction detectWebP() {\n    return document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') == 0;\n}\n\nfunction powerOfTwo(value) {\n    // (width & (width - 1)) !== 0\n    return Math.log2(value) % 1 === 0;\n}\n\nfunction decodeImage(src, flipY) {\n    return new Promise((resolve) => {\n        // Only chrome's implementation of createImageBitmap is fully supported\n        const isChrome = navigator.userAgent.toLowerCase().includes('chrome');\n        if (!!window.createImageBitmap && isChrome) {\n            fetch(src, { mode: 'cors' })\n                .then(r => r.blob())\n                .then(b => createImageBitmap(b, { imageOrientation: flipY ? 'flipY' : 'none', premultiplyAlpha: 'none' }))\n                .then(resolve);\n        } else {\n            const img = new Image();\n\n            img.crossOrigin = '';\n            img.src = src;\n            img.onload = () => resolve(img);\n        }\n    });\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\n\nconst tempMat4 = new Mat4();\nconst identity = new Mat4();\n\nexport class GLTFSkin extends Mesh {\n    constructor(gl, { skeleton, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n        this.skeleton = skeleton;\n        this.program = program;\n        this.createBoneTexture();\n        this.animations = [];\n    }\n\n    createBoneTexture() {\n        if (!this.skeleton.joints.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.skeleton.joints.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    // addAnimation(data) {\n    //     const animation = new Animation({ objects: this.bones, data });\n    //     this.animations.push(animation);\n    //     return animation;\n    // }\n\n    // updateAnimations() {\n    //     // Calculate combined animation weight\n    //     let total = 0;\n    //     this.animations.forEach((animation) => (total += animation.weight));\n\n    //     this.animations.forEach((animation, i) => {\n    //         // force first animation to set in order to reset frame\n    //         animation.update(total, i === 0);\n    //     });\n    // }\n\n    updateUniforms() {\n        // Update bone texture\n        this.skeleton.joints.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n    }\n\n    draw({ camera } = {}) {\n        if (!this.program.uniforms.boneTexture) {\n            Object.assign(this.program.uniforms, {\n                boneTexture: { value: this.boneTexture },\n                boneTextureSize: { value: this.boneTextureSize },\n            });\n        }\n\n        this.updateUniforms();\n\n        // Switch the world matrix with identity to ignore any transforms\n        // on the mesh itself - only use skeleton's transforms\n        const _worldMatrix = this.worldMatrix;\n        this.worldMatrix = identity;\n\n        super.draw({ camera });\n\n        // Switch back to leave identity untouched\n        this.worldMatrix = _worldMatrix;\n    }\n}\n","let supportedFormat;\nlet id = 0;\n\nexport class BasisManager {\n    constructor(workerSrc) {\n        if (!supportedFormat) supportedFormat = this.getSupportedFormat();\n        this.onMessage = this.onMessage.bind(this);\n        this.queue = new Map();\n        this.initWorker(workerSrc);\n    }\n\n    getSupportedFormat() {\n        const gl = document.createElement('canvas').getContext('webgl');\n        /* if (!!gl.getExtension('WEBGL_compressed_texture_etc')) {\n            return 'etc2';\n        } else  */\n        if (!!gl.getExtension('WEBGL_compressed_texture_astc')) {\n            return 'astc';\n        } else if (!!gl.getExtension('EXT_texture_compression_bptc')) {\n            return 'bptc';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_s3tc')) {\n            return 's3tc';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_etc1')) {\n            return 'etc1';\n        } else if (!!gl.getExtension('WEBGL_compressed_texture_pvrtc') || !!gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc')) {\n            return 'pvrtc';\n            // } else if (!!gl.getExtension('WEBGL_compressed_texture_atc')) {\n            //     return 'atc';\n        }\n        return 'none';\n    }\n\n    initWorker(workerSrc) {\n        this.worker = new Worker(workerSrc);\n        this.worker.onmessage = this.onMessage;\n    }\n\n    onMessage({ data }) {\n        const { id, error, image } = data;\n        if (error) {\n            console.log(error, id);\n            return;\n        }\n        const textureResolve = this.queue.get(id);\n        this.queue.delete(id);\n        image.isBasis = true;\n        textureResolve(image);\n    }\n\n    parseTexture(buffer) {\n        id++;\n        this.worker.postMessage({\n            id,\n            buffer,\n            supportedFormat,\n        });\n        let textureResolve;\n        const promise = new Promise((res) => (textureResolve = res));\n        this.queue.set(id, textureResolve);\n        return promise;\n    }\n}\n","// Core\nexport { Geometry } from './core/Geometry.js';\nexport { Program } from './core/Program.js';\nexport { Renderer } from './core/Renderer.js';\nexport { Camera } from './core/Camera.js';\nexport { Transform } from './core/Transform.js';\nexport { Mesh } from './core/Mesh.js';\nexport { Texture } from './core/Texture.js';\nexport { RenderTarget } from './core/RenderTarget.js';\n\n// Maths\nexport { Color } from './math/Color.js';\nexport { Euler } from './math/Euler.js';\nexport { Mat3 } from './math/Mat3.js';\nexport { Mat4 } from './math/Mat4.js';\nexport { Quat } from './math/Quat.js';\nexport { Vec2 } from './math/Vec2.js';\nexport { Vec3 } from './math/Vec3.js';\nexport { Vec4 } from './math/Vec4.js';\n\n// Extras\nexport { Plane } from './extras/Plane.js';\nexport { Box } from './extras/Box.js';\nexport { Sphere } from './extras/Sphere.js';\nexport { Cylinder } from './extras/Cylinder.js';\nexport { Triangle } from './extras/Triangle.js';\nexport { Torus } from './extras/Torus.js';\nexport { Orbit } from './extras/Orbit.js';\nexport { Raycast } from './extras/Raycast.js';\nexport { Curve } from './extras/Curve.js';\nexport { Post } from './extras/Post.js';\nexport { Skin } from './extras/Skin.js';\nexport { Animation } from './extras/Animation.js';\nexport { Text } from './extras/Text.js';\nexport { NormalProgram } from './extras/NormalProgram.js';\nexport { Flowmap } from './extras/Flowmap.js';\nexport { GPGPU } from './extras/GPGPU.js';\nexport { Polyline } from './extras/Polyline.js';\nexport { Shadow } from './extras/Shadow.js';\nexport { KTXTexture } from './extras/KTXTexture.js';\nexport { TextureLoader } from './extras/TextureLoader.js';\n//export { GLTFLoader } from './extras/GLTFLoader.js';\nexport { GLTFSkin } from './extras/GLTFSkin.js';\nexport { BasisManager } from './extras/BasisManager.js';\n","\n  import { Renderer, Transform, Vec3, Color, Polyline, Post } from 'ogl';\nconst lines = ()=>{\n    const vertex = /* glsl */ `\n    precision highp float;\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    vec4 getPosition() {\n        vec4 current = vec4(position, 1);\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);\n        vec2 nextScreen = next.xy * aspect;\n        vec2 prevScreen = prev.xy * aspect;\n    \n        // Calculate the tangent direction\n        vec2 tangent = normalize(nextScreen - prevScreen);\n    \n        // Rotate 90 degrees to get the normal\n        vec2 normal = vec2(-tangent.y, tangent.x);\n        normal /= aspect;\n        // Taper the line to be fatter in the middle, and skinny at the ends using the uv.y\n        normal *= mix(1.0, 0.1, pow(abs(uv.y - 0.5) * 2.0, 2.0) );\n        // When the points are on top of each other, shrink the line to avoid artifacts.\n        float dist = length(nextScreen - prevScreen);\n        normal *= smoothstep(0.0, 0.06, dist);\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w* pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n    void main() {\n        gl_Position = getPosition();\n    }\n`;\n\n{\n    const renderer = new Renderer({ dpr: 2 });\n    const gl = renderer.gl;\n    document.body.appendChild(gl.canvas);\n    \n    gl.clearColor(0.945,0.945,0.945, 0.1);\n\n    const scene = new Transform();\n\n    const lines = [];\n\n    function resize() {\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        // We call resize on the polylines to update their resolution uniforms\n        lines.forEach((line) => line.polyline.resize());\n    }\n    window.addEventListener('resize', resize, false);\n\n    // Just a helper function to make the code neater\n    function random(a, b) {\n        const alpha = Math.random();\n        return a * (1.0 - alpha) + b * alpha;\n    }\n\n    // If you're interested in learning about drawing lines with geometry,\n    // go through this detailed article by Matt DesLauriers\n    // https://mattdesl.svbtle.com/drawing-lines-is-hard\n    // It's an excellent breakdown of the approaches and their pitfalls.\n\n    // In this example, we're making screen-space polylines. Basically it\n    // involves creating a geometry of vertices along a path - with two vertices\n    // at each point. Then in the vertex shader, we push each pair apart to\n    // give the line some width.\n\n    // We're going to make a number of different coloured lines for fun.\n    ['#e09f7d', '#ffffff', '#ec4067', '#a01a7d', '#11071a'].forEach((color, i) => {\n        // Store a few values for each lines' spring movement\n        const line = {\n            spring: random(0.02, 0.1),\n            friction: random(0.7, 0.95),\n            mouseVelocity: new Vec3(),\n            mouseOffset: new Vec3(random(-1, 1) * 0.02),\n        };\n\n        // Create an array of Vec3s (eg [[0, 0, 0], ...])\n        // Note: Only pass in one for each point on the line - the class will handle\n        // the doubling of vertices for the polyline effect.\n        const count = 30;\n        const points = (line.points = []);\n        for (let i = 0; i < count; i++) points.push(new Vec3());\n\n        // Pass in the points, and any custom elements - for example here we've made\n        // custom shaders, and accompanying uniforms.\n        line.polyline = new Polyline(gl, {\n            points,\n            vertex,\n            uniforms: {\n                uColor: { value: new Color(color) },\n                uThickness: { value: random(10, 150) },\n            },\n        });\n\n        line.polyline.mesh.setParent(scene);\n\n        lines.push(line);\n    });\n\n    // Call initial resize after creating the polylines\n    resize();\n\n    // Add handlers to get mouse position\n    const mouse = new Vec3();\n    if ('ontouchstart' in window) {\n        window.addEventListener('touchstart', updateMouse, false);\n        window.addEventListener('touchmove', updateMouse, false);\n    } else {\n        window.addEventListener('mousemove', updateMouse, false);\n    }\n\n    function updateMouse(e) {\n        if (e.changedTouches && e.changedTouches.length) {\n            e.x = e.changedTouches[0].pageX;\n            e.y = e.changedTouches[0].pageY;\n        }\n        if (e.x === undefined) {\n            e.x = e.pageX;\n            e.y = e.pageY;\n        }\n\n        // Get mouse value in -1 to 1 range, with y flipped\n        mouse.set((e.x / gl.renderer.width) * 2 - 1, (e.y / gl.renderer.height) * -2 + 1, 0);\n    }\n\n    const tmp = new Vec3();\n\n    requestAnimationFrame(update);\n    function update(t) {\n        requestAnimationFrame(update);\n\n        lines.forEach((line) => {\n            // Update polyline input points\n            for (let i = line.points.length - 1; i >= 0; i--) {\n                if (!i) {\n                    // For the first point, spring ease it to the mouse position\n                    tmp.copy(mouse).add(line.mouseOffset).sub(line.points[i]).multiply(line.spring);\n                    line.mouseVelocity.add(tmp).multiply(line.friction);\n                    line.points[i].add(line.mouseVelocity);\n                } else {\n                    // The rest of the points ease to the point in front of them, making a line\n                    line.points[i].lerp(line.points[i - 1], 0.9);\n                }\n            }\n            line.polyline.updateGeometry();\n        });\n\n        renderer.render({ scene });\n    }\n}\n  \n}\n\n\nexport default lines;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var core = module.exports = { version: '2.6.12' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","module.exports = require(\"core-js/library/fn/object/define-property\");","var _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","const Navbar =()=>{\n    const template = `\n        <nav>\n            <button id=\"home\">About Me </button>\n            <button id=\"experiment\">Experiments</button> \n            <button id=\"project\">Work</button> \n        </nav>\n       \n    `;\n    return template;\n}\nexport default Navbar;\n","const Contact = () => {\n\tconst template = `\n\n        <ul id=\"links\">\n            <a href =\"https://www.instagram.com/cyrstem/\"target=\"_blank\"><img src=\"insta.png\" width=\"20\"></a>\n                <a href =\"http://ec.linkedin.com/in/jacobohz\" target=\"_blank\"><img src=\"in.png\" width=\"20\"></a>\n            <a href =\"https://github.com/cyrstem/\" target=\"_blank\"><img src=\"git.png\" width=\"20\"></a>\n        </ul>\n    `;\n\treturn template;\n};\nexport default Contact;\n","const Home = () => {\n    const template = `\n    \n        <main>\n        <h1>Hello..</h1>\n            <p>I'm <b>Jacob</b> a <b>Creative Developer</b> and <b>Front-End Developer</b> based in Quito - Ecuador.</p> \n            <p>I specialize building custom digital or physical experiences,</p>\n            <p><b>self-taught</b> developer, <b>fast learner</b> that works with<b> WebGL, JS, C++, OpenGL, GLSL</b></p>\n            <p>and recently curious about <b>Machine Learning.</b></p>\n            <p> contact me at <b>cyrstem[at]gmail[dot]com</b></p>   \n        </main>\n    `;\n    return template;\n};\nexport default Home;\n","const Portafolio = () => {\n  const template = `\n      <div class =\"sites\"> \n         <ul>\n         <li>\n          <a href=\"https://activetheory.net/\" target=\"_blank\">\n            <span>Active Theory</span> \n            <span>WebGL Developer</span>\n            <span>2021</span>\n          </a>\n         </li>\n         <li>\n            <a href=\"https://myuniguru.com/\" target=\"_blank\">\n              <span>My Uniguru</span>\n              <span>FullStack Developer</span>\n              <span class=\"number\">2020</span>\n            </a>\n          </li>\n          <li>\n          <a href=\"https://smartco.com.ec\" target=\"_blank\"> \n            <span>Smartco </span>\n            <span>Unity Developer</span>\n            <span class=\"number\">2019 - 2020</span>\n          </a>\n        </li>\n          <li>\n            <a href=\"https://www.yaesta.com\" target=\"_blank\">\n              <span> YaEsta </span>\n              <span> Front-end  & Designer</span> \n              <span class=\"number\">2016 - 2018</span>\n            </a>\n          </li>\n          \n      \n          <li>\n            <a href=\"https://www.pachamama.org.ec/en/\" target=\"_blank\">\n              <span> Pachamama</span>\n              <span> Front-end Developer</span>\n              <span class=\"number\">2010 – 2013</span>\n            </a>\n          </li>\n         </ul>\n      </div>\n    `;\n  return template;\n};\n\nexport default Portafolio;\n","const Experiments = () => {\n\tconst template = `\n   <div id=\"portafolio\">\n    <section class=\"proj\">\n        <a href=\"https://movingphoton.friendred.studio/\" target=\"_blank\"> <img src=\"poster4.jpg\" width=\"500\" /></a>\n    </section>\n    <section class=\"info\">\n        <h2>Moving Photon</h2>\n        <p>I Help develop and deploy the Virtual Experience for\n            <a href=\"https://friendred.studio/2021/10/07/moving-photon/\" target=\"_blank\">Moving Photon</a> an\n            interactive installation/performance\n            created by installation artist<a href=\"https://friendred.studio\" target=\"_blank\">Friendred Peng.</a>\n            Participation in Moving Photon can be in 5 different ways, including a Phantom performance,\n            interactive installation, interactive performance,interactive performance with EEG and a <a\n                href=\"https://movingphoton.friendred.studio/\" target=\"_blank\"> remote performance.</a>\n    </section>\n    <section class=\"info\">\n    <h2>Glitch MAchine</h2>\n        <p>A custom Glitch App build for<a href=\"https://www.instagram.com/jenna___marsh/ target=\"_blank\">Jenna Marsh</a>, it lets you play with a image applying different filters and export the resulting image for printing</p>\n    </section>\n    <section class=\"proj\">\n        <a href=\"https://www.instagram.com/p/CNRC1QZHf66/\"> <img src= \"insta-0.jpg\" width=\"500\"/></a>\n     </section>\n     <section class=\"proj\">\n       <a href=\"https://onesimpleidea.itch.io/noizu\" target=\"_blank\"><img src= \"noizu.png\" width=\"500\"/></a>\n    </section>\n    <section class=\"info\">\n    <h2>Noizu</h2>\n        <p>Custom build a Audio player for Linux and mac. on building a light and simple player for linux, based on my old love to sonique and winamp i do miss those programs when ui and ux was actually interesting and different every time this is a preview</p>\n     </section>\n     <section class=\"info\">\n     <h2>PACMan YaEsta.com</h2>\n     <p>Develop a Physical installation with Mapping and live interaction  for the launch of the e-commerce site YaEsta.com back in the day</p>\n      </section>\n    <section class=\"proj\">\n       <a href=\"https://www.youtube.com/watch?v=YHZd0TxPMkY\"> <img src= \"insta-3.jpg\" width=\"500\"/></a>  \n    </section>\n   \n</div>\n    `;\n\treturn template;\n};\nexport default Experiments;\n","import Navbar from \"./interface/Nav\";\nimport Contact from \"./interface/Contact\";\nimport Home from \"./pages/Home\";\nimport Portafolio from \"./pages/Portafolio\";\nimport Experiments from \"./pages/Experiments\";\n\n\nexport default class GUIView{\n    constructor(){}\n\n    init(){\n        this.load();\n        this.addListeners();\n        this.simpleSign();\n        //this.responsive();\n    }\n    load(){\n      \n        \t//load UI and socials media  plus main content\n        document.getElementById(\"ui\").innerHTML = Navbar();\n        document.getElementById(\"container\").innerHTML = Home();\n        document.getElementById(\"contact\").innerHTML = Contact();\n\n    }\n    addListeners(){\n        window.addEventListener(\"click\", (event) => {\n            let links = event.target.id;\n            switch (links) {\n                case 'home':\n                    document.getElementById(\"container\").innerHTML = Home();\n                    \n                    break;\n                case 'experiment':\n                    document.getElementById(\"container\").innerHTML = Experiments();\n                \n                    break;\n                case 'project':\n                    document.getElementById(\"container\").innerHTML = Portafolio();\n                    break;\n            }\n        \n        }, false);\n        \n    }\n    responsive(){\n        \t//responsive screens\n        var x = window.matchMedia(\"(max-width: 700px)\");\n        if (x.matches) {\n            //console.log(\"responsive biatch\");\n            document.addEventListener(\"click\", function (event) {\n                if (event.target.id !== \"experiment\") return;\n                document.getElementById(\"container\").innerHTML = Experiments();\n                document.getElementById(\"ui\").style.top = \"10vh\";\n            });\n        }\n    }\n    simpleSign(){\n        if (window.navigator.userAgent.toLowerCase().indexOf(\"chrome\") > -1) {\n            const args = [\n                \"\\n %c -created by Cyrstem \\n\",\n                \"border: 1px solid #000;color: #fff; background: #171717; padding:5px 0;\",\n            ];\n            window.console.log.apply(console, args);\n        } else if (window.console) {\n            window.console.log(\"-created by cyrstem  -\");\n        }\n    }\n}","\nimport \"./style/main.scss\";\nimport lines from \"./js/follow\";\nimport GUIView from \"./js/app\";\nconst app = () => {\n\tlet  ui = new GUIView();\n\tui.init();\n\tlines();\n};\n\nwindow.onload = (event) => {\n\tapp();\n};\n"]}